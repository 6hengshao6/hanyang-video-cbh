// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define(["exports","../../request","../../core/Error","../../core/maybe","../../core/urlUtils"],function(e,t,p,h,k){function q(a){const b=a.lastIndexOf("/");return-1===b?[".",a]:[a.slice(0,b),a.slice(b+1)]}function n(a){{const f=k.getPathExtension(a);a=h.isNone(f)?[a,""]:[a.slice(0,a.length-f.length-1),`.${f}`]}const [b,d]=a,[c,l]=q(b);return[c,l,d]}async function r(a){return a instanceof Blob?a:(await t(a.url,{responseType:"blob"})).data}e.addOrUpdateResource=async function(a,b,d,c){if(!a.hasPath())throw new p(`portal-item-resource-${b}:invalid-path`,
"Resource does not have a valid path");const l=a.portalItem;await l.load(c);b=k.join(l.userItemUrl,"add"===b?"addResources":"updateResources");const [f,m]=q(a.path);d=await r(d);const g=new FormData;f&&"."!==f&&g.append("resourcesPrefix",f);h.isSome(c)&&c.compress&&g.append("compress","true");g.append("fileName",m);g.append("file",d,m);g.append("f","json");h.isSome(c)&&c.access&&g.append("access",c.access);await l.portal.request(b,{method:"post",body:g,signal:h.get(c,"signal")});return a};e.contentToBlob=
r;e.fetchResources=async function(a,b={},d){await a.load(d);var c=k.join(a.itemUrl,"resources");const {start:l=1,num:f=10,sortOrder:m="asc",sortField:g="created"}=b;b={query:{start:l,num:f,sortOrder:m,sortField:g,token:a.apiKey},signal:h.get(d,"signal")};c=await a.portal.request(c,b);return{total:c.total,nextStart:c.nextStart,resources:c.resources.map(({created:u,size:v,resource:w})=>({created:new Date(u),size:v,resource:a.resourceFromPath(w)}))}};e.getSiblingOfSameType=function(a,b){if(!a.hasPath())return null;
const [d,,c]=n(a.path);return a.portalItem.resourceFromPath(k.join(d,b+c))};e.getSiblingOfSameTypeI=function(a,b){if(!a.hasPath())return null;const [d,,c]=n(a.path);return a.portalItem.resourceFromPath(k.join(d,b+c))};e.removeAllResources=async function(a,b){await a.load(b);const d=k.join(a.userItemUrl,"removeResources");return a.portal.request(d,{method:"post",query:{deleteAll:!0},signal:h.get(b,"signal")})};e.removeResource=async function(a,b,d){if(!b.hasPath())throw new p("portal-item-resources-remove:invalid-path",
"Resource does not have a valid path");await a.load(d);const c=k.join(a.userItemUrl,"removeResources");await a.portal.request(c,{method:"post",query:{resource:b.path},signal:h.get(d,"signal")});b.portalItem=null};e.splitPrefixFileNameAndExtension=n;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});