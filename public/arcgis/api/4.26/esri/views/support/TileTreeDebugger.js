// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../Color ../../Graphic ../../core/Accessor ../../core/mathUtils ../../core/maybe ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/arrayUtils ../../core/has ../../core/accessorSupport/decorators/subclass ../../symbols/PointSymbol3D ../../symbols/SimpleFillSymbol ../../symbols/TextSymbol ../../symbols/TextSymbol3DLayer".split(" "),function(e,n,l,A,u,B,v,m,p,J,K,L,C,D,E,F,G){const H=
[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];e.TileTreeDebugger=function(g){function h(b){b=I.call(this,b);b.updating=!1;b.enablePolygons=!0;b.enableLabels=!0;b._polygons=new Map;b._labels=new Map;b._enabled=!0;return b}n._inherits(h,g);var I=n._createSuper(h);g=h.prototype;g.initialize=function(){this._symbols=
H.map(b=>new E({color:[b[0],b[1],b[2],.6],outline:{color:"black",width:1}}));this.update()};g.destroy=function(){this._enabled=!1;this.clear()};g.update=function(){if(this._enabled){var b=a=>{if(m.isSome(a.label))return a.label;let c=a.lij.toString();m.isSome(a.loadPriority)&&(c+=` (${a.loadPriority})`);return c},q=this.getTiles(),r=[],w=new Set(this._labels.keys());q.forEach((a,c)=>{var d=a.lij.toString();w.delete(d);var f=a.lij[0],k=a.geometry;this.enablePolygons&&!this._polygons.has(d)&&(f=new u({geometry:k,
symbol:this._symbols[f%this._symbols.length]}),this._polygons.set(d,f),r.push(f));if(this.enableLabels){const x=b(a);f=c/(q.length-1);c=v.lerp(0,200,f);const y=v.lerp(20,6,f)/.75;a=m.isSome(a.loadPriority)&&a.loadPriority>=q.length;const z=new A([c,a?0:c,a?0:c]);c="3d"===this.view.type?()=>new D({verticalOffset:{screenLength:40/.75},callout:{type:"line",color:"white",border:{color:"black"}},symbolLayers:[new G({text:x,halo:{color:"white",size:1/.75},material:{color:z},size:y})]}):()=>new F({text:x,
haloColor:"white",haloSize:1/.75,color:z,size:y});if(a=this._labels.get(d)){if(d=c(),m.isNone(a.symbol)||JSON.stringify(d)!==JSON.stringify(a.symbol))a.symbol=d}else k=new u({geometry:k.extent.center,symbol:c()}),this._labels.set(d,k),r.push(k)}});var t=[];w.forEach(a=>{var c=this._polygons.get(a);null!=c&&(t.push(c),this._polygons.delete(a));c=this._labels.get(a);null!=c&&(t.push(c),this._labels.delete(a))});this.view.graphics.removeMany(t);this.view.graphics.addMany(r)}else this.clear()};g.clear=
function(){this.view.graphics.removeMany(Array.from(this._polygons.values()));this.view.graphics.removeMany(Array.from(this._labels.values()));this._polygons.clear();this._labels.clear()};n._createClass(h,[{key:"enabled",get:function(){return this._enabled},set:function(b){this._enabled!==b&&(this._enabled=b,this.update())}}]);return h}(B);l.__decorate([p.property({constructOnly:!0})],e.TileTreeDebugger.prototype,"view",void 0);l.__decorate([p.property({readOnly:!0})],e.TileTreeDebugger.prototype,
"updating",void 0);l.__decorate([p.property()],e.TileTreeDebugger.prototype,"enabled",null);e.TileTreeDebugger=l.__decorate([C.subclass("esri.views.support.TileTreeDebugger")],e.TileTreeDebugger);Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});