// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/HandleOwner ../../../../../core/maybe ../../../../../core/promiseUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/accessorSupport/ensureType ../../../../../core/arrayUtils ../../../../../core/has ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/workers/WorkerHandle ../../../../../geometry/support/typeUtils ../../../../../layers/graphics/dehydratedFeatures".split(" "),
function(e,l,g,q,m,r,h,y,z,A,t,u,v,w){e.FeatureServiceSnappingSourceWorkerHandle=function(c){function f(a){a=n.call(this,a);a.schedule=null;a.hasZ=!1;a.elevationAlignPointsInFeatures=async b=>{const d=[];for(const {points:k}of b)for(const {z:p}of k)d.push(p);return{elevations:d,drapedObjectIds:new Set,failedObjectIds:new Set}};a.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]});a.availability=0;a._workerHandleUpdating=!0;a._editId=0;return a}l._inherits(f,c);var n=l._createSuper(f);
c=f.prototype;c.destroy=function(){this._workerHandle.destroy()};c.initialize=function(){this._workerHandle=new x(this.schedule,{alignElevation:async(a,{signal:b})=>({result:await this.elevationAlignPointsInFeatures(a.points,b)}),getSymbologyCandidates:async(a,{signal:b})=>({result:await this.queryForSymbologySnapping(a,b)})});this.handles.add([this._workerHandle.on("notify-updating",({updating:a})=>this._workerHandleUpdating=a),this._workerHandle.on("notify-availability",({availability:a})=>this._set("availability",
a))])};c.setup=async function(a,b){const d=this._serviceInfoFromLayer(a.layer);m.isNone(d)||(a={configuration:this._convertConfiguration(a.configuration),serviceInfo:d,spatialReference:a.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:a.layer.elevationInfo?.toJSON()},await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",a,b)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},b)))};c.configure=async function(a,b){a=this._convertConfiguration(a);
await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",a,b));this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},b))};c.refresh=async function(a){await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},a));this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},a))};c.fetchCandidates=async function(a,b){const d=a.point;a={distance:a.distance,mode:a.mode,point:w.makeDehydratedPoint(d[0],
d[1],d[2],a.coordinateHelper.spatialReference.toJSON()),types:a.types,filter:m.isSome(a.filter)?a.filter.toJSON():null};return this._workerHandle.invoke(a,b)};c.updateTiles=async function(a,b){a={tiles:a.tiles,tileInfo:m.isSome(a.tileInfo)?a.tileInfo.toJSON():null,tileSize:a.tileSize};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",a,b));this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},b))};c.applyEdits=async function(a,b){var d=
this._editId++;await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("beginApplyEdits",{id:d},b));a=await this.updatingHandles.addPromise(r.whenOrAbort(a.result,b));d={id:d,edits:{addedFeatures:a.addedFeatures?.map(({objectId:k})=>k).filter(m.isSome)??[],deletedFeatures:a.deletedFeatures?.map(({objectId:k,globalId:p})=>({objectId:k,globalId:p}))??[],updatedFeatures:a.updatedFeatures?.map(({objectId:k})=>k).filter(m.isSome)??[]}};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("endApplyEdits",
d,b));this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},b))};c.getDebugInfo=function(a){return this._workerHandle.invokeMethod("getDebugInfo",{},a)};c.notifyElevationSourceChange=async function(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})};c.notifySymbologyChange=async function(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})};c.setSymbologySnappingSupported=async function(a){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",
a)};c._convertConfiguration=function(a){return{filter:m.isSome(a.filter)?a.filter.toJSON():null,customParameters:a.customParameters,viewType:a.viewType}};c._serviceInfoFromLayer=function(a){return"multipatch"===a.geometryType||"mesh"===a.geometryType?null:{url:a.parsedUrl?.path??"",fields:a.fields.map(b=>b.toJSON()),geometryType:v.featureGeometryTypeKebabDictionary.toJSON(a.geometryType),capabilities:a.capabilities,objectIdField:a.objectIdField,globalIdField:a.globalIdField,spatialReference:a.spatialReference.toJSON(),
timeInfo:a.timeInfo?.toJSON()}};l._createClass(f,[{key:"updating",get:function(){return this.updatingHandles.updating||this._workerHandleUpdating}}]);return f}(q.HandleOwner);g.__decorate([h.property({constructOnly:!0})],e.FeatureServiceSnappingSourceWorkerHandle.prototype,"schedule",void 0);g.__decorate([h.property({constructOnly:!0})],e.FeatureServiceSnappingSourceWorkerHandle.prototype,"hasZ",void 0);g.__decorate([h.property({constructOnly:!0})],e.FeatureServiceSnappingSourceWorkerHandle.prototype,
"elevationAlignPointsInFeatures",void 0);g.__decorate([h.property({constructOnly:!0})],e.FeatureServiceSnappingSourceWorkerHandle.prototype,"queryForSymbologySnapping",void 0);g.__decorate([h.property({readOnly:!0})],e.FeatureServiceSnappingSourceWorkerHandle.prototype,"updating",null);g.__decorate([h.property({readOnly:!0})],e.FeatureServiceSnappingSourceWorkerHandle.prototype,"availability",void 0);g.__decorate([h.property()],e.FeatureServiceSnappingSourceWorkerHandle.prototype,"_workerHandleUpdating",
void 0);e.FeatureServiceSnappingSourceWorkerHandle=g.__decorate([t.subclass("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],e.FeatureServiceSnappingSourceWorkerHandle);let x=function(c){function f(a,b){return n.call(this,"FeatureServiceSnappingSourceWorker","fetchCandidates",{},a,{strategy:"dedicated",client:b})}l._inherits(f,c);var n=l._createSuper(f);return l._createClass(f)}(u.WorkerHandle);Object.defineProperty(e,Symbol.toStringTag,
{value:"Module"})});