// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/Accessor ../../../../core/arrayUtils ../../../../core/asyncUtils ../../../../core/HandleOwner ../../../../core/maybe ../../../../core/promiseUtils ../../../../core/reactiveUtils ../../../../core/accessorSupport/decorators/property ../../../../core/accessorSupport/ensureType ../../../../core/has ../../../../core/accessorSupport/decorators/subclass ../../../../geometry/Polygon ../../../../geometry/projection ../../../../geometry/support/normalizeUtilsSync ../../../../geometry/support/typeUtils ../../../../layers/graphics/featureConversionUtils ../../../../layers/graphics/OptimizedFeature ../../../../layers/graphics/data/FeatureStore ../../../../layers/graphics/data/QueryEngine ../../../../support/elevationInfoUtils ../../../../symbols/support/utils ../snappingUtils ./queryEngineUtils ./snappingCandidateElevationAlignment ./snappingCandidateElevationFilter ./symbologySnappingCandidates".split(" "),
function(f,t,l,A,B,C,D,g,n,r,m,P,Q,E,F,u,G,H,I,J,K,L,M,v,w,x,y,N,z){f.GraphicsSnappingSource=function(e){function p(a){a=O.call(this,a);a.availability=1;a._sources={multipoint:null,point:null,polygon:null,polyline:null};a._loadedWkids=new Set;a._loadedWkts=new Set;a._pendingAdds=[];a._extrudedPolygonSymbolsCount=0;return a}t._inherits(p,e);var O=t._createSuper(p);e=p.prototype;e.destroy=function(){for(const a of this._pendingAdds)a.task.abort();this._pendingAdds.length=0;this._mapSources(a=>this._destroySource(a))};
e.initialize=function(){this.updatingHandles.add(()=>this.getGraphicsLayers(),c=>{this.updatingHandles.removeHandles("graphics-collections");for(const d of c)this._addMany(d.graphics.toArray()),this.handles.add([d.on("graphic-update",h=>this._onGraphicUpdate(h)),this.updatingHandles.addOnCollectionChange(()=>d.graphics,h=>this._onGraphicsChanged(h))],"graphics-collections")},r.initial);const {view:a}=this,{layer:b}=this.layerSource;g.isSome(a)&&"3d"===a.type&&"map-notes"!==b.type&&this.addHandles([a.elevationProvider.on("elevation-change",
({context:c})=>{M.elevationContextAffectsAlignment(c,b.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()}),r.watch(()=>b.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),r.initial),r.on(()=>b,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())])};e.fetchCandidates=async function(a,b){const {point:c}=a;var d=await n.eachAlwaysValues(this._mapSources(k=>this._fetchCandidatesForSource(k,a,b)));n.throwIfAborted(b);
const h=this._getGroundElevation;d=d.flat().map(k=>x.convertSnappingCandidate(k,h));w.sortCandidatesInPlace(c,d);return d};e._fetchCandidatesForSource=async function(a,b,c){b=w.makeSnappingQuery(b,g.unwrap(this.view)?.type??"2d");a=await a.queryEngine.executeQueryForSnapping(b,c);n.throwIfAborted(c);a=await this._snappingElevationAligner.alignCandidates(a.candidates,c);n.throwIfAborted(c);const d=await this._symbologySnappingFetcher.fetch(a,c);n.throwIfAborted(c);c=0===d.length?a:[...a,...d];return this._snappingElevationFilter.filter(b,
c)};e.refresh=function(){};e._onGraphicUpdate=function(a){if(this.getGraphicsLayers().some(b=>b.graphics.includes(a.graphic)))switch(a.property){case "geometry":case "visible":this._remove(a.graphic),this._addMany([a.graphic])}};e._onGraphicsChanged=function(a){for(const b of a.removed)this._remove(b);this._addMany(a.added)};e._addMany=function(a){const b=[],c=new Map;for(const d of a)g.isNone(d.geometry)||(this._needsInitializeProjection(d.geometry.spatialReference)?(b.push(d.geometry.spatialReference),
c.set(d.uid,d)):this._add(d));this._createPendingAdd(b,c)};e._createPendingAdd=function(a,b){if(a.length){var c=C.createTask(async k=>{await u.initializeProjection(a.map(q=>({source:q,dest:this.spatialReference})),{signal:k});this._markLoadedSpatialReferences(a);for(const [,q]of b)this._add(q)});this.updatingHandles.addPromise(c.promise);var d={task:c,graphics:b},h=()=>B.removeUnordered(this._pendingAdds,d);c.promise.then(h,h);this._pendingAdds.push(d)}};e._markLoadedSpatialReferences=function(a){for(const b of a)null!=
b.wkid&&this._loadedWkids.add(b.wkid),null!=b.wkt&&this._loadedWkts.add(b.wkt)};e._add=function(a){if(!g.isNone(a.geometry)&&a.visible){var b=a.geometry;if("mesh"!==b.type){"extent"===b.type&&(b=F.fromExtent(b));var c=this._ensureSource(b.type);g.isNone(c)||(b=this._createOptimizedFeature(a.uid,b),g.isNone(b)||(c.featureStore.add(b),v.symbolHasExtrudeSymbolLayer(a.symbol)&&this._extrudedPolygonSymbolsCount++))}}};e._needsInitializeProjection=function(a){return null!=a.wkid&&this._loadedWkids.has(a.wkid)||
null!=a.wkt&&this._loadedWkts.has(a.wkt)?!1:!u.canProjectWithoutEngine(a,this.spatialReference)};e._createOptimizedFeature=function(a,b){b=u.project(G.normalizeCentralMeridianForDisplay(b),this.spatialReference);if(!b)return null;b=this._ensureGeometryHasZ(b);b=I.convertFromGeometry(b,this._hasZ,!1);return new J.OptimizedFeature(b,{OBJECTID:a},null,a)};e._ensureGeometryHasZ=function(a){if(!this._hasZ)return a;const b=c=>{for(;3>c.length;)c.push(0)};a=a.clone();a.hasZ=!0;switch(a.type){case "point":a.z=
a.z??0;break;case "multipoint":a.points.forEach(b);break;case "polyline":a.paths.forEach(c=>c.forEach(b));break;case "polygon":a.rings.forEach(c=>c.forEach(b))}return a};e._ensureSource=function(a){var b=this._sources[a];if(g.isSome(b))return b;b=this._createSource(a);return this._sources[a]=b};e._createSource=function(a){var b=H.featureGeometryTypeKebabDictionary.toJSON(a);const c=this._hasZ,d=new K({geometryType:b,hasZ:c,hasM:!1});b=new L.QueryEngine({featureStore:d,fields:[{name:"OBJECTID",type:"esriFieldTypeOID",
alias:"OBJECTID"}],geometryType:b,hasM:!1,hasZ:c,objectIdField:"OBJECTID",spatialReference:this.spatialReference,scheduler:g.isSome(this.view)&&"3d"===this.view.type?this.view.resourceController.scheduler:null});return{featureStore:d,queryEngine:b,type:a}};e._remove=function(a){this._mapSources(b=>this._removeFromSource(b,a));for(const b of this._pendingAdds)b.graphics.delete(a.uid),0===b.graphics.size&&b.task.abort()};e._removeFromSource=function(a,b){a.featureStore.has(b.uid)&&(a.featureStore.removeById(b.uid),
v.symbolHasExtrudeSymbolLayer(b.symbol)&&this._extrudedPolygonSymbolsCount--)};e._destroySource=function(a){a.queryEngine.destroy();this._sources[a.type]=null};e._mapSources=function(a){const {point:b,polygon:c,polyline:d,multipoint:h}=this._sources,k=[];g.isSome(b)&&k.push(a(b));g.isSome(c)&&k.push(a(c));g.isSome(d)&&k.push(a(d));g.isSome(h)&&k.push(a(h));return k};t._createClass(p,[{key:"updating",get:function(){return this.updatingHandles.updating}},{key:"_hasZ",get:function(){const a=this.view;
return g.isSome(a)&&"3d"===a.type&&"map-notes"!==this.layerSource.layer.type}},{key:"_snappingElevationAligner",get:function(){const {view:a}=this,{layer:b}=this.layerSource,c=g.isSome(a)&&"3d"===a.type;return c&&"map-notes"!==b.type?y.getSnappingCandidateElevationAligner(c,{elevationInfo:b.elevationInfo,alignPointsInFeatures:async(d,h)=>(await n.whenOrAbort(a.whenLayerView(b),h)).elevationAlignPointsInFeatures(d,h),spatialReference:a.spatialReference}):y.getSnappingCandidateElevationAligner()}},
{key:"_snappingElevationFilter",get:function(){var {view:a}=this;a=g.isSome(a)&&"3d"===a.type&&"map-notes"!==this.layerSource.layer.type;return N.getSnappingCandidateElevationFilter(a)}},{key:"_symbologySnappingFetcher",get:function(){const {view:a}=this,{layer:b}=this.layerSource,c=g.isSome(a)&&"3d"===a.type,d=0<this._extrudedPolygonSymbolsCount;return c&&"map-notes"!==b.type&&d?z.getSymbologySnappingCandidatesFetcher(d,async(h,k)=>{const q=await a.whenLayerView(b);n.throwIfAborted(k);return q.queryForSymbologySnapping({candidates:h,
spatialReference:a.spatialReference},k)}):z.getSymbologySnappingCandidatesFetcher()}},{key:"_getGroundElevation",get:function(){return x.makeGetGroundElevation(this.view)}}]);return p}(D.HandleOwnerMixin(A));l.__decorate([m.property()],f.GraphicsSnappingSource.prototype,"getGraphicsLayers",void 0);l.__decorate([m.property({constructOnly:!0})],f.GraphicsSnappingSource.prototype,"layerSource",void 0);l.__decorate([m.property({constructOnly:!0})],f.GraphicsSnappingSource.prototype,"spatialReference",
void 0);l.__decorate([m.property({constructOnly:!0})],f.GraphicsSnappingSource.prototype,"view",void 0);l.__decorate([m.property({readOnly:!0})],f.GraphicsSnappingSource.prototype,"updating",null);l.__decorate([m.property({readOnly:!0})],f.GraphicsSnappingSource.prototype,"availability",void 0);l.__decorate([m.property()],f.GraphicsSnappingSource.prototype,"_hasZ",null);l.__decorate([m.property()],f.GraphicsSnappingSource.prototype,"_snappingElevationAligner",null);l.__decorate([m.property()],f.GraphicsSnappingSource.prototype,
"_snappingElevationFilter",null);l.__decorate([m.property()],f.GraphicsSnappingSource.prototype,"_symbologySnappingFetcher",null);l.__decorate([m.property()],f.GraphicsSnappingSource.prototype,"_extrudedPolygonSymbolsCount",void 0);l.__decorate([m.property()],f.GraphicsSnappingSource.prototype,"_getGroundElevation",null);f.GraphicsSnappingSource=l.__decorate([E.subclass("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],f.GraphicsSnappingSource);Object.defineProperty(f,Symbol.toStringTag,
{value:"Module"})});