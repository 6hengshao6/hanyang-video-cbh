// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/Error ../../../core/handleUtils ../../../core/maybe ../../../core/reactiveUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ../../../rest/support/FeatureSet ./FeatureLayerView2D ./support/util".split(" "),function(d,m,t,v,n,p,q,g,B,C,w,x,y,z){function u(b,c){if(n.isNone(b)&&
n.isNone(c))return null;const k={};n.isSome(c)&&(k.geometry=c.toJSON());n.isSome(b)&&(k.where=b);return k}g=function(b){function c(){var a=k.apply(this,arguments);a._enabledEventTypes=new Set;a._isUserPaused=!1;a.errorString=null;a.connectionStatus="disconnected";return a}d._inherits(c,b);var k=d._createSuper(c);b=c.prototype;b.initialize=function(){this.addHandles([p.watch(()=>this.layer.customParameters,a=>this._proxy.updateCustomParameters(a)),this.layer.on("send-message-to-socket",a=>this._proxy.sendMessageToSocket(a)),
this.layer.on("send-message-to-client",a=>this._proxy.sendMessageToClient(a)),p.watch(()=>this.layer.purgeOptions,()=>this._update()),p.watch(()=>this.suspended,a=>{a?this._proxy.pauseStream():this._isUserPaused||this._proxy.resumeStream()})],"constructor")};b.pause=function(){this._isUserPaused=!0;this._proxy.pauseStream()};b.resume=function(){this._isUserPaused=!1;this._proxy.resumeStream()};b.on=function(a,f){if(Array.isArray(a))return v.handlesGroup(a.map(r=>this.on(r,f)));const e=["data-received",
"message-received"].includes(a);e&&(this._enabledEventTypes.add(a),this._proxy.enableEvent(a,!0));const h=d._get(d._getPrototypeOf(c.prototype),"on",this).call(this,a,f),l=this;return{remove(){h.remove();e&&(l._proxy.closed||l.hasEventListener(a)||l._proxy.enableEvent(a,!1))}}};b.queryLatestObservations=function(a,f){if(!(this.layer.timeInfo?.endField||this.layer.timeInfo?.startField||this.layer.timeInfo?.trackIdField))throw new t("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");
return this._proxy.queryLatestObservations(this._cleanUpQuery(a),f).then(e=>{e=x.fromJSON(e);e.features.forEach(h=>{h.layer=this.layer;h.sourceLayer=this.layer});return e})};b.detach=function(){d._get(d._getPrototypeOf(c.prototype),"detach",this).call(this);this.connectionStatus="disconnected"};b._createClientOptions=function(){return{...d._get(d._getPrototypeOf(c.prototype),"_createClientOptions",this).call(this),setProperty:a=>{this.set(a.propertyName,a.value)}}};b._createTileRendererHash=function(a){var f=
JSON.stringify(this.layer.purgeOptions);const e=JSON.stringify(u(this.layer.definitionExpression,this.layer.geometryDefinition));f=`${f}.${e})`;return d._get(d._getPrototypeOf(c.prototype),"_createTileRendererHash",this).call(this,a)+f};b._createServiceOptions=async function(){const a=this.layer,{objectIdField:f}=a,e=a.fields.map(A=>A.toJSON()),h=z.toJSONGeometryType(a.geometryType),l=a.timeInfo&&a.timeInfo.toJSON()||null,r=a.spatialReference?a.spatialReference.toJSON():null;return{type:"stream",
fields:e,geometryType:h,objectIdField:f,timeInfo:l,source:this.layer.parsedUrl,serviceFilter:u(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enabledEventTypes:Array.from(this._enabledEventTypes.values()),spatialReference:r,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:a.customParameters}};d._createClass(c,[{key:"connectionError",
get:function(){if(this.errorString)return new t("stream-controller",this.errorString)}}]);return c}(y);m.__decorate([q.property()],g.prototype,"errorString",void 0);m.__decorate([q.property({readOnly:!0})],g.prototype,"connectionError",null);m.__decorate([q.property()],g.prototype,"connectionStatus",void 0);return g=m.__decorate([w.subclass("esri.views.2d.layers.StreamLayerView2D")],g)});