// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("require exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../core/has ../../../../core/maybe ../../../../core/accessorSupport/diffUtils ../../../../support/arcadeOnDemand ../../arcade/callExpressionWithCursor".split(" "),function(n,k,p,q,l,m,r,t){const u=new Promise((g,f)=>n(["../../../../layers/support/labelFormatUtils"],g,f));let v=function(){function g(b,a){this._canCacheExpressionValue=!1;this._sourceInfo=b;this._storage=a;this._bitsets={computed:a.getBitset(a.createBitset())}}
var f=g.prototype;f.invalidate=function(){this._bitsets.computed.clear()};f.updateSchema=async function(b,a){var c=m.diff(this._schema,a);if((this._schema=a)&&!l.isNone(c)&&m.hasDiff(c,"attributes")){q("esri-2d-update-debug")&&console.debug("Applying Update - Store:",c);this._bitsets.computed.clear();b.targets[a.name]=!0;b=a.attributes;a=[];c=[];for(const e in b){const d=b[e];switch(d.type){case "expression":a.push(this._createArcadeComputedField(d));break;case "label-expression":a.push(this._createLabelArcadeComputedField(d));
break;case "statistic":c.push(d)}}this._computedFields=await Promise.all(a);this._canCacheExpressionValue=!this._computedFields.some(e=>"expression"===e.type&&l.isSome(e.expression)&&e.expression.referencesScale());this._statisticFields=c}};f.setComputedAttributes=function(b,a,c,e){var d=this._bitsets.computed;if(!this._canCacheExpressionValue||!d.has(c)){d.set(c);for(const h of this._computedFields)switch(d=this._evaluateField(a,h,e),h.resultType){case "numeric":b.setComputedNumericAtIndex(c,h.fieldIndex,
d);break;case "string":b.setComputedStringAtIndex(c,h.fieldIndex,d)}}};f._createArcadeComputedField=async function(b){return{...b,expression:await r.createRendererExpression(b.valueExpression,this._sourceInfo.spatialReference,this._sourceInfo.fieldsIndex)}};f._createLabelArcadeComputedField=async function(b){var a=this._sourceInfo.spatialReference;const c=this._sourceInfo.fieldsIndex,{createLabelFunction:e}=await u;a=await e(b.label,c,a);return{...b,builder:a}};f._evaluateField=function(b,a,c){switch(a.type){case "label-expression":return b=
b.readArcadeFeature(),a.builder.evaluate(b)||"";case "expression":return{expression:a}=a,t(a,b,{$view:{scale:c}})}};p._createClass(g,[{key:"storage",get:function(){return this._storage}}]);return g}();k.Store2D=v;Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})});