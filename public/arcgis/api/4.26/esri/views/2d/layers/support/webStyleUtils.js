// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/devEnvironmentUtils ../../../../core/Error ../../../../core/maybe ../../../../core/promiseUtils ../../../../core/urlUtils ../../../../portal/Portal ../../../../chunks/persistableUrlUtils ../../../../symbols/support/styleUtils".split(" "),function(k,l,m,n,h,p,q,r,e){async function t(a,c){a=e.Style2DUrlTemplate.replace(/\{SymbolName\}/gi,a.name);try{const b=await e.requestJSON(a,c);return e.makeCIMSymbolRef(b.data)}catch(b){return h.throwIfAborted(b),null}}async function u(a,
c,b,f){var d=a.data;a={portal:b&&n.isSome(b.portal)?b.portal:q.getDefault(),url:p.urlToObject(a.baseUrl),origin:"portal-item"};d=d.items.find(g=>g.name===c);if(!d)throw new m("symbolstyleutils:symbol-name-not-found",`The symbol name '${c}' could not be found`,{symbolName:c});d=r.fromJSON(e.symbolUrlFromStyleItem(d,"cimRef"),a);l.isDevEnvironment()&&(d=l.adjustStaticAGOUrl(d));try{const g=await e.requestJSON(d,f);return e.makeCIMSymbolRef(g.data)}catch(g){return h.throwIfAborted(g),null}}k.fetchCIMSymbolReference=
async function(a,c,b){if(!a.name)throw new m("style-symbol-reference-name-missing","Missing name in style symbol reference");if(a.styleName&&"Esri2DPointSymbolsStyle"===a.styleName)return t(a,b);try{const f=await e.fetchStyle(a,c,b);return u(f,a.name,c,b)}catch(f){return h.throwIfAborted(f),null}};Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})});