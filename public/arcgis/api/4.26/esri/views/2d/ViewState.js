// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../geometry ../../Viewpoint ../../core/JSONSupport ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/arrayUtils ../../core/has ../../core/accessorSupport/decorators/subclass ../../chunks/common ../../chunks/mat2d ../../chunks/mat2df32 ../../chunks/mat2df64 ../../chunks/mat3 ../../chunks/mat3f32 ../../chunks/vec2 ../../chunks/vec2f32 ../../chunks/vec2f64 ../../core/libs/gl-matrix-2/types/vec2 ./viewpointUtils ../../geometry/Extent ../../geometry/Point".split(" "),
function(w,m,h,B,G,p,O,P,Q,H,I,u,J,x,n,y,k,C,K,z,l,L,M){var A;const f=[0,0];h=A=function(g){function q(a){a=N.call(this,a);a._viewpoint2D={center:K.create(),rotation:0,scale:0,spatialReference:void 0};a.center=[0,0];a.extent=new L;a.id=0;a.inverseTransform=x.create();a.resolution=0;a.rotation=0;a.scale=0;a.transform=x.create();a.transformNoRotation=x.create();a.displayMat3=y.create();a.displayViewMat3=y.create();a.viewMat3=y.create();a.viewMat2d=J.create();a.worldScreenWidth=0;a.size=[0,0];return a}
w._inherits(q,g);var N=w._createSuper(q);g=q.prototype;g.copy=function(a){const b=this.size,c=this.viewpoint;c&&b?(this.viewpoint=l.copy(c,a.viewpoint),this._set("size",k.copy(b,a.size))):(this.viewpoint=a.viewpoint.clone(),this._set("size",[a.size[0],a.size[1]]));this._set("pixelRatio",a.pixelRatio);return this};g.clone=function(){return new A({size:this.size,viewpoint:this.viewpoint.clone(),pixelRatio:this.pixelRatio})};g.toMap=function(a,b,c){if(z.isVec2(b))return k.transformMat2d(a,b,this.inverseTransform);
f[0]=b;f[1]=c;return k.transformMat2d(a,f,this.inverseTransform)};g.toScreen=function(a,b,c){if(z.isVec2(b))return k.transformMat2d(a,b,this.transform);f[0]=b;f[1]=c;return k.transformMat2d(a,f,this.transform)};g.toScreenNoRotation=function(a,b,c){if(z.isVec2(b))return k.transformMat2d(a,b,this.transformNoRotation);f[0]=b;f[1]=c;return k.transformMat2d(a,f,this.transformNoRotation)};g.getScreenTransform=function(a,b){const {center:c}=this._viewpoint2D,r=this._get("pixelRatio")||1,v=this._get("size");
l.getMatrix(a,c,v,b,0,r);return a};g._update=function(){const {center:a,spatialReference:b,scale:c,rotation:r}=this._viewpoint2D,v=this._get("pixelRatio")||1,d=this._get("size"),t=new B({targetGeometry:new M(a[0],a[1],b),scale:c,rotation:r});this._set("viewpoint",t);if(d&&b&&c){this.resolution=l.getResolution(t);this.rotation=r;this.scale=c;this.spatialReference=b;k.copy(this.center,a);n.set(this.displayMat3,0!==d[0]?2/d[0]:0,0,0,0,0!==d[1]?-2/d[1]:0,0,-1,1,1);var e=n.identity(this.viewMat3),D=C.fromValues(d[0]/
2,d[1]/2),E=C.fromValues(-d[0]/2,-d[1]/2),F=I.toRadian(r);n.translate(e,e,D);n.rotate(e,e,F);n.translate(e,e,E);n.multiply(this.displayViewMat3,this.displayMat3,e);e=u.fromTranslation(this.viewMat2d,D);u.rotate(e,e,F);u.translate(e,e,E);l.getExtent(this.extent,t,d);l.getTransform(this.transform,t,d,v);u.invert(this.inverseTransform,this.transform);l.getTransformNoRotation(this.transformNoRotation,t,d,v);this.worldScreenWidth=l.getWorldScreenWidth(this.spatialReference,this.resolution);this._set("id",
this.id+1);return this}};w._createClass(q,[{key:"pixelRatio",set:function(a){this._set("pixelRatio",a);this._update()}},{key:"size",set:function(a){this._set("size",a);this._update()}},{key:"viewpoint",set:function(a){if(a){const b=this._viewpoint2D,c=a.targetGeometry;b.center[0]=c.x;b.center[1]=c.y;b.rotation=a.rotation;b.scale=a.scale;b.spatialReference=c.spatialReference}this._update()}}]);return q}(G.JSONSupport);m.__decorate([p.property({readOnly:!0})],h.prototype,"id",void 0);m.__decorate([p.property({value:1,
json:{write:!0}})],h.prototype,"pixelRatio",null);m.__decorate([p.property({json:{write:!0}})],h.prototype,"size",null);m.__decorate([p.property()],h.prototype,"spatialReference",void 0);m.__decorate([p.property({type:B,json:{write:!0}})],h.prototype,"viewpoint",null);return h=A=m.__decorate([H.subclass("esri.views.2d.ViewState")],h)});