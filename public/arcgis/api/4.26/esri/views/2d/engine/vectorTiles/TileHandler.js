// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../core/promiseUtils ../../../../core/urlUtils ../../../../core/workers/workers ./GlyphMosaic ./GlyphSource ./SpriteMosaic ../../tiling/TileKey".split(" "),function(q,w,l,r,x,t,u,n,v){let y=function(){function p(a,b,c){this._layer=a;this._styleRepository=b;this.devicePixelRatio=c;this._connection=this._glyphMosaic=this._spriteMosaic=null}var f=p.prototype;f.destroy=function(){this._connection?.close();this._glyphMosaic=this._spriteMosaic=
this._layer=this._styleRepository=this._connection=null};f.start=async function(a){this._spriteSourcePromise=this._layer.loadSpriteSource(this.devicePixelRatio,a);this._spriteSourcePromise.then(c=>{this._spriteMosaic=new n(1024,1024,250);this._spriteMosaic.setSpriteSource(c)});var b=this._layer.currentStyleInfo.glyphsUrl;b=new u(b?r.addQueryParameters(b,{...this._layer.customParameters,token:this._layer.apiKey}):null);this._glyphMosaic=new t(1024,1024,b);this._broadcastPromise=x.open("WorkerTileHandler",
{client:this,schedule:a.schedule,signal:a.signal}).then(c=>{this._connection=c;this._layer&&!this._connection.closed&&(c=c.broadcast("setStyle",this._layer.currentStyleInfo.style,a),Promise.all(c).catch(e=>l.throwIfNotAbortError(e)))})};f.updateStyle=async function(a){await this._broadcastPromise;return this._broadcastPromise=Promise.all(this._connection.broadcast("updateStyle",a))};f.setSpriteSource=function(a){const b=new n(1024,1024,250);b.setSpriteSource(a);this._spriteMosaic=b;this._spriteSourcePromise=
Promise.resolve(a);return b};f.setStyle=async function(a,b){await this._broadcastPromise;this._styleRepository=a;this._spriteSourcePromise=this._layer.loadSpriteSource(this.devicePixelRatio,null);this._spriteSourcePromise.then(c=>{this._spriteMosaic=new n(1024,1024,250);this._spriteMosaic.setSpriteSource(c)});a=new u(this._layer.currentStyleInfo.glyphsUrl?r.addQueryParameters(this._layer.currentStyleInfo.glyphsUrl,{...this._layer.customParameters,token:this._layer.apiKey}):null);this._glyphMosaic=
new t(1024,1024,a);return this._broadcastPromise=Promise.all(this._connection.broadcast("setStyle",b))};f.fetchTileData=function(a,b){return this._getRefKeys(a,b).then(c=>{const e=this._layer.sourceNameToSource,d=[];for(const g in e)d.push(g);return this._getSourcesData(d,c,b)})};f.parseTileData=function(a,b){const c=a&&a.data;if(!c)return Promise.resolve(null);const {sourceName2DataAndRefKey:e,transferList:d}=c;return 0===Object.keys(e).length?Promise.resolve(null):this._broadcastPromise.then(()=>
this._connection.invoke("createTileAndParse",{key:a.key.id,sourceName2DataAndRefKey:e,styleLayerUIDs:a.styleLayerUIDs},{...b,transferList:d}))};f.getSprites=async function(a){await this._spriteSourcePromise;return this._spriteMosaic.getSpriteItems(a)};f.getGlyphs=function(a){return this._glyphMosaic.getGlyphItems(a.font,a.codePoints)};f._getTilePayload=async function(a,b,c){a=v.pool.acquire(a.id);const e=this._layer.sourceNameToSource[b],{level:d,row:g,col:m}=a;v.pool.release(a);try{return{protobuff:await e.requestTile(d,
g,m,c),sourceName:b}}catch(h){if(l.isAbortError(h))throw h;return{protobuff:null,sourceName:b}}};f._getRefKeys=function(a,b){const c=this._layer.sourceNameToSource,e=[];for(const d in c){const g=c[d].getRefKey(a,b);e.push(g)}return l.eachAlways(e)};f._getSourcesData=function(a,b,c){const e=[];for(let d=0;d<b.length;d++)if(null==b[d].value||null==a[d])e.push(null);else{const g=this._getTilePayload(b[d].value,a[d],c);e.push(g)}return l.eachAlways(e).then(d=>{const g={},m=[];for(let h=0;h<d.length;h++){const k=
d[h].value;k&&k.protobuff&&0<k.protobuff.byteLength&&(g[k.sourceName]={refKey:b[h].value.id,protobuff:k.protobuff},m.push(k.protobuff))}return{sourceName2DataAndRefKey:g,transferList:m}})};w._createClass(p,[{key:"spriteMosaic",get:function(){return this._spriteSourcePromise.then(()=>this._spriteMosaic)}},{key:"glyphMosaic",get:function(){return this._glyphMosaic}}]);return p}();q.TileHandler=y;Object.defineProperty(q,Symbol.toStringTag,{value:"Module"})});