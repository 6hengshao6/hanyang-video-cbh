// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/vec3 ../../chunks/vec3f64 ./FilteredFiniteDifference ./Momentum".split(" "),function(l,e,m,q,f,n){let p=function(h){function c(a,d,g,k,r){a=b.call(this,a,d,g);a._sceneVelocity=k;a.direction=r;return a}e._inherits(c,h);var b=e._createSuper(c);c.prototype.value=function(a){return e._get(e._getPrototypeOf(c.prototype),"valueFromInitialVelocity",this).call(this,this._sceneVelocity,a)};return e._createClass(c)}(n.Momentum);n=function(){function h(b=
300,a=12,d=.84){this._minimumInitialVelocity=b;this._stopVelocity=a;this._friction=d;this.enabled=!0;this._time=new f.FilteredFiniteDifference(.6);this._screen=[new f.FilteredFiniteDifference(.4),new f.FilteredFiniteDifference(.4)];this._scene=[new f.FilteredFiniteDifference(.6),new f.FilteredFiniteDifference(.6),new f.FilteredFiniteDifference(.6)];this._tmpDirection=q.create()}var c=h.prototype;c.add=function(b,a,d){!this.enabled||this._time.hasLastValue()&&.015>this._time.computeDelta(d)||(this._screen[0].update(b[0]),
this._screen[1].update(b[1]),this._scene[0].update(a[0]),this._scene[1].update(a[1]),this._scene[2].update(a[2]),this._time.update(d))};c.reset=function(){this._screen[0].reset();this._screen[1].reset();this._scene[0].reset();this._scene[1].reset();this._scene[2].reset();this._time.reset()};c.evaluateMomentum=function(){if(!this.enabled||!this._screen[0].hasFilteredDelta()||!this._time.hasFilteredDelta())return null;var b=this._screen[0].filteredDelta,a=this._screen[1].filteredDelta;b=null==b||null==
a?0:Math.sqrt(b*b+a*a);a=this._time.filteredDelta;b=null==a||null==b?0:b/a;return Math.abs(b)<this._minimumInitialVelocity?null:this.createMomentum(b,this._stopVelocity,this._friction)};c.createMomentum=function(b,a,d){m.set(this._tmpDirection,this._scene[0].filteredDelta??0,this._scene[1].filteredDelta??0,this._scene[2].filteredDelta??0);const g=m.length(this._tmpDirection);0<g&&m.scale(this._tmpDirection,this._tmpDirection,1/g);const k=this._time.filteredDelta;return new p(b,a,d,null==k?0:g/k,this._tmpDirection)};
return e._createClass(h)}();l.PanPlanarMomentum=p;l.PanPlanarMomentumEstimator=n;Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});