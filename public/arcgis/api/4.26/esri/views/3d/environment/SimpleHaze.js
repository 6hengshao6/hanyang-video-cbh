// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/Accessor ../../../core/mathUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ../../../chunks/vec3 ../../../chunks/vec3f64 ../../../geometry/ellipsoidUtils ./atmosphereUtils ../../../chunks/FogHaze.glsl ./FogTechnique ./SimpleHazeTechnique ./weather ../webgl-engine/lib/DefaultVertexBufferLayouts ../webgl-engine/lib/glUtil3D ../../webgl/enums".split(" "),
function(d,l,g,t,u,n,H,I,J,v,h,m,w,x,y,z,A,p,B,C,D){d.SimpleHaze=function(e){function f(a){var b=E.call(this,a);b._passParameters=new y.FogHazePassParameters;b._vao=C.createQuadVAO(a.context.renderContext.rctx,B.Pos2Tex);var c=w.getReferenceEllipsoid(a.view.spatialReference);b._planetRadius=c.radius;b._atmosphereRadius=c.radius+x.atmosphereHeight;c=new z.FogHazeTechniqueConfiguration;c.haze=!0;b._hazeTechnique=a.context.techniqueRepository.acquire(A.SimpleHazeTechnique,c);return b}l._inherits(f,e);
var E=l._createSuper(f);e=f.prototype;e.destroy=function(){this._hazeTechnique.release();this._vao.dispose()};e.render=function(a,b){if(0!==this.view.basemapTerrain.baseOpacity&&(this._update(a,b),!(0>=this._passParameters.hazeAmount))){var c=this._hazeTechnique;if(c.compiled){var k=a.offscreenRenderingHelper;k.renderDepthDetached(()=>{this._passParameters.depthTexture=k.depthTexture;const F=a.rctx.bindTechnique(c,this._passParameters,a.bindParameters);this._renderSimpleHaze(F,a)})}else this.context.requestRender()}};
e._renderSimpleHaze=function(a,b){b=b.rctx;b.bindVAO(this._vao);a.assertCompatibleVertexAttributeLocations(this._vao);b.drawArrays(D.PrimitiveType.TRIANGLE_STRIP,0,4)};e._update=function(a,b){var c=a.bindParameters.camera;h.normalize(q,c.eye);a=Math.max(0,h.dot(q,a.bindParameters.lighting.mainLight.direction));const k=G;h.scale(r,k,0);h.lerp(this._passParameters.hazeColor,r,k,a);c=h.length(c.eye);this._passParameters.atmosphereC=c*c-this._atmosphereRadius*this._atmosphereRadius;this._passParameters.hazeAmount=
(1-u.smoothstep(.7*p.weatherHeightLimit,1*p.weatherHeightLimit,Math.abs(c-this._planetRadius)))*b.amount;this._passParameters.fogStrength=b.strength};f.isSupported=function(a){return a.capabilities.depthTexture};l._createClass(f,[{key:"strength",get:function(){return this._passParameters.hazeStrength},set:function(a){this._passParameters.hazeStrength=a}}]);return f}(t);g.__decorate([n.property({constructOnly:!0})],d.SimpleHaze.prototype,"context",void 0);g.__decorate([n.property({constructOnly:!0})],
d.SimpleHaze.prototype,"view",void 0);d.SimpleHaze=g.__decorate([v.subclass("esri.views.3d.environment.SimpleHaze")],d.SimpleHaze);g=l._createClass(function(){this.amount=this.strength=0});const G=m.fromValues(.24,.44,.8),q=m.create(),r=m.create();d.HazeParameters=g;Object.defineProperty(d,Symbol.toStringTag,{value:"Module"})});