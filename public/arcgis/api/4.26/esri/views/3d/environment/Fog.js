// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/Accessor ../../../core/mathUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ../../../chunks/vec3 ../../../chunks/vec3f64 ../../../geometry/ellipsoidUtils ./atmosphereUtils ../../../chunks/FogHaze.glsl ./FogTechnique ./weather ../webgl-engine/lib/DefaultVertexBufferLayouts ../webgl-engine/lib/glUtil3D ../../webgl/enums".split(" "),
function(d,l,g,u,v,n,F,G,H,w,h,m,x,y,z,p,q,A,B,C){d.Fog=function(e){function f(a){var b=D.call(this,a);b._passParameters=new z.FogHazePassParameters;b._vao=B.createQuadVAO(a.context.renderContext.rctx,A.Pos2Tex);b._technique=a.context.techniqueRepository.acquire(p.FogTechnique,new p.FogHazeTechniqueConfiguration);a=x.getReferenceEllipsoid(a.view.spatialReference);b._planetRadius=a.radius;b._atmosphereRadius=a.radius+y.atmosphereHeight;return b}l._inherits(f,e);var D=l._createSuper(f);e=f.prototype;
e.destroy=function(){this._technique.release();this._vao.dispose()};e.render=function(a,b){this._update(a,b);if(!(0>=this._passParameters.fogAmount)){var c=this._technique;if(c.compiled){var k=a.offscreenRenderingHelper;k.renderDepthDetached(()=>{this._passParameters.depthTexture=k.depthTexture;const E=a.rctx.bindTechnique(c,this._passParameters,a.bindParameters);this._renderFog(E,a)})}else this.context.requestRender()}};e._renderFog=function(a,b){b=b.rctx;b.bindVAO(this._vao);a.assertCompatibleVertexAttributeLocations(this._vao);
b.drawArrays(C.PrimitiveType.TRIANGLE_STRIP,0,4)};e._update=function(a,b){var c=a.bindParameters.camera;h.normalize(r,c.eye);a=Math.max(0,h.dot(r,a.bindParameters.lighting.mainLight.direction));const k=b.color;h.scale(t,k,.1);h.lerp(this._passParameters.fogColor,t,k,a);c=h.length(c.eye);this._passParameters.atmosphereC=c*c-this._atmosphereRadius*this._atmosphereRadius;this._passParameters.fogAmount=(1-v.smoothstep(.95*q.weatherHeightLimit,1*q.weatherHeightLimit,Math.abs(c-this._planetRadius)))*b.amount;
this._passParameters.fogStrength=b.strength};f.isSupported=function(a){return a.capabilities.depthTexture};l._createClass(f,[{key:"strength",get:function(){return this._passParameters.fogStrength},set:function(a){this._passParameters.fogStrength=a}}]);return f}(u);g.__decorate([n.property({constructOnly:!0})],d.Fog.prototype,"context",void 0);g.__decorate([n.property({constructOnly:!0})],d.Fog.prototype,"view",void 0);d.Fog=g.__decorate([w.subclass("esri.views.3d.environment.Fog")],d.Fog);g=l._createClass(function(){this.color=
m.create();this.amount=this.strength=0});const r=m.create(),t=m.create();d.FogParameters=g;Object.defineProperty(d,Symbol.toStringTag,{value:"Module"})});