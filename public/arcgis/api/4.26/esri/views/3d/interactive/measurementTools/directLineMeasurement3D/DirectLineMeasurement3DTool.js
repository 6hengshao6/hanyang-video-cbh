// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../geometry ../../../../../core/Handles ../../../../../core/maybe ../../../../../core/memoize ../../../../../core/reactiveUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/accessorSupport/ensureType ../../../../../core/arrayUtils ../../../../../core/has ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/support/WatchUpdatingTracking ../../../../../layers/graphics/hydratedFeatures ../../../analysis/support/measurementUtils ../../SnappingVisualizer3D ../../editingTools/dragEventPipeline3D ./DirectLineMeasurement3DView ../../../support/ElevationProvider ../../../../interactive/AnalysisToolBase ../../../../interactive/coordinateHelper ../../../../interactive/dragEventPipeline ../../../../interactive/editGeometry/EditGeometry ../../../../interactive/editGeometry/EditGeometryOperations ../../../../interactive/snapping/SceneSnappingManagerPool ../../../../interactive/snapping/SnappingContext ../../../../interactive/snapping/SnappingDragPipelineStep ../../../../interactive/snapping/snappingUtils ../../../../support/screenUtils ../../../../../geometry/Point".split(" "),
function(z,e,c,K,f,L,E,g,ia,ja,ka,M,N,O,P,Q,A,R,S,T,U,F,V,W,X,Y,Z,aa,G,ba){function B(d,q,w){d.events.emit("drag",{action:"start",pointerType:q,start:w,screenPoint:w});return{update:a=>d.events.emit("drag",{action:"update",start:a,screenPoint:a}),end:a=>d.events.emit("drag",{action:"end",start:a,screenPoint:a}),cancel:()=>d.events.emit("drag",{action:"cancel"})}}c=function(d){function q(a){var b=w.call(this,a);b._handles=new K;b._updatingHandles=new N.WatchUpdatingTracking;b._emulatedDrag=null;b.lineState=
"initial";b.startPointSurfaceLocation=null;b.endPointSurfaceLocation=null;b.cursorPointSurfaceLocation=null;b.startManipulator=null;b.endManipulator=null;b.cursorManipulator=null;b._getSnappingContext=L.memoize(m=>new Y.SnappingContext({elevationInfo:{mode:"absolute-height",offset:0},pointer:m,editGeometryOperations:new W.EditGeometryOperations(new V.EditGeometry("point",U.createCoordinateHelper(!0,!1,b.view.spatialReference))),visualizer:new Q.SnappingVisualizer3D}));return b}z._inherits(q,d);var w=
z._createSuper(q);d=q.prototype;d.initialize=function(){const {view:a,analysis:b,analysisViewData:m,visible:r}=this;this.measurementView=new R.DirectLineMeasurement3DView({toolState:this,view:a,analysis:b,analysisViewData:m,visible:r});var k=X.acquire(a);this._snappingManagerResult=k;this._handles.add(k);const {start:n,end:l,cursor:p}=this.measurementView.createManipulators();k=(t,x,C)=>F.createManipulatorDragEventPipeline(t,(D,u,y,H)=>{const I=A.hideManipulatorWhileDragging(D),ca=this._snappingManager,
da=this._getSnappingContext(H),ea=this._updatingHandles,{lineState:fa}=this;y=y.next(I).next(F.resetProperties(this,[C,x])).next(h=>{D.location=f.unwrap(this.analysis[x]);return h});const ha=A.screenToMap3D(this.view);u=u.next(I).next(h=>{h=ha(h);h||"drawing"!==this.lineState&&"initial"!==this.lineState||(this[x]=null,this[C]=null);return h});if("touch"!==H||"editing"===fa){const {snappingStep:h,cancelSnapping:v}=Z.createSnapDragEventPipelineStep({snappingManager:ca,snappingContext:da,updatingHandles:ea});
y=y.next(v);u=u.next(...h)}u.next(h=>"start"!==h.action?h:null).next(h=>{const v=O.clonePoint(h.mapEnd,new ba);this[x]=v;D.location=v;this[C]=this._surfaceLocation(v,h.surfaceType)})});const J=t=>t.events.on("grab-changed",()=>{this.lineState=n.grabbing||l.grabbing?"editing":"measured"});this._handles.add([k(n,"startPoint","startPointSurfaceLocation"),k(l,"endPoint","endPointSurfaceLocation"),k(p,"cursorPoint","cursorPointSurfaceLocation"),J(n),J(l)]);this.manipulators.add(n);this.manipulators.add(l);
this.manipulators.add(p);this.startManipulator=n;this.endManipulator=l;this.cursorManipulator=p;this._handles.add(E.watch(()=>this.state,t=>{"measured"===t&&this.finishToolCreation()},E.syncAndInitial));aa.setupSnappingToggleHandles(this)};d.destroy=function(){this._handles=f.destroyMaybe(this._handles);this._updatingHandles=f.destroyMaybe(this._updatingHandles);this.measurementView=f.destroyMaybe(this.measurementView)};d.onShow=function(){this.measurementView.show();this._updateManipulatorAvailability()};
d.onHide=function(){this.measurementView.hide()};d.onDeactivate=function(){this._emulatedDrag?.cancel();this._emulatedDrag=null};d.onInputEvent=function(a){switch(a.type){case "immediate-click":this._handleImmediateClick(a);break;case "pointer-move":this._handlePointerMove(a)}this._updateManipulatorAvailability()};d._handlePointerMove=function(a){if(this.active&&!this.view.navigating){var {pointerType:b}=a;if("mouse"===b){var m=G.createScreenPointFromEvent(a),{lineState:r,cursorManipulator:k,endManipulator:n}=
this,l=!1;f.isNone(this.cursorPoint)&&(this._emulatedDrag?.cancel(),this._emulatedDrag=B(k,b,m),l=!0);"initial"===r&&(this._emulatedDrag?.update(m),l=!0);"drawing"===r&&(n.events.emit("drag",{action:"update",start:m,screenPoint:m}),l=!0);l&&a.stopPropagation()}}};d._handleImmediateClick=function(a){if(this.active&&P.isPrimaryPointerAction(a)){var b=G.createScreenPointFromEvent(a),{pointerType:m}=a,{cursorManipulator:r,startManipulator:k,endManipulator:n,lineState:l}=this,p=!1;f.isNone(this.cursorPoint)&&
(this._emulatedDrag?.cancel(),this._emulatedDrag=B(r,m,b));switch(l){case "initial":this._emulatedDrag?.update(b);f.isSome(this.cursorPoint)&&(this._emulatedDrag?.end(b),this._emulatedDrag=null,{cursorPoint:p}=this,this.startPoint=p,this.startPointSurfaceLocation=this.cursorPointSurfaceLocation,k.location=p,k.interactive=!1,n.interactive=!1,this.lineState="drawing",this._emulatedDrag=B(n,m,b),p=!0);break;case "drawing":this._emulatedDrag?.update(b),f.isSome(this.endPoint)&&(this._emulatedDrag?.end(b),
this._emulatedDrag=null,k.interactive=!0,n.interactive=!0,this.lineState="measured",p=!0)}p&&a.stopPropagation()}};d._surfaceLocation=function(a,b){return b===A.SurfaceType.GROUND?"on-the-surface":(a.z??0)>=this._getElevation(a)?"above-the-surface":"below-the-surface"};d._updateManipulatorAvailability=function(){this.startManipulator.available=f.isSome(this.analysis.startPoint);this.endManipulator.available=f.isSome(this.analysis.endPoint)};d._getElevation=function(a){return this.view.basemapTerrain.ready?
f.unwrapOr(S.getElevationAtPoint(this.view.elevationProvider,a),0):0};z._createClass(q,[{key:"_snappingManager",get:function(){return this._snappingManagerResult.snappingManager}},{key:"state",get:function(){var {analysis:a}=this;if(f.isNone(a.startPoint)&&f.isNone(a.endPoint))return"ready";({lineState:a}=this);return this.validMeasurement&&"editing"!==a&&"drawing"!==a?"measured":"measuring"}},{key:"cursor",get:function(){const {lineState:a}=this;return"initial"===a||"drawing"===a?"crosshair":null}},
{key:"startPoint",get:function(){return this.analysis.startPoint},set:function(a){this.analysis.startPoint=a}},{key:"endPoint",get:function(){return this.analysis.endPoint},set:function(a){this.analysis.endPoint=a}},{key:"cursorPoint",get:function(){return this.measurementView.cursorPoint},set:function(a){this.measurementView.cursorPoint=a}},{key:"snappingOptions",get:function(){return this._snappingManager.options}},{key:"validMeasurement",get:function(){return f.isSome(this.analysis.startPoint)&&
f.isSome(this.analysis.endPoint)}},{key:"updating",get:function(){return this._updatingHandles.updating||this._snappingManager.updating}},{key:"test",get:function(){return{snappingManager:this._snappingManager}}}]);return q}(T.AnalysisToolBase);e.__decorate([g.property({readOnly:!0})],c.prototype,"state",null);e.__decorate([g.property()],c.prototype,"lineState",void 0);e.__decorate([g.property({readOnly:!0})],c.prototype,"cursor",null);e.__decorate([g.property()],c.prototype,"startPoint",null);e.__decorate([g.property()],
c.prototype,"endPoint",null);e.__decorate([g.property()],c.prototype,"cursorPoint",null);e.__decorate([g.property({constructOnly:!0})],c.prototype,"analysis",void 0);e.__decorate([g.property({constructOnly:!0})],c.prototype,"analysisViewData",void 0);e.__decorate([g.property()],c.prototype,"measurementView",void 0);e.__decorate([g.property({constructOnly:!0})],c.prototype,"view",void 0);e.__decorate([g.property({readOnly:!0})],c.prototype,"validMeasurement",null);e.__decorate([g.property({value:null})],
c.prototype,"startPointSurfaceLocation",void 0);e.__decorate([g.property({value:null})],c.prototype,"endPointSurfaceLocation",void 0);e.__decorate([g.property({value:null})],c.prototype,"cursorPointSurfaceLocation",void 0);e.__decorate([g.property()],c.prototype,"updating",null);return c=e.__decorate([M.subclass("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DTool")],c)});