// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/Handles ../../../../../core/maybe ../../../../../core/memoize ../../../../../core/promiseUtils ../../../../../core/reactiveUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/accessorSupport/ensureType ../../../../../core/arrayUtils ../../../../../core/has ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/support/WatchUpdatingTracking ../../../../../geometry/Point ../../../../../layers/graphics/hydratedFeatures ../../../analysis/support/measurementUtils ../../SnappingVisualizer3D ../../editingTools/dragEventPipeline3D ./AreaMeasurement3DView ../support/PickRequest ../../../../interactive/AnalysisToolBase ../../../../interactive/coordinateHelper ../../../../interactive/dragEventPipeline ../../../../interactive/ManipulatorCollection ../../../../interactive/editGeometry/EditGeometry ../../../../interactive/editGeometry/EditGeometryOperations ../../../../interactive/snapping/SceneSnappingManagerPool ../../../../interactive/snapping/SnappingContext ../../../../interactive/snapping/SnappingDragPipelineStep ../../../../interactive/snapping/SnappingOperation ../../../../interactive/snapping/snappingUtils ../../../../support/screenUtils".split(" "),
function(t,f,D,l,E,w,u,g,e,Z,aa,F,G,x,p,y,H,z,I,J,K,L,M,N,O,P,Q,R,S,T,U,A){e=function(c){function m(a){var b=V.call(this,a);b._handles=new D;b._updatingHandles=new G.WatchUpdatingTracking;b.polygonState="initial";b.manipulators=new N.ManipulatorCollection;b._getSnappingContext=E.memoize(d=>new R.SnappingContext({elevationInfo:{mode:"absolute-height",offset:0},pointer:d,editGeometryOperations:new P.EditGeometryOperations(new O.EditGeometry("point",L.createCoordinateHelper(!0,!1,b.view.spatialReference))),
visualizer:new H.SnappingVisualizer3D}));return b}t._inherits(m,c);var V=t._createSuper(m);c=m.prototype;c.initialize=function(){const {view:a,analysisViewData:b,manipulators:d,visible:h}=this;this.measurementView=new I({view:a,analysisViewData:b,toolState:this,manipulators:d,visible:h});const q=Q.acquire(a);this._snappingManagerResult=q;this._handles.add(q);this._snappingOperation=new T.SnappingOperation({view:a});this._updatingHandles.add(()=>this.stagedPoint,k=>{this.analysisViewData.cursorPoint=
l.isSome(k)?p.clonePoint(k,new x):null},u.syncAndInitial);U.setupSnappingToggleHandles(this,()=>{var k=l.unwrapOr(this.view.inputManager.latestPointerType,"mouse");k=this._getSnappingContext(k);this._updatingHandles.addPromise(w.ignoreAbortErrors(this._snappingOperation.resnap(this._snappingManager,k)))});this._setupManipulators();this._handles.add(u.watch(()=>this.state,k=>{"measured"===k&&this.finishToolCreation()},u.syncAndInitial))};c.destroy=function(){this.measurementView.destroy();this._set("measurementView",
null);this._handles=l.destroyMaybe(this._handles);this._updatingHandles=l.destroyMaybe(this._updatingHandles)};c.finishMeasurement=function(){const {path:a}=this.analysisViewData;3>a.numVertices?(a.clear(),this.polygonState="initial"):(a.close(),this.polygonState="measured");this._resetSnappingState()};c.onShow=function(){this.measurementView.show()};c.onHide=function(){this.measurementView.hide()};c.onDeactivate=function(){this._resetSnappingState()};c.onInputEvent=function(a){switch(a.type){case "immediate-double-click":this._handleImmediateDoubleClick(a);
break;case "immediate-click":this._handleImmediateClick(a);break;case "pointer-move":this._handlePointerMove(a);break;case "drag":this._handleDrag(a);break;case "key-down":this._handleKeyDown(a)}};c._setupManipulators=function(){const a=d=>d.events.on("grab-changed",()=>{this.analysisViewData.validMeasurement&&(this.polygonState=this.manipulators.some(h=>h.manipulator.grabbing)?"editing":"measured")}),b=d=>{this._handles.add([M.createManipulatorDragEventPipeline(d,(h,q,k,v)=>{const B=z.hideManipulatorWhileDragging(h),
r=h.metadata,W=this._snappingManager;v=this._getSnappingContext(v);const {snappingStep:X,cancelSnapping:Y}=S.createSnapDragEventPipelineStep({snappingManager:W,snappingContext:v,updatingHandles:this._updatingHandles});k=k.next(B).next(n=>{this.analysisViewData.lastDraggedVertex=null;this.analysisViewData.path.setVertexPosition(r,C);h.location=C;return n}).next(Y);q.next(B).next(z.screenToMap3D(this.view)).next(...X).next(n=>{h.location=n.mapEnd;this.analysisViewData.lastDraggedVertex="end"===n.action?
null:r;this.analysisViewData.path.setVertexPosition(r,p.clonePoint(n.mapEnd))});const C=p.clonePoint(this.analysisViewData.path.getVertexPositionAsPoint(r))}),a(d)],d)};this.manipulators.forEach(({manipulator:d})=>{b(d)});this._handles.add([this.manipulators.on("after-add",({item:{manipulator:d}})=>{b(d)}),this.manipulators.on("after-remove",({item:{manipulator:d}})=>this._handles.remove(d))])};c._handleImmediateDoubleClick=function(a){y.isPrimaryPointerAction(a)&&("drawing"===this.polygonState&&
this.finishMeasurement(),a.stopPropagation())};c._handleDrag=function(a){"editing"===this.polygonState&&a.stopPropagation()};c._handleImmediateClick=function(a){if(y.isPrimaryPointerAction(a)){var b=A.createScreenPointFromEvent(a),{pointerType:d}=a;if(this.active)switch(this.polygonState){case "initial":if(this._addVertexAt(b,d)){this.stagedPoint=null;this.polygonState="drawing";a.stopPropagation();return}break;case "drawing":const h=this.measurementView.vertexHandleAt(b,d);if(l.isNone(h)){if(this._addVertexAt(b,
d)){this.stagedPoint=null;a.stopPropagation();return}}else 0===h.index&&(this.finishMeasurement(),a.stopPropagation())}"mouse"===a.pointerType&&this._hoverAt(b)}};c._handlePointerMove=function(a){"mouse"===a.pointerType&&(a=A.createScreenPointFromEvent(a),this._hoverAt(a))};c._handleKeyDown=function(a){"Enter"===a.key&&"drawing"===this.polygonState&&(this.finishMeasurement(),a.stopPropagation())};c._hoverAt=function(a){var {polygonState:b}=this;!this.active||"initial"!==b&&"drawing"!==b?this.stagedPoint=
null:(a=this._pick(a),l.isSome(a)&&l.isSome(a.mapPoint)&&(b=this._getSnappingContext("mouse"),this._updatingHandles.addPromise(w.ignoreAbortErrors(this._snappingOperation.snap({point:a.mapPoint},this._snappingManager,b)))))};c._addVertexAt=function(a,b){a=this._pick(a);return l.isSome(a)&&l.isSome(a.mapPoint)?({mapPoint:a}=a,b=this._getSnappingContext(b),b=this._snappingOperation.update({point:a},this._snappingManager,b),b=p.clonePoint(b,new x),this.analysisViewData.path.add(b),!0):!1};c._pick=function(a){a=
new J.PickRequest(a);return this.measurementView.pick(a)};c._resetSnappingState=function(){this._snappingManager.doneSnapping();this._snappingOperation.abort();this._snappingOperation.stagedPoint=null};t._createClass(m,[{key:"_snappingManager",get:function(){return this._snappingManagerResult.snappingManager}},{key:"state",get:function(){return 0===this.analysisViewData.path.numVertices?"ready":this.analysisViewData.validMeasurement&&"editing"!==this.polygonState?"measured":"measuring"}},{key:"cursor",
get:function(){return"ready"===this.state||"drawing"===this.polygonState?"crosshair":null}},{key:"updating",get:function(){return this._updatingHandles.updating||this._snappingManager.updating}},{key:"stagedPoint",get:function(){return this._snappingOperation.stagedPoint},set:function(a){this._snappingOperation.stagedPoint=a}},{key:"snappingOptions",get:function(){return this._snappingManager.options}},{key:"test",get:function(){return{snappingManager:this._snappingManager}}}]);return m}(K.AnalysisToolBase);
f.__decorate([g.property({readOnly:!0})],e.prototype,"state",null);f.__decorate([g.property()],e.prototype,"polygonState",void 0);f.__decorate([g.property({readOnly:!0})],e.prototype,"cursor",null);f.__decorate([g.property()],e.prototype,"measurementView",void 0);f.__decorate([g.property({constructOnly:!0})],e.prototype,"view",void 0);f.__decorate([g.property({constructOnly:!0})],e.prototype,"analysis",void 0);f.__decorate([g.property({constructOnly:!0})],e.prototype,"analysisViewData",void 0);f.__decorate([g.property({readOnly:!0})],
e.prototype,"manipulators",void 0);f.__decorate([g.property()],e.prototype,"updating",null);f.__decorate([g.property()],e.prototype,"stagedPoint",null);f.__decorate([g.property()],e.prototype,"snappingOptions",null);return e=f.__decorate([F.subclass("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],e)});