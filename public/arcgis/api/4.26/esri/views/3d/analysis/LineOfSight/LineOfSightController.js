// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../geometry ../../../../analysis/featureReferenceUtils ../../../../core/Accessor ../../../../core/asyncUtils ../../../../core/Evented ../../../../core/Handles ../../../../core/handleUtils ../../../../core/Logger ../../../../core/maybe ../../../../core/promiseUtils ../../../../core/reactiveUtils ../../../../core/accessorSupport/decorators/property ../../../../core/accessorSupport/ensureType ../../../../core/arrayUtils ../../../../core/has ../../../../core/accessorSupport/decorators/subclass ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../core/support/WatchUpdatingTracking ../../../../geometry/projection ../../../../geometry/support/aaBoundingRect ../../../../geometry/support/ray ../../../../support/elevationInfoUtils ../LineOfSightAnalysisResult ./LineOfSightComputation ./LineOfSightRayIntersector ../support/projectionUtils ../../webgl-engine/lib/IntersectorInterfaces ../../webgl-engine/lib/intersectorUtilsConversions ../../../support/Scheduler ../../../../geometry/Point".split(" "),
function(q,J,r,ha,K,U,V,W,M,A,X,d,Y,F,u,ia,ja,ka,Z,h,y,aa,B,G,L,N,ba,ca,da,O,P,C,z,ea){const Q=X.getLogger("esri.views.3d.analysis.LineOfSight.LineOfSightController");q.LineOfSightController=function(k){function D(a){a=fa.call(this,a);a.updateOnCameraChange=!0;a._observerGroundOffsetRenderSpace=0;a._effectiveObserverElevationMode="absolute-height";a._observerFeatureId=null;a._updatingHandles=new aa.WatchUpdatingTracking;a._frameTask=z.ImmediateTask;a._handles=new M;a._computationHandles=new M;a._externalObserverUpdate=
!0;return a}J._inherits(D,k);var fa=J._createSuper(D);k=D.prototype;k.initialize=function(){const a=this.view.resourceController?.scheduler;this._frameTask=a?a.registerTask(z.TaskPriority.LINE_OF_SIGHT_TOOL):z.ImmediateTask;this._intersector=new da.LineOfSightRayIntersector({view:this.view});this._handles.add([this._connectObserver(),this._connectComputations(),this._connectTargets()])};k.destroy=function(){this._handles.destroy();this._computationHandles.destroy();this._computations.removeAll();
this._updatingHandles.destroy()};k._computeResult=function(a){const b=a.computation,{inputPoints:c,computationResult:e}=b,{observerAdjusted:m,targetAdjusted:f}=c,{start:g,end:p}=e;h.copy(g,m);h.copy(p,f);this._canCompute(b)?this._computeIntersection(a):this._interpolateIntersection(a);b.notifyResultChanged();this.emit("result-changed",{target:a.computation.target,result:b.result})};k._updateAdjustedPointsFromFeatures=function(a){const b=this.view;var {sceneIntersectionHelper:c}=b;({inputPoints:a}=
a);const {observerAdjusted:e,observerFeatureId:m,targetFeatureId:f,targetAdjusted:g}=a;if(!d.isNone(m)||!d.isNone(f)){var p=h.distance(e,g),n=this._intersector.intersector,l=L.fromPoints(a.observer,a.target,R);n.options.store=P.StoreResults.ALL;c.intersectToolIntersectorRay(l,n);var w=l=c=null,v=null;for(const t of n.results.all)n=C.toGraphic(t,this.view),d.isNone(n)||d.isNone(t.distanceInRenderSpace)||(n=K.getFeatureId(n),d.isNone(n)||(d.isSome(m)&&n===m&&(d.isNone(c)&&(c=this._getFeatureDistanceThreshold(t,
b,p)),t.distanceInRenderSpace<c&&(w=t)),d.isSome(f)&&n===f&&(d.isNone(l)&&(l=this._getFeatureDistanceThreshold(t,b,p)),d.isNone(v)&&t.distanceInRenderSpace<p&&p-t.distanceInRenderSpace<l&&(v=t))));d.isSome(w)&&w.getIntersectionPoint(e)&&(a.observerSurfaceNormal=w.getTransformedNormal(y.create()));d.isSome(v)&&v.getIntersectionPoint(g)&&(a.targetSurfaceNormal=v.getTransformedNormal(y.create()))}};k._getFeatureDistanceThreshold=function(a,b,c){return C.hasLod(a)&&(a=C.getIntersectedFeatureBSRadius(a,
b),d.isSome(a))?Math.min(.05*a,c):1E-5*c};k._adjustStartEndPositions=function(a){const b=this._screenPixelSize,c=this.view;var {inputPoints:e}=a;const {observer:m,observerSurfaceNormal:f,target:g,targetSurfaceNormal:p,observerAdjusted:n,targetAdjusted:l}=e;e=H;h.copy(n,m);h.copy(l,g);this._updateAdjustedPointsFromFeatures(a);d.isSome(f)?h.copy(e,f):h.subtract(e,l,n);h.normalize(e,e);h.scale(e,e,Math.min(b,1));h.add(n,n,e);d.isSome(p)?h.copy(e,p):h.subtract(e,n,l);a=c.state.camera.computeScreenPixelSizeAt(l);
h.normalize(e,e);h.scale(e,e,Math.min(a,1));h.add(l,l,e)};k._computeIntersection=function({computation:a,interpolationInfo:b}){const {view:c}=this,{sceneIntersectionHelper:e,renderCoordsHelper:m}=c;if(!d.isNone(e)){var f=this._intersector.intersector,{computationResult:g,inputPoints:p}=a,{observer:n,target:l}=p,{start:w,end:v}=g,t=L.fromPoints(w,v,R);f.options.store=P.StoreResults.MIN;e.intersectToolIntersectorRay(t,f);f=f.results.min;t=g.intersection;var S=H,x=!0;d.isSome(f)&&f.getIntersectionPoint(t)&&
(h.copy(b.originalIntersection,t),h.copy(b.originalObserver,w),h.copy(b.originalTarget,v),m.fromRenderCoords(t,S,c.spatialReference),b=1-h.dist(v,l)/h.dist(w,l),x=h.dist(n,t)>=b*h.dist(n,l));b=new ea(S,c.spatialReference);var {result:E,target:T}=a;d.isSome(E)?(E.target=T,E.intersectedGraphic=x?null:C.toGraphic(f,c),E.intersectedLocation=x?null:b,E.visible=x):a.result=new ba.LineOfSightAnalysisResult({target:T,elevationAlignedTargetLocation:a.elevationAlignedTargetLocation,intersectedGraphic:x?null:
C.toGraphic(f,c),intersectedLocation:x?null:b,visible:x});g.isValid=p.isValid=!0;g.isTargetVisible=x}};k._interpolateIntersection=function({computation:a,interpolationInfo:b}){const {computationResult:c,inputPoints:e}=a,{start:m,end:f,intersection:g}=c,{originalIntersection:p,originalObserver:n,originalTarget:l}=b;h.copy(g,p);e.isValid?(a=H,b=h.dist(n,p)/h.dist(n,l),h.sub(a,m,n),h.scale(a,a,1-b),h.add(g,g,a),h.sub(a,f,l),h.scale(a,a,b),h.add(g,g,a),c.isValid=!0):(a.result=null,c.isValid=!1,c.isTargetVisible=
!1)};k._canCompute=function(a){var b=this.view.frustum;if(d.isNone(this.analysisViewData.elevationAlignedObserver)||d.isNone(a.elevationAlignedTargetLocation)||d.isNone(b))return!1;const {observerAdjusted:c,targetAdjusted:e}=a.inputPoints;a=b.intersectsPoint(c);b=b.intersectsPoint(e);return a&&b};k._onObserverPositionChange=function(a,b,c,e,m){this._externalObserverUpdate=m;if(d.isNone(a))this._observerFeatureId=this.analysisViewData.elevationAlignedObserver=null;else if(d.isNone(b))O.logFailedGeometryProjectionError(this.analysis,
a.spatialReference,Q),this.analysisViewData.elevationAlignedObserver=null;else{a=this._getEffectiveElevationInfo(b,c);var {absoluteZ:f,elevation:g}=N.zValueInAbsoluteHeightMode(b.x,b.y,b.z,this.view.spatialReference,this.view,a);b=b.clone();b.z=f;this._effectiveObserverElevationMode=a.mode;this.analysisViewData.elevationAlignedObserver=b;a=y.create();this.view.renderCoordsHelper.toRenderCoords(b,a);this._elevationAlignedObserverPositionRenderSpace=a;this._observerGroundOffsetRenderSpace=f-g;this._observerFeatureId=
K.getFeatureId(e);this.priority=z.TaskPriority.LINE_OF_SIGHT_TOOL_INTERACTIVE}};k._onObserverRenderSpacePositionChangeForComputation=function(a,b,c,e,m){const {inputPoints:f}=a;h.copy(f.observer,b);f.observerFeatureId=m;f.observerSurfaceNormal=null;switch(e){case "on-the-ground":case "relative-to-ground":b=this._intersector.updateFromGroundIntersection(f.observer,c,f.observer),d.isNone(f.observerFeatureId)&&(f.observerSurfaceNormal=b)}this._adjustStartEndPositions(a);a.notifyInputPointsChanged();
this.priority=z.TaskPriority.LINE_OF_SIGHT_TOOL_INTERACTIVE};k._onTargetPositionChange=function(a,b,c,e,m,f=!0){const g=a.inputPoints;f&&(g.isValid=!1);if(d.isNone(c))d.isSome(b)&&O.logFailedGeometryProjectionError(this.analysis,b.spatialReference,Q),a.elevationAlignedTargetLocation=null,a.notifyInputPointsChanged();else{b=this._getEffectiveElevationInfo(c,e);var {absoluteZ:p,elevation:n}=N.zValueInAbsoluteHeightMode(c.x,c.y,c.z,this.view.spatialReference,this.view,b);c=c.clone();c.z=p;a.elevationAlignedTargetLocation=
c;this.view.renderCoordsHelper.toRenderCoords(a.elevationAlignedTargetLocation,g.target);g.targetFeatureId=K.getFeatureId(m);g.targetSurfaceNormal=null;switch(b.mode){case "on-the-ground":case "relative-to-ground":m=this._intersector.updateFromGroundIntersection(g.target,p-n,g.target),d.isNone(g.targetFeatureId)&&(g.targetSurfaceNormal=m)}this._adjustStartEndPositions(a);a.notifyInputPointsChanged();this.priority=z.TaskPriority.LINE_OF_SIGHT_TOOL_INTERACTIVE}};k._connectComputationToTarget=function(a){return A.handlesGroup([this._updatingHandles.add(()=>
({computation:a,targetPosition:a.target.position,targetElevationInfo:a.target.elevationInfo,targetFeatureInfo:a.target.feature,projectedTargetPosition:B.projectOrLoad(a.target.position,this.view.spatialReference)}),({computation:b,targetPosition:c,targetElevationInfo:e,targetFeatureInfo:m,projectedTargetPosition:f})=>{d.isSome(f.pending)?this._updatingHandles.addPromise(f.pending):this._onTargetPositionChange(b,c,f.geometry,e,m)},F.initial)])};k._connectComputationToObserver=function(a){return this._updatingHandles.add(()=>
({computation:a,observer:this.analysisViewData.elevationAlignedObserver}),({computation:b})=>{this._externalObserverUpdate&&(b.inputPoints.isValid=!1,b.notifyInputPointsChanged())},F.initial)};k._connectComputationToRenderSpaceObserver=function(a){return this._updatingHandles.add(()=>({computation:a,observer:this._elevationAlignedObserverPositionRenderSpace,observerGroundOffset:this._observerGroundOffsetRenderSpace,observerElevationMode:this._effectiveObserverElevationMode,observerFeatureId:this._observerFeatureId}),
({computation:b,observer:c,observerGroundOffset:e,observerElevationMode:m,observerFeatureId:f})=>{this._onObserverRenderSpacePositionChangeForComputation(b,c,e,m,f)},F.initial)};k._connectComputationToCamera=function(a){return this._updatingHandles.add(()=>({camera:this.view.state.camera,isDirty:this._isCameraDirty}),({isDirty:b})=>{!this.updateOnCameraChange||a.inputPoints.isValid&&!b||a.notifyInputPointsChanged()})};k._connectComputationToSlicePlane=function(a){return this._updatingHandles.add(()=>
this.view.slicePlane,()=>{a.inputPoints.isValid=!1;a.notifyInputPointsChanged()})};k._connectComputationToElevation=function(a){const b=(c,e)=>{const m=this.analysis.observer,f=a.target;var g=null;let p=null,n=null;var l=null;let w=null,v=null;if(d.isSome(m)&&d.isSome(m.position)){g=B.projectOrLoad(m.position,this.view.spatialReference);if(d.isSome(g.pending)){this._updatingHandles.addPromise(g.pending);g.pending.finally(()=>b(c,e));return}g=g.geometry;p=m.elevationInfo;n=m.feature}if(d.isSome(f.position)){l=
B.projectOrLoad(f.position,this.view.spatialReference);if(d.isSome(l.pending)){this._updatingHandles.addPromise(l.pending);l.pending.finally(()=>b(c,e));return}l=l.geometry;w=f.elevationInfo;v=f.feature}d.isNone(g)&&d.isNone(l)||(B.projectBoundingRect(c,e,I,this.view.spatialReference),d.isSome(g)&&G.containsPointObject(I,g)&&this._onObserverPositionChange(d.isSome(m)?m.position:null,g,p,n,!1),d.isSome(l)&&G.containsPointObject(I,l)&&this._onTargetPositionChange(a,f.position,l,w,v,!1),d.isSome(g)&&
d.isSome(l)&&G.intersectsSegment(I,g,l)&&a.notifyInputPointsChanged())};return this.view.elevationProvider.on("elevation-change",c=>b(c.extent,c.spatialReference))};k._connectComputationToTask=function(a){let b=d.none;const c={computation:a,interpolationInfo:{originalIntersection:y.create(),originalObserver:y.create(),originalTarget:y.create()}};return A.handlesGroup([this._updatingHandles.add(()=>a.inputPoints,()=>{b=d.abortMaybe(b);b=V.createTask(async e=>{await Y.ignoreAbortErrors(this._frameTask.schedule(()=>
this._computeResult(c),e))})},{initial:!0,equals:()=>!1}),A.makeHandle(()=>b=d.abortMaybe(b))])};k._connectComputation=function(a){const b=this._computationHandles;b.has(a)||b.add([this._connectComputationToTarget(a),this._connectComputationToObserver(a),this._connectComputationToRenderSpaceObserver(a),this._connectComputationToCamera(a),this._connectComputationToSlicePlane(a),this._connectComputationToElevation(a),this._connectComputationToTask(a)],a)};k._disconnectComputation=function(a){this._computationHandles.remove(a)};
k._onComputationCollectionChange=function({added:a,removed:b}){for(const c of b)this._disconnectComputation(c);for(const c of a)this._connectComputation(c)};k._onTargetCollectionChange=function({added:a,removed:b}){for(const c of b)this._removeTarget(c);for(const c of a)this._addTarget(c)};k._onCursorTargetChange=function(a,b){d.isSome(b)&&this._removeTarget(b);d.isSome(a)&&this._addTarget(a)};k._addTarget=function(a){this._computations.some(b=>b.target===a)||this._computations.add(new ca.LineOfSightComputation({target:a}))};
k._removeTarget=function(a){const b=this._computations.findIndex(c=>c.target===a);this._computations.removeAt(b)};k._connectObserver=function(){return A.handlesGroup([this._updatingHandles.add(()=>({observerPosition:d.isSome(this.analysis.observer)?this.analysis.observer.position:null,projectedObserverPosition:B.projectOrLoad(d.isSome(this.analysis.observer)?this.analysis.observer.position:null,this.view.spatialReference),observerElevationInfo:d.isSome(this.analysis.observer)?this.analysis.observer.elevationInfo:
null,observerFeatureInfo:d.isSome(this.analysis.observer)?this.analysis.observer.feature:null}),({observerPosition:a,projectedObserverPosition:b,observerElevationInfo:c,observerFeatureInfo:e})=>{d.isSome(b.pending)?this._updatingHandles.addPromise(b.pending):this._onObserverPositionChange(a,b.geometry,c,e,!0)},F.initial)])};k._connectComputations=function(){return this._updatingHandles.addOnCollectionChange(()=>this._computations,a=>this._onComputationCollectionChange(a),{initial:!0,final:!0})};k._connectTargets=
function(){return A.handlesGroup([this._updatingHandles.addOnCollectionChange(()=>this.analysis.targets,a=>this._onTargetCollectionChange(a),{initial:!0,final:!0}),this._updatingHandles.add(()=>this.analysisViewData.cursorTarget,(a,b)=>{this._onCursorTargetChange(a,b)})])};k._getEffectiveElevationInfo=function(a,b){return a.hasZ?d.unwrapOr(b,{mode:"absolute-height",offset:0}):{mode:"on-the-ground",offset:0}};J._createClass(D,[{key:"updating",get:function(){return this._frameTask.updating||this._updatingHandles.updating}},
{key:"priority",get:function(){return this._frameTask.priority},set:function(a){this._frameTask.priority=a}},{key:"_computations",get:function(){return this.analysisViewData.computations}},{key:"_elevationAlignedObserverPositionRenderSpace",get:function(){return this.analysisViewData.observerEngineLocation},set:function(a){this.analysisViewData.observerEngineLocation=a}},{key:"_screenPixelSize",get:function(){return this.view.state.camera.computeScreenPixelSizeAt(this._elevationAlignedObserverPositionRenderSpace)}},
{key:"_isCameraDirty",get:function(){var a=this.analysisViewData.elevationAlignedObserver;const {view:b}=this,{renderCoordsHelper:c}=b;if(d.isNone(a)||d.isNone(c))return!1;const e=H;c.toRenderCoords(a,e);a=b.state.camera.computeScreenPixelSizeAt(e);return.1<Math.abs((a-this._screenPixelSize)/this._screenPixelSize)}}]);return D}(W.EventedMixin(U));r.__decorate([u.property({constructOnly:!0})],q.LineOfSightController.prototype,"analysis",void 0);r.__decorate([u.property({constructOnly:!0})],q.LineOfSightController.prototype,
"analysisViewData",void 0);r.__decorate([u.property({constructOnly:!0})],q.LineOfSightController.prototype,"view",void 0);r.__decorate([u.property()],q.LineOfSightController.prototype,"updating",null);r.__decorate([u.property()],q.LineOfSightController.prototype,"priority",null);r.__decorate([u.property()],q.LineOfSightController.prototype,"updateOnCameraChange",void 0);r.__decorate([u.property()],q.LineOfSightController.prototype,"_computations",null);r.__decorate([u.property()],q.LineOfSightController.prototype,
"_elevationAlignedObserverPositionRenderSpace",null);r.__decorate([u.property()],q.LineOfSightController.prototype,"_observerGroundOffsetRenderSpace",void 0);r.__decorate([u.property()],q.LineOfSightController.prototype,"_effectiveObserverElevationMode",void 0);r.__decorate([u.property()],q.LineOfSightController.prototype,"_observerFeatureId",void 0);r.__decorate([u.property()],q.LineOfSightController.prototype,"_screenPixelSize",null);r.__decorate([u.property({readOnly:!0})],q.LineOfSightController.prototype,
"_updatingHandles",void 0);r.__decorate([u.property()],q.LineOfSightController.prototype,"_frameTask",void 0);r.__decorate([u.property()],q.LineOfSightController.prototype,"_isCameraDirty",null);q.LineOfSightController=r.__decorate([Z.subclass("esri.views.3d.analysis.LineOfSight.LineOfSightController")],q.LineOfSightController);const H=y.create(),R=L.create(),I=G.empty();Object.defineProperty(q,Symbol.toStringTag,{value:"Module"})});