// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/Accessor ../../../../core/maybe ../../../../core/screenUtils ../../../../core/accessorSupport/decorators/property ../../../../core/accessorSupport/ensureType ../../../../core/arrayUtils ../../../../core/has ../../../../core/accessorSupport/decorators/subclass ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../geometry/support/ray ../../../../geometry/support/vectorStacks ../../../../layers/graphics/dehydratedFeatures ./LineOfSightIntersectionResult ../../layers/i3s/Intersector ../../support/geometryUtils/ray ../../terrain/Intersector ../../webgl-engine/lib/Intersector ../../webgl-engine/lib/IntersectorInterfaces ../../webgl-engine/lib/intersectorUtilsConversions".split(" "),
function(k,t,u,A,q,B,y,P,Q,R,C,g,h,n,D,E,v,F,G,H,I,p,J){k.LineOfSightRayIntersector=function(l){function r(b){b=K.call(this,b);b._terrainIntersectionOptionsLayerUids=new Set(["terrain"]);return b}t._inherits(r,l);var K=t._createSuper(r);l=r.prototype;l.initialize=function(){this.intersector=I.newIntersector(this.view.state.viewingMode);this.intersector.options.hud=!1;this.intersector.options.store=p.StoreResults.MIN};l.getScreenPointIntersection=function(b){b=B.screenPointObjectToArray(b,D.sv2d.get());
b=G.fromScreen(this.view.state.camera,b,w);return this._getRayIntersection(b)};l._getRayIntersection=function(b,d){if(q.isNone(b)||q.isNone(this.view.sceneIntersectionHelper))return null;this.intersector.options.store=p.StoreResults.MIN;this.view.sceneIntersectionHelper.intersectToolIntersectorRay(b,this.intersector,d);var a=this.intersector.results.min;d=h.create();if(!a.getIntersectionPoint(d))return null;const e=this.view.renderCoordsHelper.fromRenderCoords(d,this.view.spatialReference),f=h.clone(a.normal);
if(F.isI3sIntersectorResult(a))return new v.LineOfSightIntersectionResult({type:p.IntersectorType.OBJECT,id:`${a.target.layerUid}/${a.target.nodeIndex}/${a.target.componentIndex}`,mapPoint:e,renderPoint:d,normal:f,ray:n.copy(b),graphic:null});if(H.isTerrainIntersectorResult(a))return new v.LineOfSightIntersectionResult({type:p.IntersectorType.TERRAIN,id:a.target.lij.slice(),mapPoint:e,renderPoint:d,normal:f,ray:n.copy(b),graphic:null});a=J.toGraphic(a,this.view);if(q.isSome(a)){const m=a.layer;var c=
a.sourceLayer;if(c)switch(c.type){case "scene":c=E.getObjectId(a,c.objectIdField);break;default:c=a.uid}else c=a.uid;return new v.LineOfSightIntersectionResult({type:p.IntersectorType.OBJECT,id:`${m?.uid}/${c}`,mapPoint:e,renderPoint:d,normal:f,ray:n.copy(b),graphic:a})}return null};l.updateFromGroundIntersection=function(b,d,a){var e=L;const f=M,c=N,m=O;g.copy(f,b);this.view.renderCoordsHelper.worldUpAtPosition(f,c);g.normalize(c,c);const x=this.view.basemapTerrain.visibleElevationBounds,z=0<=d?
1:-1;g.scale(m,c,z*((x?Math.abs(x.max-x.min):100)+Math.abs(d)));g.add(e,f,m);n.fromPoints(e,f,w);e=this._getRayIntersection(w,{include:this._terrainIntersectionOptionsLayerUids});if(q.isSome(e))return g.scale(m,c,z*d),g.add(a,e.renderPoint,m),h.clone(e.normal);g.copy(a,b);return null};return t._createClass(r)}(A);u.__decorate([y.property()],k.LineOfSightRayIntersector.prototype,"view",void 0);u.__decorate([y.property()],k.LineOfSightRayIntersector.prototype,"intersector",void 0);k.LineOfSightRayIntersector=
u.__decorate([C.subclass("esri.views.3d.analysis.LineOfSight.LineOfSightRayIntersector")],k.LineOfSightRayIntersector);const L=h.create(),M=h.create(),N=h.create(),O=h.create(),w=n.create();Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})});