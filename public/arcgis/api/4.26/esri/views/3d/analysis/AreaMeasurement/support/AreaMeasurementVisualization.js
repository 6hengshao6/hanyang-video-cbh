// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../Color ../../../../../intl ../../../../../core/Accessor ../../../../../core/analysisThemeUtils ../../../../../core/has ../../../../../core/Handles ../../../../../core/mathUtils ../../../../../core/maybe ../../../../../core/quantityFormatUtils ../../../../../core/quantityUtils ../../../../../core/reactiveUtils ../../../../../core/unitUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/accessorSupport/ensureType ../../../../../core/arrayUtils ../../../../../core/accessorSupport/decorators/subclass ../../../../../chunks/mat4 ../../../../../chunks/mat4f64 ../../../../../chunks/vec3 ../../../../../chunks/vec3f64 ../../support/viewUtils ../../../interactive/visualElements/LabelVisualElement ../../../interactive/visualElements/LineVisualElement ../../../interactive/visualElements/MeasurementAreaVisualElement ../../../interactive/visualElements/support/Segment ../../../webgl-engine/lib/Material ../../../webgl-engine/materials/lineStippleUtils ../../../../../intl/locale ../../../../../intl/messages".split(" "),
function(m,G,n,x,Z,K,r,aa,L,M,g,H,N,E,y,p,ba,ca,O,P,Q,I,v,R,F,z,S,A,B,T,U,V){m.AreaMeasurementVisualization=function(e){function C(a){a=W.call(this,a);a._handles=new L;a._params={pathLineColor:x.toUnitRGBA(r.getAccentColor()),pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:x.toUnitRGBA(r.getAccentColor()),perimeterLineWidth:2,projectionLineColor:x.toUnitRGBA(r.getAccentColor()),projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:x.toUnitRGBA(r.getAccentColor(.5)),areaColor2:x.toUnitRGBA(r.getContrastColor(.5)),
labelDistance:25};a._path=null;a._intersectedPath=null;a._perimeter=null;a._intersectedPerimeter=null;a._projectionLines=null;a._measurementArea=null;a._areaLabel=null;a._pathLengthLabel=null;a._cursorSegmentLengthLabel=null;a._perimeterLengthLabel=null;a._pathSegments=[];a._perimeterSegments=[];a._cursorSegment=null;a._origin=v.create();a._originTransform=Q.create();a._cursorPositionRenderSpace=v.create();a.messages=null;a.viewData=X;a.areaLabel=null;a.perimeterLengthLabel=null;a.loadingMessages=
!0;return a}G._inherits(C,e);var W=G._createSuper(C);e=C.prototype;e.initialize=function(){const {analysisViewData:a,_params:b,view:d}=this;this._path=new z.LineVisualElement({view:d,attached:!0,width:b.pathLineWidth,color:b.pathLineColor,polygonOffset:!0,renderOccluded:B.RenderOccludedFlag.OccludeAndTransparent});this._intersectedPath=new z.LineVisualElement({view:d,attached:!0,width:b.pathLineWidth,color:b.intersectingLineColor,polygonOffset:!0,renderOccluded:B.RenderOccludedFlag.OccludeAndTransparent});
this._perimeter=new z.LineVisualElement({view:d,attached:!0,width:b.perimeterLineWidth,color:b.perimeterLineColor,polygonOffset:!0,renderOccluded:B.RenderOccludedFlag.OccludeAndTransparent});this._intersectedPerimeter=new z.LineVisualElement({view:d,attached:!0,width:b.perimeterLineWidth,color:b.intersectingLineColor,polygonOffset:!0,renderOccluded:B.RenderOccludedFlag.OccludeAndTransparent});this._projectionLines=new z.LineVisualElement({view:d,attached:!0,width:b.projectionLineWidth,color:b.projectionLineColor,
stipplePattern:T.createStipplePatternSimple(b.projectionLineStippleSize),polygonOffset:!0,renderOccluded:B.RenderOccludedFlag.OccludeAndTransparent});this._measurementArea=new S.MeasurementAreaVisualElement({view:d,attached:!0,color1:b.areaColor1,color2:b.areaColor2});const f={attached:!0,backgroundColor:r.getTextHaloColor(.6),textColor:r.getTextColor(),view:d};this._areaLabel=new F.LabelVisualElement({...f,fontSize:w.Large});this._pathLengthLabel=new F.LabelVisualElement({...f,fontSize:w.Small});
this._cursorSegmentLengthLabel=new F.LabelVisualElement({...f,fontSize:w.Small});this._perimeterLengthLabel=new F.LabelVisualElement({...f,fontSize:w.Small});this._handles.add([E.watch(()=>[a.mode,this.visible,a.unit,a.measurementData,a.cursorPoint],()=>this._update(),E.syncAndInitial),E.watch(()=>d.state?.camera,()=>this._updateLabels(),E.syncAndInitial),U.onLocaleChange(()=>this._updateMessageBundle())]);this._updateMessageBundle()};e.destroy=function(){this._measurementArea=g.destroyMaybe(this._measurementArea);
this._path=g.destroyMaybe(this._path);this._intersectedPath=g.destroyMaybe(this._intersectedPath);this._perimeter=g.destroyMaybe(this._perimeter);this._intersectedPerimeter=g.destroyMaybe(this._intersectedPerimeter);this._areaLabel=g.destroyMaybe(this._areaLabel);this._pathLengthLabel=g.destroyMaybe(this._pathLengthLabel);this._cursorSegmentLengthLabel=g.destroyMaybe(this._cursorSegmentLengthLabel);this._perimeterLengthLabel=g.destroyMaybe(this._perimeterLengthLabel);this._projectionLines=g.destroyMaybe(this._projectionLines);
this._handles=g.destroyMaybe(this._handles);this.set("view",null)};e._update=function(){if(!this.destroyed&&this.view.ready&&this.view.renderCoordsHelper){var {analysisViewData:{measurementData:a},analysisViewData:b}=this;g.isNone(a)||(this._updateViewData(a,b.path,b.cursorPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}};e._updateViewData=function(a,b,d){const f=b.isValidPolygon,h="geodesic"===
a.actualMeasurementMode;var k=h?a.geodesicArea:a.area;let c=1;k&&(k=this._toPreferredAreaUnit(k,this.analysisViewData.unit),c=M.nextHighestPowerOfTen(Math.sqrt(k.value)/Math.sqrt(300)),c*=Math.sqrt(y.convertUnit(1,k.unit,"square-meters")),c/=a.unitNormalizer.normalizeDistance(1));this._set("viewData",{validMeasurement:f,path:b,pathVersion:b.version,cursorPoint:d,measurementData:a,mode:a.actualMeasurementMode,positionsGeographic:a.positionsGeographic,positionsRenderCoords:a.positionsRenderCoords,positionsProjected:a.positionsProjectedWorldCoords,
positionsFittedRenderCoords:a.positionsFittedRenderCoords,intersectingSegments:h?a.geodesicIntersectingSegments:a.intersectingSegments,triangleIndices:h?a.geodesicTriangleIndices:a.triangleIndices,fittingMode:a.fittingMode,areaCentroid:h?a.geodesicAreaCentroidRenderCoords:a.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:f?0:b.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:c})};e._updateOrigin=function(){R.midpoint(this.viewData.positionsRenderCoords,this._origin);P.fromTranslation(this._originTransform,
this._origin);this._measurementArea.transform=this._originTransform;this._projectionLines.transform=this._originTransform};e._createSegments=function(a){const b=this.viewData,d=b.path,f=this.view.renderCoordsHelper.spatialReference,h=b.mode,k=[],c=[],l=[],t=b.validMeasurement?d.numVertices:d.numVertices-1;for(let q=0;q<t;++q){const u=b[a][q],J=b[a][(q+1)%d.numVertices];let D=null;switch(h){case "euclidean":D=new A.EuclideanSegment(u,J);break;case "geodesic":D=new A.GeodesicSegment(u,J,f)}b.intersectingSegments.has(q)?
l.push(D):c.push(D);k.push(D)}return{all:k,nonIntersecting:c,intersecting:l}};e._updatePathSegments=function(){const {view:{renderCoordsHelper:a},viewData:b,visible:d}=this,f=this._createSegments("positionsRenderCoords"),{cursorPoint:h,mode:k,path:c}=b;var l=!c.isValidPolygon;const t=a.spatialReference;this._cursorSegment=null;if(0<c.numVertices&&l&&g.isSome(h)&&a.toRenderCoords(h,this._cursorPositionRenderSpace)){l=b.positionsRenderCoords[c.numVertices-1];const q=this._cursorPositionRenderSpace;
let u=null;switch(k){case "euclidean":u=new A.EuclideanSegment(l,q);break;case "geodesic":u=new A.GeodesicSegment(l,q,t)}f.nonIntersecting.push(u);this._cursorSegment=u}this._path.setGeometryFromSegments(f.nonIntersecting,this._origin);this._path.visible=d;this._intersectedPath.setGeometryFromSegments(f.intersecting,this._origin);this._intersectedPath.visible=d;this._pathSegments=f.all};e._updatePerimeterSegments=function(){const a=this.visible&&"euclidean"===this.viewData.mode,b=this._createSegments("positionsFittedRenderCoords");
this._perimeter.setGeometryFromSegments(b.nonIntersecting,this._origin);this._perimeter.visible=a;this._intersectedPerimeter.setGeometryFromSegments(b.intersecting,this._origin);this._intersectedPerimeter.visible=a;this._perimeterSegments=b.all};e._updateArea=function(){const a=this.viewData;switch(a.mode){case "euclidean":this._updateAreaEuclidean(a);break;case "geodesic":this._updateAreaGeodesic()}};e._updateAreaEuclidean=function(a){const b=this.visible;a.validMeasurement&&0===a.intersectingSegments.size&&
a.triangleIndices?(this._measurementArea.geometry={uv:a.positionsProjected,position:a.positionsFittedRenderCoords,triangleIndices:a.triangleIndices},this._measurementArea.size=[a.checkerSize,a.checkerSize],this._measurementArea.visible=b):this._measurementArea.visible=!1};e._updateAreaGeodesic=function(){this._measurementArea.visible=!1};e._updateProjectionLines=function(){const a=this.viewData,b=this.visible,d=a.path;var f=a.mode;if(0<d.numVertices&&a.validMeasurement&&"euclidean"===f){f=[];for(let h=
0;h<d.numVertices;++h){const k=v.create();I.subtract(k,a.positionsRenderCoords[h],this._origin);const c=v.create();I.subtract(c,a.positionsFittedRenderCoords[h],this._origin);f.push([k,c])}this._projectionLines.geometry=f;this._projectionLines.visible=b}else this._projectionLines.geometry=null,this._projectionLines.visible=!1};e._updateLabels=function(){if(!this.destroyed){var {viewData:a}=this,{measurementData:b,mode:d,path:f}=a;if(f){var h=!f.isValidPolygon,k=this.visible,c=this._formatAreaLabel(this.messages,
"geodesic"===d?b.geodesicArea:b.area,this.analysisViewData.unit);g.isSome(c)?(this._areaLabel.geometry={type:"point",point:a.areaCentroid},this._areaLabel.text=c,this._areaLabel.visible=a.validMeasurement&&0===a.intersectingSegments.size&&k):this._areaLabel.visible=!1;this._set("areaLabel",g.unwrap(c));c=this._formatLengthLabel(this.messages,"geodesic"===d?b.geodesicPathLength:b.pathLength,this.analysisViewData.unit);if(g.isSome(c)&&0<=a.pathLengthLabelSegmentIndex&&a.pathLengthLabelSegmentIndex<
this._pathSegments.length){var l=this._pathSegments[a.pathLengthLabelSegmentIndex],t=g.isSome(this._cursorSegment)?this._cursorSegment:Y;this._pathLengthLabel.distance=this._params.labelDistance;this._pathLengthLabel.geometry={type:"corner",left:l,right:t};this._pathLengthLabel.text=c;this._pathLengthLabel.visible=h&&0<f.numVertices&&k}else this._pathLengthLabel.visible=!1;c="geodesic"===d?a.measurementData.geodesicCursorSegmentLength:a.measurementData.cursorSegmentLength;g.isSome(c)?(l=this._formatLengthLabel(this.messages,
c,this.analysisViewData.unit),this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=g.isSome(this._cursorSegment)?{type:"segment",segment:this._cursorSegment,sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=g.unwrap(l),this._cursorSegmentLengthLabel.visible=h&&0!==c.value&&k):this._cursorSegmentLengthLabel.visible=!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=
!1);this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);h="geodesic"===a.mode;c=this._formatLengthLabel(this.messages,h?b.geodesicPathLength:b.perimeterLength,this.analysisViewData.unit);this._set("perimeterLengthLabel",g.unwrap(c));if(a.validMeasurement&&0===a.intersectingSegments.size){this._perimeterLengthLabel.distance=this._params.labelDistance;this._perimeterLengthLabel.anchor="top";this._perimeterLengthLabel.text=g.unwrap(c);l=this._perimeterLengthLabel.visible=
!0;for(c=0;c<a.path.numVertices;++c)if(l=(a.perimeterLengthLabelSegmentIndex+c)%a.path.numVertices,t=h?this._pathSegments[l]:this._perimeterSegments[l],l=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:t,sampleLocation:"center"},this._perimeterLengthLabel.overlaps(this._areaLabel))l=!1;else break;this._perimeterLengthLabel.visible=l&&k}else this._perimeterLengthLabel.visible=!1}}};e._toPreferredAreaUnit=function(a,b){return N.toUnit(a,this._preferredAreaUnit(a,b))};e._preferredAreaUnit=
function(a,b){switch(b){case "metric":return y.preferredMetricAreaUnit(a.value,a.unit);case "imperial":return y.preferredImperialAreaUnit(a.value,a.unit);default:return b}};e._preferredLengthUnit=function(a,b){b=this._deriveLengthUnitFromAreaUnit(b);switch(b){case "metric":return y.preferredMetricLengthUnit(a.value,a.unit);case "imperial":return y.preferredImperialLengthUnit(a.value,a.unit);default:return b}};e._deriveLengthUnitFromAreaUnit=function(a){switch(a){case "metric":return"metric";case "imperial":return"imperial";
case "square-inches":return"inches";case "square-feet":return"feet";case "square-yards":return"yards";case "square-miles":return"miles";case "square-us-feet":return"us-feet";case "square-millimeters":return"millimeters";case "square-centimeters":return"centimeters";case "square-decimeters":return"decimeters";case "square-meters":return"meters";case "square-kilometers":return"kilometers";case "acres":return"imperial";case "ares":case "hectares":return"metric"}throw Error("unhandled area unit");};e._formatAreaLabel=
function(a,b,d){return a&&b&&H.formatDecimal(a,b,this._preferredAreaUnit(b,d))};e._formatLengthLabel=function(a,b,d){return a&&b&&H.formatDecimal(a,b,this._preferredLengthUnit(b,d))};e._updateMessageBundle=function(){this.loadingMessages=!0;V.fetchMessageBundle("esri/core/t9n/Units").then(a=>{this.messages=a;this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})};G._createClass(C,[{key:"visible",get:function(){return this.analysisViewData.visible}},{key:"testData",get:function(){return{labels:{area:this._areaLabel,
pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}}]);return C}(K);n.__decorate([p.property()],m.AreaMeasurementVisualization.prototype,"view",void 0);n.__decorate([p.property()],m.AreaMeasurementVisualization.prototype,"messages",void 0);n.__decorate([p.property()],m.AreaMeasurementVisualization.prototype,"analysis",void 0);n.__decorate([p.property()],m.AreaMeasurementVisualization.prototype,"viewData",void 0);n.__decorate([p.property()],
m.AreaMeasurementVisualization.prototype,"analysisViewData",void 0);n.__decorate([p.property({readOnly:!0})],m.AreaMeasurementVisualization.prototype,"areaLabel",void 0);n.__decorate([p.property({readOnly:!0})],m.AreaMeasurementVisualization.prototype,"perimeterLengthLabel",void 0);n.__decorate([p.property()],m.AreaMeasurementVisualization.prototype,"loadingMessages",void 0);n.__decorate([p.property()],m.AreaMeasurementVisualization.prototype,"visible",null);m.AreaMeasurementVisualization=n.__decorate([O.subclass("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],
m.AreaMeasurementVisualization);var w;(function(e){e[e.Small=12]="Small";e[e.Large=16]="Large"})(w||(w={}));const X={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null},Y=new A.EuclideanSegment(v.create(),
v.create());Object.defineProperty(m,Symbol.toStringTag,{value:"Module"})});