// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/vec2","../../../../chunks/vec2f64"],function(t,n,r,y){let v=function(){function d(){}d.prototype.rebuildConnectingProfileGeometry=function(g,q,b){for(let a=0;a<q.vertices.length;++a)b(g.frame,q.vertices[a],q.vertexNormals[a],0,0)};return n._createClass(d)}(),A=function(d){function g(){return q.call(this)}n._inherits(g,d);var q=n._createSuper(g);d=g.prototype;d.getNumVertices=function(){return 0};d.getNumIndices=function(){return 0};
d.rebuildCapGeometry=function(){};d.buildTopology=function(){};return n._createClass(g)}(v),B=function(d){function g(b,a=0,e=!1){var c=q.call(this);c.profile=b;c.profilePlaneOffset=a;c.flip=e;return c}n._inherits(g,d);var q=n._createSuper(g);d=g.prototype;d.getNumVertices=function(){return this.profile.vertices.length};d.getNumIndices=function(){return 3*this.profile.numSegments};d.rebuildConnectingProfileGeometry=function(b,a,e){for(let c=0;c<a.vertices.length;++c)e(b.frame,a.vertices[c],a.vertexNormals[c],
this.profilePlaneOffset,0)};d.rebuildCapGeometry=function(b,a){const e=z;r.set(e,0,0);const c=this.flip?1:-1;for(let f=0;f<this.profile.vertices.length;++f)a(b.frame,this.profile.vertices[f],e,this.profilePlaneOffset,c)};d.buildTopology=function(b,a){b=this.vertexBufferStart+this.profile.vertexIndices[0];for(let e=1;e<this.profile.numSegments;++e){const c=this.vertexBufferStart+this.profile.vertexIndices[2*e],f=this.vertexBufferStart+this.profile.vertexIndices[2*e+1];this.flip?a(f,c,b):a(b,c,f)}};
return n._createClass(g)}(v),D=function(d){function g(b){var a=q.call(this);a.flip=!1;a.sign=0;a.breakNormals=!1;a.numSegments=3;a.profile=b.profile;a.flip=b.flip;a.sign=a.flip?1:-1;a.breakNormals=b.breakNormals;a.numSegments=b.subdivisions;return a}n._inherits(g,d);var q=n._createSuper(g);d=g.prototype;d.getNumVertices=function(){let b=0;b=this.profile.vertices.length*(this.numSegments-1);this.breakNormals&&(b+=this.profile.vertices.length);return b+=this.profile.poles.length};d.getNumIndices=function(){let b;
b=2*this.profile.numSegments*(this.numSegments-1);for(let a=0;a<this.profile.numSegments;++a)b=this.profile.poleIndices[this.profile.vertexIndices[2*a]]===this.profile.poleIndices[this.profile.vertexIndices[2*a+1]]?b+1:b+2;return 3*b};d.rebuildCapGeometry=function(b,a){b=b.frame;const e=.5*this.sign,c=C,f=z;r.set(f,0,0);for(var h=0;h<this.profile.poles.length;++h){var l=this.profile.poles[h];l.normal?a(b,l.position,l.normal,e,0):a(b,l.position,f,e,this.sign)}if(this.breakNormals)for(h=0;h<this.profile.vertices.length;++h)a(b,
this.profile.vertices[h],this.profile.vertexNormals[h],0,0);for(h=0;h<this.numSegments-1;++h){var m=(1-(h+1)/this.numSegments)*Math.PI*.5;l=Math.sin(m);m=Math.cos(m);for(let p=0;p<this.profile.vertices.length;++p){const k=this.profile.poles[this.profile.poleIndices[p]];r.subtract(c,this.profile.vertices[p],k.position);r.scale(c,c,l);k.normal?(r.add(c,c,k.position),a(b,c,k.normal,e*m,0)):(r.normalize(f,c),r.scale(f,f,l),r.add(c,c,k.position),a(b,c,f,e*m,this.sign*m))}}};d.buildTopology=function(b,
a){b=this.breakNormals?this.vertexBufferStart+this.profile.poles.length:this.firstProfileVertexIndex;const e=this.breakNormals?this.vertexBufferStart+this.profile.poles.length+this.profile.vertices.length:this.vertexBufferStart+this.profile.poles.length;for(let c=0;c<this.profile.numSegments;++c){const f=this.profile.vertexIndices[2*c],h=this.profile.vertexIndices[2*c+1],l=this.vertexBufferStart+this.profile.poleIndices[f],m=this.vertexBufferStart+this.profile.poleIndices[h];let p=b+f,k=b+h;for(let w=
0;w<this.numSegments-1;++w){const u=e+w*this.profile.vertices.length+f,x=e+w*this.profile.vertices.length+h;this.flip?(a(u,k,p),a(k,u,x)):(a(p,k,u),a(x,u,k));p=u;k=x}this.flip?(a(l,k,p),l!==m&&a(l,m,k)):(a(p,k,l),l!==m&&a(k,m,l))}};return n._createClass(g)}(v);const C=y.create(),z=y.create();t.NoCapBuilder=A;t.PathCapBuilder=v;t.RoundCapBuilder=D;t.TriangulationCapBuilder=B;Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});