// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("require exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../core/shaderTechnique/ShaderTechniqueConfiguration ../lib/DefaultVertexAttributeLocations ../lib/OrderIndependentTransparency ../lib/Program ../lib/TransparencyPassType ../materials/DefaultTechniqueConfiguration ../../../../chunks/MeasurementArrow.glsl ../../../webgl/enums ../../../webgl/renderState".split(" "),function(t,
g,d,h,e,f,k,u,q,v,l,w,x,r,m){f=function(c){function a(b,n,y){return p.call(this,b,n,y)}d._inherits(a,c);var p=d._createSuper(a);c=a.prototype;c.initializeProgram=function(b){return new v.Program(b.rctx,a.shader.get().build(this.configuration),u.Default3D)};c._setPipelineState=function(b){const n=b===l.TransparencyPassType.NONE;return m.makePipelineState({blending:this.configuration.transparent?n?q.blendingDefault:q.oitBlending(b):null,polygonOffset:this.configuration.polygonOffsetEnabled?{factor:0,
units:-4}:null,depthTest:{func:r.CompareFunction.LESS},depthWrite:m.defaultDepthWriteParams,colorWrite:m.defaultColorWriteParams})};c.initializePipeline=function(){return this._setPipelineState(this.configuration.transparencyPassType)};d._createClass(a,[{key:"primitiveType",get:function(){return r.PrimitiveType.TRIANGLE_STRIP}}]);return a}(f.ShaderTechnique);f.shader=new e.ReloadableShaderModule(x.MeasurementArrow,()=>new Promise((c,a)=>t(["./MeasurementArrow.glsl"],c,a)));e=function(c){function a(){var b=
p.apply(this,arguments);b.polygonOffsetEnabled=!1;b.transparent=!1;b.transparencyPassType=l.TransparencyPassType.NONE;return b}d._inherits(a,c);var p=d._createSuper(a);return d._createClass(a)}(w.DefaultTechniqueConfiguration);h.__decorate([k.parameter()],e.prototype,"polygonOffsetEnabled",void 0);h.__decorate([k.parameter()],e.prototype,"transparent",void 0);h.__decorate([k.parameter({count:l.TransparencyPassType.COUNT})],e.prototype,"transparencyPassType",void 0);g.MeasurementArrowTechnique=f;g.MeasurementArrowTechniqueConfiguration=
e;Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});