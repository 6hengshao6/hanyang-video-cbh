// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../../../chunks/_rollupPluginBabelHelpers ../../../../../../chunks/tslib.es6 ../../../../../../core/maybe ../../../../../../chunks/mat3 ../../../../../../chunks/mat3f32 ../../../../../../chunks/vec3 ../../../../../../chunks/vec3f32 ../../../../../../chunks/vec4 ../../../../../../chunks/vec4f32 ../../../../../../chunks/vec4f64 ../../../../layers/support/symbolColorUtils ../../../../terrain/interfaces ./ComponentTechnique ./ComponentTechniqueConfiguration ./shader/ComponentData.glsl ../../../../../../chunks/ComponentShader.glsl ./shader/VertexDiscardByOpacity.glsl ../../../core/material/MaterialBase ../../../core/renderPasses/AllRenderPasses ../../../core/shaderLibrary/ShaderOutput ../../../core/shaderLibrary/attributes/NormalAttribute.glsl ../../../core/shaderLibrary/shading/Normals.glsl ../../../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl ../../../core/shaderLibrary/util/AlphaCutoff ../../../core/shaderLibrary/util/EllipsoidMode ../../../core/util/TwoVectorPosition ../../../lib/basicInterfaces ../../../lib/TransparencyPassType".split(" "),
function(h,q,e,l,G,M,r,H,I,N,O,J,D,P,t,K,Q,w,d,x,y,E,L,B,R,S,T,C,U){let k=function(f){function m(c,n){var a=u.call(this);a.toMapSpace=n;a.baseColor=N.fromValues(1,1,1,1);a.usePBR=!1;a.hasParametersFromSource=!1;a.mrrFactors=H.fromValues(1,1,.5);a.emissiveFactor=H.fromValues(0,0,0);a.baseColorTexture=null;a.metallicRoughnessTexture=null;a.emissionTexture=null;a.occlusionTexture=null;a.normalTexture=null;a.objectOpacity=1;a.commonMaterialParameters=new z;a.componentParameters=new A;a.textureAlphaCutoff=
R.defaultMaskAlphaCutoff;a.alphaDiscardMode=C.AlphaDiscardMode.Opaque;a.isIntegratedMesh=!1;a.polygonOffsetEnabled=!1;a.ellipsoidMode=S.EllipsoidMode.Earth;a.hasOccludees=!1;a._techniqueConfiguration=new t.ComponentTechniqueConfiguration;n=new T.TwoVectorPosition(c.position);const g=M.clone(c.rotationScale);G.invert(g,g);a.transformNormalGlobalFromModel=G.transpose(g,g);a.transformWorldFromModelTL=n.low;a.transformWorldFromModelTH=n.high;a.transformWorldFromModelRS=c.rotationScale;return a}q._inherits(m,
f);var u=q._createSuper(m);f=m.prototype;f.dispose=function(){this._technique=l.releaseMaybe(this._technique);this.normalTexture=this.occlusionTexture=this.emissionTexture=this.metallicRoughnessTexture=this.baseColorTexture=null};f.prepareTechnique=function(c,n,a,g){const b=this._techniqueConfiguration;b.hasVertexColors=g.colors;b.hasNormals=g.normals;b.textureCoordinateType=g.textureCoordinates;b.hasMetallicRoughnessTexture=l.isSome(this.metallicRoughnessTexture);b.hasEmissionTexture=l.isSome(this.emissionTexture);
b.hasOcclusionTexture=l.isSome(this.occlusionTexture);b.hasNormalTexture=l.isSome(this.normalTexture);b.transparencyPassType=n.identifier===x.RenderPassIdentifier.Material&&null!=a.transparencyPassType?a.transparencyPassType:U.TransparencyPassType.NONE;b.hasMultipassTerrain=n.identifier===x.RenderPassIdentifier.Material&&null!=a.multipassTerrain?a.multipassTerrain.enabled:!1;b.cullAboveGround=n.identifier===x.RenderPassIdentifier.Material&&null!=a.multipassTerrain?a.multipassTerrain.cullAboveGround:
!1;b.ellipsoidMode=this.ellipsoidMode;b.componentData=this.componentParameters.type;b.cullFace=this.commonMaterialParameters.cullFace;b.doubleSidedMode=this.commonMaterialParameters.doubleSided?L.NormalsDoubleSidedMode.View:L.NormalsDoubleSidedMode.None;b.hasBaseColorTexture=l.isSome(this.baseColorTexture);g=this._computeWhichMaterialPass();b.blendingEnabled=g===p.Transparent||g===p.OpaqueAndTransparent;b.alphaDiscardMode=this.alphaDiscardMode;b.integratedMeshMode=this.isIntegratedMesh?(0===a.overlays.length?
0:l.isSome(a.overlays[D.OverlayIndex.INNER].getColorTextureNoRasterImage()))?Q.getOverlayNormalTexture(a)?t.IntegratedMeshMode.ColorOverlayWithWater:t.IntegratedMeshMode.ColorOverlay:t.IntegratedMeshMode.NoOverlay:t.IntegratedMeshMode.None;b.hasPolygonOffset=this.polygonOffsetEnabled;g=this.hasParametersFromSource&&l.isNone(this.baseColorTexture);b.pbrMode=b.integratedMeshMode===t.IntegratedMeshMode.ColorOverlayWithWater?B.PBRMode.WaterOnIntegratedMesh:this.usePBR?g?B.PBRMode.Schematic:B.PBRMode.Normal:
B.PBRMode.Disabled;b.normalType=b.integratedMeshMode===t.IntegratedMeshMode.None?b.hasNormals?E.NormalAttributeType.CompressedAttribute:E.NormalAttributeType.ScreenDerivative:E.NormalAttributeType.Ground;b.hasSlicePlane=l.isSome(a.slicePlane)&&this.commonMaterialParameters.hasSlicePlane;if(n.identifier===x.RenderPassIdentifier.ShadowMap)b.output=y.ShaderOutput.Shadow,b.vertexDiscardMode=w.VertexDiscardMode.None;else if(n.identifier===x.RenderPassIdentifier.Highlight)b.output=y.ShaderOutput.Highlight,
b.vertexDiscardMode=w.VertexDiscardMode.None;else{this._computeWhichMaterialPass()===p.OpaqueAndTransparent?b.vertexDiscardMode=n.transparent?w.VertexDiscardMode.Opaque:w.VertexDiscardMode.Transparent:b.vertexDiscardMode=w.VertexDiscardMode.None;b.output=n.output;b.receiveAmbientOcclusion=!1;b.receiveShadows=!1;switch(n.output){case y.ShaderOutput.Color:b.receiveAmbientOcclusion=a.ssaoHelper.active;b.hasOccludees=a.hasOccludees;b.receiveShadows=a.shadowMap.ready;b.hasScreenSpaceReflections=a.ssr.enabled;
b.hasCloudsReflections=l.isSome(a.cloudsFade.data);break;case y.ShaderOutput.Alpha:b.hasOccludees=a.hasOccludees;break;case y.ShaderOutput.ObjectAndLayerIdColor:b.objectAndLayerIdColor=!0}b.snowCover=this.hasSnowCover(a)}this._technique=c.releaseAndAcquire(P.ComponentTechnique,b,this._technique);this._setClean();return this._technique};f.hasSnowCover=function(c){return l.isSome(c.weather)&&c.weatherVisible&&"snowy"===c.weather.type&&"enabled"===c.weather.snowCover};f.submit=function(c,n,a){if(0!==
this.objectOpacity){var g=a.renderable.geometry,b=a.components;a=a.renderable.meta.cameraDepthSquared;var v=b.geometryRanges,F=b.highlightRanges;b=b.defaultShadowMapRanges;switch(this._computeWhichMaterialPass()){case p.Opaque:c.materialOpaque.submitDraw(this,g,v,a);break;case p.Transparent:c.materialTransparent.submitDraw(this,g,v,a);break;case p.OpaqueAndTransparent:c.materialOpaque.submitDraw(this,g,v,a);c.materialTransparent.submitDraw(this,g,v,a);break;case p.IntegratedMesh:c.materialIntegratedMesh.submitDraw(this,
g,v,a),(0===n.overlays.length?0:l.isSome(n.overlays[D.OverlayIndex.INNER].getValidTexture(D.RenderTargetType.Highlight)))&&c.highlightIntegratedMesh.submitDraw(this,g,v,a)}(n=this.componentParameters.castShadows!==h.ComponentParameterSummary.None)&&c.shadowMap.submitDraw(this,g,v,a);l.isSome(F)&&(c.highlight.submitDraw(this,g,F,a),n&&c.highlightShadowMap.submitDraw(this,g,F,a));n&&l.isSome(b)&&c.defaultShadowMap.submitDraw(this,g,b,a)}};f._computeWhichMaterialPass=function(){return this.isIntegratedMesh?
p.IntegratedMesh:1>this.objectOpacity?p.Transparent:this.componentParameters.opaqueOverride===h.ComponentParameterSummary.All?p.Opaque:1>this.baseColor[3]||this.alphaDiscardMode===C.AlphaDiscardMode.Blend||this.alphaDiscardMode===C.AlphaDiscardMode.MaskBlend?p.Transparent:this.componentParameters.transparent===h.ComponentParameterSummary.None?p.Opaque:this.componentParameters.transparent===h.ComponentParameterSummary.All?p.Transparent:p.OpaqueAndTransparent};q._createClass(m,[{key:"texture",get:function(){return l.isSome(this.baseColorTexture)?
this.baseColorTexture.glTexture:null}},{key:"textureMetallicRoughness",get:function(){return l.isSome(this.metallicRoughnessTexture)?this.metallicRoughnessTexture.glTexture:null}},{key:"textureEmissive",get:function(){return l.isSome(this.emissionTexture)?this.emissionTexture.glTexture:null}},{key:"textureOcclusion",get:function(){return l.isSome(this.occlusionTexture)?this.occlusionTexture.glTexture:null}},{key:"textureNormal",get:function(){return l.isSome(this.normalTexture)?this.normalTexture.glTexture:
null}}]);return m}(d.MaterialBase);e.__decorate([d.parameter({vectorOps:I.vec4})],k.prototype,"baseColor",void 0);e.__decorate([d.parameter()],k.prototype,"usePBR",void 0);e.__decorate([d.parameter()],k.prototype,"hasParametersFromSource",void 0);e.__decorate([d.parameter({vectorOps:r.vec3})],k.prototype,"mrrFactors",void 0);e.__decorate([d.parameter({vectorOps:r.vec3})],k.prototype,"emissiveFactor",void 0);e.__decorate([d.parameter({dispose:!0})],k.prototype,"baseColorTexture",void 0);e.__decorate([d.parameter({dispose:!0})],
k.prototype,"metallicRoughnessTexture",void 0);e.__decorate([d.parameter({dispose:!0})],k.prototype,"emissionTexture",void 0);e.__decorate([d.parameter({dispose:!0})],k.prototype,"occlusionTexture",void 0);e.__decorate([d.parameter({dispose:!0})],k.prototype,"normalTexture",void 0);e.__decorate([d.parameter()],k.prototype,"objectOpacity",void 0);e.__decorate([d.parameterBlock()],k.prototype,"commonMaterialParameters",void 0);e.__decorate([d.parameterBlock()],k.prototype,"componentParameters",void 0);
e.__decorate([d.parameter()],k.prototype,"textureAlphaCutoff",void 0);e.__decorate([d.parameter()],k.prototype,"alphaDiscardMode",void 0);e.__decorate([d.parameter()],k.prototype,"isIntegratedMesh",void 0);e.__decorate([d.parameter()],k.prototype,"polygonOffsetEnabled",void 0);e.__decorate([d.parameter()],k.prototype,"ellipsoidMode",void 0);e.__decorate([d.parameter()],k.prototype,"hasOccludees",void 0);var p;(function(f){f[f.Opaque=0]="Opaque";f[f.Transparent=1]="Transparent";f[f.OpaqueAndTransparent=
2]="OpaqueAndTransparent";f[f.IntegratedMesh=3]="IntegratedMesh"})(p||(p={}));let z=function(f){function m(){var c=u.apply(this,arguments);c.doubleSided=!1;c.cullFace=C.CullFaceOptions.Back;c.hasSlicePlane=!0;return c}q._inherits(m,f);var u=q._createSuper(m);return q._createClass(m)}(d.MaterialParameterBlock);e.__decorate([d.parameter()],z.prototype,"doubleSided",void 0);e.__decorate([d.parameter()],z.prototype,"cullFace",void 0);e.__decorate([d.parameter()],z.prototype,"hasSlicePlane",void 0);let A=
function(f){function m(){var c=u.apply(this,arguments);c.externalColor=O.fromValues(1,1,1,1);c.externalColorMixMode=J.ColorMixModeEnum.Multiply;c.castShadows=h.ComponentParameterSummary.All;return c}q._inherits(m,f);var u=q._createSuper(m);q._createClass(m,[{key:"transparent",get:function(){return 1>this.externalColor[3]?h.ComponentParameterSummary.All:h.ComponentParameterSummary.None}},{key:"opaqueOverride",get:function(){return this.externalColorMixMode===J.ColorMixModeEnum.Replace&&1===this.externalColor[3]?
h.ComponentParameterSummary.All:h.ComponentParameterSummary.None}},{key:"visible",get:function(){return 0<this.externalColor[3]?h.ComponentParameterSummary.All:h.ComponentParameterSummary.None}},{key:"type",get:function(){return K.ComponentDataType.Uniform}}]);return m}(d.MaterialParameterBlock);e.__decorate([d.parameter({vectorOps:I.vec4})],A.prototype,"externalColor",void 0);e.__decorate([d.parameter()],A.prototype,"externalColorMixMode",void 0);e.__decorate([d.parameter()],A.prototype,"castShadows",
void 0);h.ComponentParameterSummary=void 0;(function(f){f[f.All=0]="All";f[f.Some=1]="Some";f[f.None=2]="None"})(h.ComponentParameterSummary||(h.ComponentParameterSummary={}));r=function(f){function m(){var c=u.apply(this,arguments);c.texture=null;c.transparent=h.ComponentParameterSummary.None;c.opaqueOverride=h.ComponentParameterSummary.None;c.castShadows=h.ComponentParameterSummary.None;return c}q._inherits(m,f);var u=q._createSuper(m);q._createClass(m,[{key:"type",get:function(){return K.ComponentDataType.Varying}}]);
return m}(d.MaterialParameterBlock);e.__decorate([d.parameter()],r.prototype,"texture",void 0);e.__decorate([d.parameter()],r.prototype,"transparent",void 0);e.__decorate([d.parameter()],r.prototype,"opaqueOverride",void 0);e.__decorate([d.parameter()],r.prototype,"castShadows",void 0);h.CommonMaterialParameters=z;h.ComponentMaterial=k;h.ComponentParametersUniform=A;h.ComponentParametersVarying=r;Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});