// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("require exports ../../../../../../chunks/_rollupPluginBabelHelpers ../../../../../ViewingMode ./ComponentTechniqueConfiguration ../../../../../../chunks/ComponentShader.glsl ../../../core/shaderLibrary/ShaderOutput ../../../core/shaderTechnique/ReloadableShaderModule ../../../core/shaderTechnique/ShaderTechnique ../../../lib/basicInterfaces ../../../lib/OrderIndependentTransparency ../../../lib/Program ../../../lib/StencilUtils ../../../lib/TransparencyPassType ../../../lib/VertexAttribute ../../../../../webgl/renderState".split(" "),
function(v,k,l,w,x,y,p,z,f,A,g,B,m,q,d,h){f=function(c){function e(){return C.apply(this,arguments)}l._inherits(e,c);var C=l._createSuper(e);c=e.prototype;c.initializeConfiguration=function(b,a){a.spherical=b.viewingMode===w.ViewingMode.Global;a.doublePrecisionRequiresObfuscation=b.rctx.driverTest.doublePrecisionRequiresObfuscation.result};c.initializeProgram=function(b){return new B.Program(b.rctx,e.shader.get().build(this.configuration),r)};c._setPipelineState=function(b){const a=this.configuration,
t=a.integratedMeshMode!==x.IntegratedMeshMode.None,n=b===q.TransparencyPassType.NONE,u=b===q.TransparencyPassType.FrontFace;return h.makePipelineState({blending:a.output!==p.ShaderOutput.Color&&a.output!==p.ShaderOutput.Alpha||!a.blendingEnabled?null:n?g.blendingDefault:g.oitBlending(b),culling:h.cullingParams(a.cullFace),depthTest:{func:g.oitDepthTest(b)},depthWrite:n||u?h.defaultDepthWriteParams:null,colorWrite:h.defaultColorWriteParams,stencilWrite:t||a.hasOccludees?m.stencilWriteMaskOn:null,stencilTest:t?
m.replaceBitWhenDepthTestPasses(A.StencilBits.IntegratedMeshMaskExcluded):a.hasOccludees?m.stencilBaseAllZerosParams:null,polygonOffset:n||u?a.hasPolygonOffset?{factor:2,units:2}:null:g.OITPolygonOffset})};c.initializePipeline=function(){return this._setPipelineState(this.configuration.transparencyPassType)};return l._createClass(e)}(f.ShaderTechnique);f.shader=new z.ReloadableShaderModule(y.ComponentShader,()=>new Promise((c,e)=>v(["./shader/ComponentShader.glsl"],c,e)));const r=new Map([[d.VertexAttribute.POSITION,
0],[d.VertexAttribute.NORMAL,1],[d.VertexAttribute.NORMALCOMPRESSED,1],[d.VertexAttribute.COLOR,2],[d.VertexAttribute.UV0,3],[d.VertexAttribute.UVREGION,4],[d.VertexAttribute.COMPONENTINDEX,5]]);k.ComponentTechnique=f;k.attributeLocations=r;Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})});