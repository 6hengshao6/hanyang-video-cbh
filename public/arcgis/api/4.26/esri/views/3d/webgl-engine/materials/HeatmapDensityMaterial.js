// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/vec2 ../../../../chunks/vec2f64 ../../support/buffer/InterleavedLayout ../core/shaderLibrary/ShaderOutput ../lib/GLMaterial ../lib/Material ../lib/RenderSlot ../lib/VertexAttribute ./internal/bufferWriterUtils ../shaders/HeatmapDensityTechnique".split(" "),function(p,h,u,y,z,A,B,q,C,g,v,r){let w=function(c){function b(){var a=d.apply(this,arguments);a.isAttributeDriven=!1;a.usesHalfFloats=!1;return a}h._inherits(b,c);
var d=h._createSuper(b);return h._createClass(b)}(r.HeatmapDensityPassParameters);q=function(c){function b(a){a=d.call(this,a,new w);a._configuration=new r.HeatmapDensityTechniqueConfiguration;return a}h._inherits(b,c);var d=h._createSuper(b);c=b.prototype;c.requiresSlot=function(a,e){return a===C.RenderSlot.DRAPED_MATERIAL&&e===A.ShaderOutput.Color};c.getConfiguration=function(){this._configuration.isAttributeDriven=this.parameters.isAttributeDriven;this._configuration.usesHalfFloat=this.parameters.usesHalfFloats;
return this._configuration};c.createGLMaterial=function(a){return new D(a)};c.intersect=function(){};c.intersectDraped=function(a,e,f,l,k,m){e=a.vertexAttributes.get(g.VertexAttribute.POSITION);({parameters:f}=this);({searchRadius:f}=f);({screenToWorldRatio:a}=a);a=f*a+2*a;a*=a;f=e.data.length/e.size;for(let t=0;t<f;t++){var n=t*e.size;n=u.set(E,e.data[n],e.data[n+1]);u.squaredDistance(n,l)<a&&k(m.dist,m.normal,-1,!1)}};c.createBufferWriter=function(){return new F(this.parameters.isAttributeDriven?
G:x)};return h._createClass(b)}(q.Material);let D=function(c){function b(){return d.apply(this,arguments)}h._inherits(b,c);var d=h._createSuper(b);b.prototype.beginSlot=function(a){return this.ensureTechnique(r.HeatmapDensityTechnique,a)};return h._createClass(b)}(B),F=function(){function c(d){this.vertexBufferLayout=d}var b=c.prototype;b.allocate=function(d){return this.vertexBufferLayout.createBuffer(d)};b.elementCount=function(d){return 6*d.indices.get(g.VertexAttribute.POSITION).length};b.write=
function(d,a,e,f,l){v.writePosition(e.indices.get(g.VertexAttribute.POSITION),e.vertexAttributes.get(g.VertexAttribute.POSITION).data,d,f.position,l,6);d=e.indices.get(g.VertexAttribute.POSITION).length;a=f.uv0;let k=l;for(let m=0;m<d;++m)a.setValues(k++,-1,-1),a.setValues(k++,1,-1),a.setValues(k++,1,1),a.setValues(k++,1,1),a.setValues(k++,-1,1),a.setValues(k++,-1,-1);(f=g.VertexAttribute.FEATUREATTRIBUTE in f?f.featureAttribute:null)&&v.writeBufferFloat(e.indices.get(g.VertexAttribute.FEATUREATTRIBUTE),
e.vertexAttributes.get(g.VertexAttribute.FEATUREATTRIBUTE).data,f,l,6)};return h._createClass(c)}();const x=z.newLayout().vec3f(g.VertexAttribute.POSITION).vec2f(g.VertexAttribute.UV0),G=x.clone().f32(g.VertexAttribute.FEATUREATTRIBUTE),E=y.create();p.HeatmapDensityMaterial=q;p.HeatmapDensityMaterialParameters=w;Object.defineProperty(p,Symbol.toStringTag,{value:"Module"})});