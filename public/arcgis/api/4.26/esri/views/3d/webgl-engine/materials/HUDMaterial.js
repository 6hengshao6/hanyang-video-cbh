// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../core/has ../../../../core/mathUtils ../../../../core/maybe ../../../../chunks/mat3 ../../../../chunks/mat3f64 ../../../../chunks/mat4 ../../../../chunks/mat4f64 ../../../../chunks/vec2 ../../../../chunks/vec2f64 ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../chunks/vec4f64 ../../../../core/libs/gl-matrix-2/types/mat4 ../../../../geometry/support/aaBoundingRect ../../../../geometry/support/buffer/BufferView ../../support/debugFlags ../../support/buffer/InterleavedLayout ../core/shaderLibrary/ShaderOutput ../core/shaderLibrary/hud/HUD.glsl ../lib/GLTextureMaterial ../lib/Material ../lib/RenderSlot ../lib/screenSizePerspectiveUtils ../lib/Util ../lib/VertexAttribute ./ScaleInfo ./internal/bufferWriterUtils ./internal/MaterialUtil ../../../../chunks/HUDMaterial.glsl ../shaders/HUDMaterialTechnique ../shaders/HUDMaterialTechniqueConfiguration".split(" "),
function(N,D,ja,ka,E,U,V,la,W,ma,X,l,I,O,na,oa,pa,qa,ra,F,Y,Z,aa,K,M,sa,k,ta,G,ua,ba,va,wa){function xa(h,q,f,a=ya){ma.copy(a,h.anchorPosition);a[0]*=-q[0];a[1]*=-q[1];a[0]+=h.screenOffset[0]*f;a[1]+=h.screenOffset[1]*f;return a}function ca(h,q,f,a,b,c,d,e){q=q-b-(0<e[0]?a[0]*e[0]:0);let n=q+a[0]+2*b;f=f-b-(0<e[1]?a[1]*e[1]:0);b=f+a[1]+2*b;e=d.distanceFieldBoundingBox;d.textureIsSignedDistanceField&&E.isSome(e)&&(q+=a[0]*e[0],f+=a[1]*e[1],n-=a[0]*(1-e[2]),b-=a[1]*(1-e[3]),q-=c,n+=c,f-=c,b+=c);return h[0]>
q&&h[0]<n&&h[1]>f&&h[1]<b}let Ea=function(h){function q(a){a=f.call(this,a,new da);a._configuration=new wa.HUDMaterialTechniqueConfiguration;return a}D._inherits(q,h);var f=D._createSuper(q);h=q.prototype;h.getConfiguration=function(a,b){this._configuration.output=a;this._configuration.hasSlicePlane=this.parameters.hasSlicePlane;this._configuration.hasVerticalOffset=!!this.parameters.verticalOffset;this._configuration.hasScreenSizePerspective=!!this.parameters.screenSizePerspective;this._configuration.screenCenterOffsetUnitsEnabled=
"screen"===this.parameters.centerOffsetUnits?Y.HUDSpace.Screen:Y.HUDSpace.World;this._configuration.hasPolygonOffset=this.parameters.polygonOffset;this._configuration.isDraped=this.parameters.isDraped;this._configuration.occlusionTestEnabled=this.parameters.occlusionTest;this._configuration.pixelSnappingEnabled=this.parameters.pixelSnappingEnabled;this._configuration.signedDistanceFieldEnabled=this.parameters.textureIsSignedDistanceField;this._configuration.vvSize=!!this.parameters.vvSize;this._configuration.vvColor=
!!this.parameters.vvColor;this._configuration.occlusionPass=b.slot===K.RenderSlot.OCCLUSION_PIXELS&&this.parameters.occlusionTest&&(a===F.ShaderOutput.Color||a===F.ShaderOutput.Alpha);a===F.ShaderOutput.Color&&(this._configuration.debugDrawLabelBorder=!!qa.LABELS_SHOW_BORDER);a===F.ShaderOutput.Highlight&&(this._configuration.binaryHighlightOcclusionEnabled=this.parameters.binaryHighlightOcclusion);this._configuration.depthEnabled=this.parameters.depthEnabled;this._configuration.transparencyPassType=
b.transparencyPassType;this._configuration.hasMultipassGeometry=b.multipassGeometry.enabled;this._configuration.hasMultipassTerrain=b.multipassTerrain.enabled;this._configuration.cullAboveGround=b.multipassTerrain.cullAboveGround;return this._configuration};h.intersect=function(a,b,c,d,e,n){if(c.options.selectionMode&&c.options.hud&&a.visible){d=this.parameters;var m=e=1;U.fromMat4(P,b);if(E.isSome(a.shaderTransformer)){m=a.shaderTransformer(ea);e=m[0];m=m[5];var g=P,r=g[0],t=g[1],x=g[2],u=g[3],A=
g[4],B=g[5],z=g[6],p=g[7],C=g[8],J=1/Math.sqrt(r*r+t*t+x*x);const Q=1/Math.sqrt(u*u+A*A+B*B),R=1/Math.sqrt(z*z+p*p+C*C);g[0]=r*J;g[1]=t*J;g[2]=x*J;g[3]=u*Q;g[4]=A*Q;g[5]=B*Q;g[6]=z*R;g[7]=p*R;g[8]=C*R}g=a.vertexAttributes.get(k.VertexAttribute.POSITION);r=a.vertexAttributes.get(k.VertexAttribute.SIZE);t=a.vertexAttributes.get(k.VertexAttribute.NORMAL);a=a.vertexAttributes.get(k.VertexAttribute.AUXPOS1);sa.assert(3<=g.size);x=c.point;u=c.camera;A=ba.calculateAnchorPosForRendering(d);e*=u.pixelRatio;
m*=u.pixelRatio;B="screen"===this.parameters.centerOffsetUnits;for(z=0;z<g.data.length/g.size;z++)p=z*g.size,l.set(w,g.data[p],g.data[p+1],g.data[p+2]),l.transformMat4(w,w,b),p=z*r.size,H[0]=r.data[p]*e,H[1]=r.data[p+1]*m,l.transformMat4(w,w,u.viewMatrix),p=z*a.size,l.set(y,a.data[p],a.data[p+1],a.data[p+2]),B||(w[0]+=y[0],w[1]+=y[1],0!==y[2]&&(p=y[2],l.normalize(y,w),l.subtract(w,w,l.scale(y,y,p)))),p=z*t.size,l.set(L,t.data[p],t.data[p+1],t.data[p+2]),this._normalAndViewAngle(L,P,u,S),this._applyVerticalOffsetTransformationView(w,
S,u,T),u.applyProjection(w,v),-1<v[0]&&(v[0]=Math.floor(v[0]),v[1]=Math.floor(v[1]),B&&(y[0]||y[1])&&(v[0]+=y[0],0!==y[1]&&(v[1]+=M.applyScaleFactor(y[1],T.factorAlignment)),u.unapplyProjection(v,w)),v[0]+=this.parameters.screenOffset[0],v[1]+=this.parameters.screenOffset[1],M.applyPrecomputedScaleFactor(H,T.factor,H),p=1*u.pixelRatio,C=0,d.textureIsSignedDistanceField&&(C=d.outlineSize*u.pixelRatio/2),x&&ca(x,v[0],v[1],H,p,C,d,A)&&(C=c.ray,l.transformMat4(fa,w,la.invert(za,u.viewMatrix)),v[0]=x[0],
v[1]=x[1],u.unprojectFromRenderScreen(v,w)&&(p=I.create(),l.copy(p,C.direction),J=1/l.length(p),l.scale(p,p,J),C=l.distance(C.origin,w)*J,n(C,p,-1,!0,1,fa))))}};h.intersectDraped=function(a,b,c,d,e,n){b=a.vertexAttributes.get(k.VertexAttribute.POSITION);c=a.vertexAttributes.get(k.VertexAttribute.SIZE);const m=this.parameters,g=ba.calculateAnchorPosForRendering(m);let r=1;var t=1;E.isSome(a.shaderTransformer)&&(t=a.shaderTransformer(ea),r=t[0],t=t[5]);r*=a.screenToWorldRatio;t*=a.screenToWorldRatio;
const x=2*a.screenToWorldRatio;for(let B=0;B<b.data.length/b.size;B++){var u=B*b.size;const z=b.data[u];u=b.data[u+1];var A=B*c.size;H[0]=c.data[A]*r;H[1]=c.data[A+1]*t;A=0;m.textureIsSignedDistanceField&&(A=m.outlineSize*a.screenToWorldRatio/2);ca(d,z,u,H,x,A,m,g)&&e(n.dist,n.normal,-1,!1)}};h.createBufferWriter=function(){return new Aa(this)};h._normalAndViewAngle=function(a,b,c,d){na.isMat4(b)&&(b=U.fromMat4(Ba,b));l.transformMat3(d.normal,a,b);l.transformMat4(d.normal,d.normal,c.viewInverseTransposeMatrix);
d.cosAngle=l.dot(ha,Ca);return d};h._updateScaleInfo=function(a,b,c){const d=this.parameters;E.isSome(d.screenSizePerspective)?M.precomputeScaleFactor(c,b,d.screenSizePerspective,a.factor):(a.factor.scale=1,a.factor.factor=0,a.factor.minPixelSize=0,a.factor.paddingPixels=0);E.isSome(d.screenSizePerspectiveAlignment)?M.precomputeScaleFactor(c,b,d.screenSizePerspectiveAlignment,a.factorAlignment):(a.factorAlignment.factor=a.factor.factor,a.factorAlignment.scale=a.factor.scale,a.factorAlignment.minPixelSize=
a.factor.minPixelSize,a.factorAlignment.paddingPixels=a.factor.paddingPixels)};h.applyShaderOffsetsView=function(a,b,c,d,e,n,m){b=this._normalAndViewAngle(b,c,e,S);this._applyVerticalGroundOffsetView(a,b,e,m);this._applyVerticalOffsetTransformationView(m,b,e,n);this._applyPolygonOffsetView(m,b,d[3],e,m);this._applyCenterOffsetView(m,d,m);return m};h.applyShaderOffsetsNDC=function(a,b,c,d,e){this._applyCenterOffsetNDC(a,b,c,d);E.isSome(e)&&l.copy(e,d);this._applyPolygonOffsetNDC(d,b,c,d);return d};
h._applyPolygonOffsetView=function(a,b,c,d,e){var n=d.aboveGround?1:-1;c=Math.sign(c);0===c&&(c=n);n*=c;if(0>=this.parameters.shaderPolygonOffset)return l.copy(e,a);b=ka.clamp(Math.abs(b.cosAngle),.01,1);d=1-Math.sqrt(1-b*b)/b/d.viewport[2];0<n?l.scale(e,a,d):l.scale(e,a,1/d);return e};h._applyVerticalGroundOffsetView=function(a,b,c,d){const e=l.length(a),n=c.aboveGround?1:-1;c=.5*c.computeRenderPixelSizeAtDist(e);b=l.scale(w,b.normal,n*c);l.add(d,a,b);return d};h._applyVerticalOffsetTransformationView=
function(a,b,c,d){const e=this.parameters;if(!e.verticalOffset||!e.verticalOffset.screenLength){if(e.screenSizePerspective||e.screenSizePerspectiveAlignment){var n=l.length(a);this._updateScaleInfo(d,n,b.cosAngle)}else d.factor.scale=1,d.factorAlignment.scale=1;return a}n=l.length(a);const m=E.unwrapOr(e.screenSizePerspectiveAlignment,e.screenSizePerspective);c=ua.verticalOffsetAtDistance(c,n,e.verticalOffset,b.cosAngle,m);this._updateScaleInfo(d,n,b.cosAngle);l.scale(b.normal,b.normal,c);return l.add(a,
a,b.normal)};h._applyCenterOffsetView=function(a,b,c){const d="screen"!==this.parameters.centerOffsetUnits;c!==a&&l.copy(c,a);d&&(c[0]+=b[0],c[1]+=b[1],b[2]&&(l.normalize(L,c),l.add(c,c,l.scale(L,L,b[2]))));return c};h._applyCenterOffsetNDC=function(a,b,c,d){const e="screen"!==this.parameters.centerOffsetUnits;d!==a&&l.copy(d,a);e||(d[0]+=b[0]/c.fullWidth*2,d[1]+=b[1]/c.fullHeight*2);return d};h._applyPolygonOffsetNDC=function(a,b,c,d){const e=this.parameters.shaderPolygonOffset;a!==d&&l.copy(d,a);
e&&(a=c.aboveGround?1:-1,d[2]-=(a*Math.sign(b[3])||a)*e);return d};h.requiresSlot=function(a,b){if(b===F.ShaderOutput.Color||b===F.ShaderOutput.Alpha||b===F.ShaderOutput.Highlight||b===F.ShaderOutput.ObjectAndLayerIdColor){if(a===K.RenderSlot.DRAPED_MATERIAL)return!0;const {drawInSecondSlot:c,occlusionTest:d}=this.parameters;return a===(c?K.RenderSlot.LABEL_MATERIAL:K.RenderSlot.HUD_MATERIAL)||d&&a===K.RenderSlot.OCCLUSION_PIXELS}return!1};h.createGLMaterial=function(a){return new Da(a)};h.calculateRelativeScreenBounds=
function(a,b,c=oa.create()){xa(this.parameters,a,b,c);c[2]=c[0]+a[0];c[3]=c[1]+a[1];return c};return D._createClass(q)}(aa.Material),Da=function(h){function q(a){return f.call(this,{...a,...a.material.parameters})}D._inherits(q,h);var f=D._createSuper(q);h=q.prototype;h.selectProgram=function(a){return this.ensureTechnique(va.HUDMaterialTechnique,a)};h.beginSlot=function(a){this.updateTexture(this._material.parameters.textureId);this._material.setParameters(this.textureBindParameters);return this.selectProgram(a)};
return D._createClass(q)}(Z.GLTextureMaterial);const T=new ta.ScaleInfo,ya=X.create(),w=I.create(),L=I.create(),v=O.create(),ha=I.create(),fa=I.create(),P=V.create(),Ba=V.create(),za=W.create(),y=I.create(),S={normal:ha,cosAngle:0},ea=W.create(),H=[0,0],Ca=I.fromValues(0,0,1);let da=function(h){function q(){var a=f.apply(this,arguments);a.renderOccluded=aa.RenderOccludedFlag.Occlude;a.color=O.fromValues(1,1,1,1);a.texCoordScale=[1,1];a.polygonOffset=!1;a.anchorPosition=X.fromValues(.5,.5);a.screenOffset=
[0,0];a.shaderPolygonOffset=1E-5;a.textureIsSignedDistanceField=!1;a.outlineColor=O.fromValues(1,1,1,1);a.outlineSize=0;a.vvSizeEnabled=!1;a.vvSize=null;a.vvColor=null;a.vvOpacity=null;a.vvSymbolAnchor=null;a.vvSymbolRotationMatrix=null;a.hasSlicePlane=!1;a.pixelSnappingEnabled=!0;a.occlusionTest=!0;a.binaryHighlightOcclusion=!0;a.centerOffsetUnits="world";a.drawInSecondSlot=!1;a.depthEnabled=!0;a.isDraped=!1;return a}D._inherits(q,h);var f=D._createSuper(q);return D._createClass(q)}(Z.GLTextureMaterialBindParameters);
const ia=ra.newLayout().vec3f(k.VertexAttribute.POSITION).vec3f(k.VertexAttribute.NORMAL).vec2f(k.VertexAttribute.UV0).vec4u8(k.VertexAttribute.COLOR).vec2f(k.VertexAttribute.SIZE).vec4f(k.VertexAttribute.AUXPOS1).vec4f(k.VertexAttribute.AUXPOS2),Fa=ia.clone().vec4u8(k.VertexAttribute.OBJECTANDLAYERIDCOLOR);let Aa=function(){function h(f){this._material=f;this.vertexBufferLayout=ja("enable-feature:objectAndLayerId-rendering")?Fa:ia}var q=h.prototype;q.allocate=function(f){return this.vertexBufferLayout.createBuffer(f)};
q.elementCount=function(f){return 6*f.indices.get(k.VertexAttribute.POSITION).length};q.write=function(f,a,b,c,d){G.writePosition(b.indices.get(k.VertexAttribute.POSITION),b.vertexAttributes.get(k.VertexAttribute.POSITION).data,f,c.position,d,6);G.writeNormal(b.indices.get(k.VertexAttribute.NORMAL),b.vertexAttributes.get(k.VertexAttribute.NORMAL).data,a,c.normal,d,6);f=b.vertexAttributes.get(k.VertexAttribute.UV0).data;var e;if(null==f||4>f.length){f=this._material.parameters;var n=e=0;var m=f.texCoordScale[0];
var g=f.texCoordScale[1]}else e=f[0],n=f[1],m=f[2],g=f[3];m=Math.min(1.99999,m+1);g=Math.min(1.99999,g+1);f=b.indices.get(k.VertexAttribute.POSITION).length;a=d;var r=c.uv0;for(var t=0;t<f;++t)r.set(a,0,e),r.set(a,1,n),a+=1,r.set(a,0,m),r.set(a,1,n),a+=1,r.set(a,0,m),r.set(a,1,g),a+=1,r.set(a,0,m),r.set(a,1,g),a+=1,r.set(a,0,e),r.set(a,1,g),a+=1,r.set(a,0,e),r.set(a,1,n),a+=1;G.writeColor(b.indices.get(k.VertexAttribute.COLOR),b.vertexAttributes.get(k.VertexAttribute.COLOR).data,4,c.color,d,6);e=
b.indices.get(k.VertexAttribute.SIZE);n=b.vertexAttributes.get(k.VertexAttribute.SIZE).data;f=e.length;m=c.size;a=d;for(g=0;g<f;++g){r=n[2*e[g]];t=n[2*e[g]+1];for(let x=0;6>x;++x)m.set(a,0,r),m.set(a,1,t),a+=1}b.indices.get(k.VertexAttribute.AUXPOS1)&&b.vertexAttributes.get(k.VertexAttribute.AUXPOS1)?G.writeBufferVec4(b.indices.get(k.VertexAttribute.AUXPOS1),b.vertexAttributes.get(k.VertexAttribute.AUXPOS1).data,c.auxpos1,d,6):G.writeBufferVec4Zeros(c.auxpos1,d,6*f);b.indices.get(k.VertexAttribute.AUXPOS2)&&
b.vertexAttributes.get(k.VertexAttribute.AUXPOS2)?G.writeBufferVec4(b.indices.get(k.VertexAttribute.AUXPOS2),b.vertexAttributes.get(k.VertexAttribute.AUXPOS2).data,c.auxpos2,d,6):G.writeBufferVec4Zeros(c.auxpos2,d,6*f);E.isSome(b.objectAndLayerIdColor)&&b.indices.get(k.VertexAttribute.POSITION)&&(f=b.indices.get(k.VertexAttribute.POSITION).length,c=c.getField(k.VertexAttribute.OBJECTANDLAYERIDCOLOR,pa.BufferViewVec4u8),G.writeObjectAndLayerIdColor(b.objectAndLayerIdColor,c,f,d,6))};return D._createClass(h)}();
N.HUDMaterial=Ea;N.Parameters=da;Object.defineProperty(N,Symbol.toStringTag,{value:"Module"})});