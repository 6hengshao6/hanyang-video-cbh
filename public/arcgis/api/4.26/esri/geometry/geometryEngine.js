// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define(["exports","../chunks/_rollupPluginBabelHelpers","../chunks/geometryEngineBase","./geometryAdapters/hydrated"],function(c,l,d,f){function g(a){return Array.isArray(a)?a[0].spatialReference:a&&a.spatialReference}function m(a){return"xmin"in a?"center"in a?a.center:null:"x"in a?a:"extent"in a?a.extent?.center??null:null}let k=function(a){function b(){return e.call(this,"Illegal Argument Exception")}l._inherits(b,a);var e=l._createSuper(b);return l._createClass(b)}(l._wrapNativeSuper(Error));
c.buffer=function(a,b,e,h=!1){return d.GeometryEngineApi.buffer(f.hydratedAdapter,g(a),a,b,e,h)};c.changeDefaultSpatialReferenceTolerance=function(a,b){d.GeometryEngineApi.changeDefaultSpatialReferenceTolerance(a,b)};c.clearDefaultSpatialReferenceTolerance=function(a){d.GeometryEngineApi.clearDefaultSpatialReferenceTolerance(a)};c.clip=function(a,b){return d.GeometryEngineApi.clip(f.hydratedAdapter,g(a),a,b)};c.contains=function(a,b){return d.GeometryEngineApi.contains(f.hydratedAdapter,g(a),a,b)};
c.convexHull=function(a,b=!1){return d.GeometryEngineApi.convexHull(f.hydratedAdapter,g(a),a,b)};c.crosses=function(a,b){return d.GeometryEngineApi.crosses(f.hydratedAdapter,g(a),a,b)};c.cut=function(a,b){return d.GeometryEngineApi.cut(f.hydratedAdapter,g(a),a,b)};c.densify=function(a,b,e){return d.GeometryEngineApi.densify(f.hydratedAdapter,g(a),a,b,e)};c.difference=function(a,b){return d.GeometryEngineApi.difference(f.hydratedAdapter,g(a),a,b)};c.disjoint=function(a,b){return d.GeometryEngineApi.disjoint(f.hydratedAdapter,
g(a),a,b)};c.distance=function(a,b,e){return d.GeometryEngineApi.distance(f.hydratedAdapter,g(a),a,b,e)};c.equals=function(a,b){return d.GeometryEngineApi.equals(f.hydratedAdapter,g(a),a,b)};c.extendedSpatialReferenceInfo=function(a){return d.GeometryEngineApi.extendedSpatialReferenceInfo(a)};c.flipHorizontal=function(a,b){if(null==a)throw new k;const e=a.spatialReference;b=b??m(a);if(null==b)throw new k;a=a.constructor.fromJSON(d.GeometryEngineApi.flipHorizontal(a,b));a.spatialReference=e;return a};
c.flipVertical=function(a,b){if(null==a)throw new k;const e=a.spatialReference;b=b??m(a);if(null==b)throw new k;a=a.constructor.fromJSON(d.GeometryEngineApi.flipVertical(a,b));a.spatialReference=e;return a};c.generalize=function(a,b,e,h){return d.GeometryEngineApi.generalize(f.hydratedAdapter,g(a),a,b,e,h)};c.geodesicArea=function(a,b,e){return d.GeometryEngineApi.geodesicArea(f.hydratedAdapter,g(a),a,b,e)};c.geodesicBuffer=function(a,b,e,h,n,p){return d.GeometryEngineApi.geodesicBuffer(f.hydratedAdapter,
g(a),a,b,e,h,n,p)};c.geodesicDensify=function(a,b,e,h=0){return d.GeometryEngineApi.geodesicDensify(f.hydratedAdapter,g(a),a,b,e,h)};c.geodesicLength=function(a,b,e){return d.GeometryEngineApi.geodesicLength(f.hydratedAdapter,g(a),a,b,e)};c.intersect=function(a,b){return d.GeometryEngineApi.intersect(f.hydratedAdapter,g(a),a,b)};c.intersectLinesToPoints=function(a,b){return d.GeometryEngineApi.intersectLinesToPoints(f.hydratedAdapter,g(a),a,b)};c.intersects=function(a,b){return d.GeometryEngineApi.intersects(f.hydratedAdapter,
g(a),a,b)};c.isSimple=function(a){return d.GeometryEngineApi.isSimple(f.hydratedAdapter,g(a),a)};c.nearestCoordinate=function(a,b,e=!0){return d.GeometryEngineApi.nearestCoordinate(f.hydratedAdapter,g(a),a,b,e)};c.nearestVertex=function(a,b){return d.GeometryEngineApi.nearestVertex(f.hydratedAdapter,g(a),a,b)};c.nearestVertices=function(a,b,e,h){return d.GeometryEngineApi.nearestVertices(f.hydratedAdapter,g(a),a,b,e,h)};c.offset=function(a,b,e,h,n,p){return d.GeometryEngineApi.offset(f.hydratedAdapter,
g(a),a,b,e,h,n,p)};c.overlaps=function(a,b){return d.GeometryEngineApi.overlaps(f.hydratedAdapter,g(a),a,b)};c.planarArea=function(a,b){return d.GeometryEngineApi.planarArea(f.hydratedAdapter,g(a),a,b)};c.planarLength=function(a,b){return d.GeometryEngineApi.planarLength(f.hydratedAdapter,g(a),a,b)};c.relate=function(a,b,e){return d.GeometryEngineApi.relate(f.hydratedAdapter,g(a),a,b,e)};c.rotate=function(a,b,e){if(null==a)throw new k;const h=a.spatialReference;e=e??m(a);if(null==e)throw new k;a=
a.constructor.fromJSON(d.GeometryEngineApi.rotate(a,b,e));a.spatialReference=h;return a};c.simplify=function(a){return d.GeometryEngineApi.simplify(f.hydratedAdapter,g(a),a)};c.symmetricDifference=function(a,b){return d.GeometryEngineApi.symmetricDifference(f.hydratedAdapter,g(a),a,b)};c.touches=function(a,b){return d.GeometryEngineApi.touches(f.hydratedAdapter,g(a),a,b)};c.union=function(a,b=null){return d.GeometryEngineApi.union(f.hydratedAdapter,g(a),a,b)};c.within=function(a,b){return d.GeometryEngineApi.within(f.hydratedAdapter,
g(a),a,b)};Object.defineProperty(c,Symbol.toStringTag,{value:"Module"})});