// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("require ../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../request ../core/Error ../core/Loadable ../core/Logger ../core/maybe ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/urlUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/arrayUtils ../core/has ../core/accessorSupport/decorators/subclass ../geometry/Extent ../geometry/SpatialReference ../layers/mixins/EditBusLayer ../layers/support/arcgisLayerUrl ./support/TopologyValidationJobInfo ./support/utils ../rest/networks/support/QueryNamedTraceConfigurationsParameters".split(" "),
function(m,n,c,q,p,b,u,r,v,w,x,d,H,I,J,y,z,A,B,t,C,D,E){b=function(g){function k(a){a=F.call(this,a);a.id=null;a.title=null;a.layerUrl=null;a.dataElement=null;a.fullExtent=null;a.spatialReference=null;a.type=null;a.sourceJSON=null;return a}n._inherits(k,g);var F=n._createSuper(k);k.fromPortalItem=function(a){return D.networkFromPortalItem(a)};g=k.prototype;g.initialize=function(){this.when().catch(a=>{w.isAbortError(a)||u.getLogger(this.declaredClass).error("#load()",`Failed to load layer (title: '${this.title??
"no title"}', id: '${this.id??"no id"}')`,{error:a})})};g.load=async function(a){this.addResolvingPromise(this._fetchDataElement(this.featureServiceUrl,this.layerId.toString(),a));this.addResolvingPromise(this._fetchLayerMetaData(this.layerUrl,a));return this};g.getLayerIdBySourceId=function(a){if(this.dataElement){const f=this.dataElement.domainNetworks;for(const h of f){for(const e of h.edgeSources??[])if(e.sourceId===a)return e.layerId;for(const e of h.junctionSources??[])if(e.sourceId===a)return e.layerId}}return null};
g.queryNamedTraceConfigurations=async function(a,f){const {queryNamedTraceConfigurations:h}=await new Promise((l,G)=>m(["../rest/networks/queryNamedTraceConfigurations"],l,G)),e=this.networkServiceUrl;a=new E({...a});return(await h(e,a,{...f}))?.namedTraceConfigurations??null};g.validateTopology=async function(a,f){if(!a.validateArea)throw new p("network:undefined-validateArea","the network must have validateArea defined in the validate network topology parameters.");const {validateNetworkTopology:h}=
await new Promise((e,l)=>m(["../rest/networks/validateNetworkTopology"],e,l));a=await h(this.networkServiceUrl,a,{...f});a?.serviceEdits&&B.editEventBus.emit("edits",{serviceUrl:this.featureServiceUrl??"",layerId:null,event:{edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],editedFeatures:a.serviceEdits,exceededTransferLimit:!1}});return a};g.submitTopologyValidationJob=async function(a,f){if(!a.validateArea)throw new p("network:undefined-validateArea",
"the network must have validateArea defined in the validate network topology parameters.");if(!a.gdbVersion)throw new p("network:undefined-gdb-version","version must be defined");const {submitValidateNetworkTopologyJob:h}=await new Promise((e,l)=>m(["../rest/networks/validateNetworkTopology"],e,l));a=await h(this.networkServiceUrl,a,{...f});return new C({statusUrl:a,featureServiceUrl:this.featureServiceUrl})};g._fetchLayerMetaData=async function(a,f){a=await q(a,{responseType:"json",query:{f:"json"},
...f});this.sourceJSON=a.data;this.read(a.data,{origin:"service"})};g._fetchDataElement=async function(a,f,h){this.dataElement||(a=await q(`${a}/queryDataElements`,{responseType:"json",query:{layers:JSON.stringify([f]),f:"json"},...h}).then(e=>e.data.layerDataElements?.[0]))&&this.read(a,{origin:"service"})};n._createClass(k,[{key:"datasetName",get:function(){return this.dataElement?.name??null}},{key:"owner",get:function(){return this.dataElement?.userIdentity??null}},{key:"schemaGeneration",get:function(){return this.dataElement?.schemaGeneration??
null}},{key:"parsedUrl",get:function(){return x.urlToObject(this.layerUrl)}},{key:"featureServiceUrl",get:function(){const a=this.parsedUrl&&t.parse(this.parsedUrl.path);return r.isSome(a)?a.url.path:null}},{key:"networkServiceUrl",get:function(){return this.featureServiceUrl?this.featureServiceUrl.replace(/\/FeatureServer/i,"/UtilityNetworkServer"):null}},{key:"layerId",get:function(){const a=this.parsedUrl&&t.parse(this.parsedUrl.path);return r.isSome(a)?a.sublayer:null}},{key:"networkSystemLayers",
get:function(){return null}}]);return k}(v.MultiOriginJSONMixin(b));c.__decorate([d.property({type:String,nonNullable:!0,json:{origins:{"web-map":{read:!0,write:{isRequired:!0}},service:{read:!0}},read:!1}})],b.prototype,"id",void 0);c.__decorate([d.property({type:String,nonNullable:!0,json:{origins:{"web-map":{read:!0,write:{isRequired:!0}},service:{read:{source:"name"}}},read:!1}})],b.prototype,"title",void 0);c.__decorate([d.property({type:String,nonNullable:!0,json:{origins:{"web-map":{read:{source:"url"},
write:{target:"url",isRequired:!0}}},read:!1}})],b.prototype,"layerUrl",void 0);c.__decorate([d.property({type:Object,json:{origins:{service:{read:!0}},read:!1}})],b.prototype,"dataElement",void 0);c.__decorate([d.property({type:z,json:{origins:{service:{read:{source:"extent"}}},read:!1}})],b.prototype,"fullExtent",void 0);c.__decorate([d.property({type:A,json:{origins:{service:{read:{source:"extent.spatialReference"}}},read:!1}})],b.prototype,"spatialReference",void 0);c.__decorate([d.property({type:["utility",
"trace"],readOnly:!0,json:{read:!1,write:!1}})],b.prototype,"type",void 0);c.__decorate([d.property({readOnly:!0})],b.prototype,"datasetName",null);c.__decorate([d.property({readOnly:!0})],b.prototype,"owner",null);c.__decorate([d.property({readOnly:!0})],b.prototype,"schemaGeneration",null);c.__decorate([d.property({readOnly:!0})],b.prototype,"parsedUrl",null);c.__decorate([d.property({readOnly:!0})],b.prototype,"featureServiceUrl",null);c.__decorate([d.property({readOnly:!0})],b.prototype,"networkServiceUrl",
null);c.__decorate([d.property({readOnly:!0})],b.prototype,"layerId",null);c.__decorate([d.property()],b.prototype,"sourceJSON",void 0);c.__decorate([d.property({readOnly:!0})],b.prototype,"networkSystemLayers",null);return b=c.__decorate([y.subclass("esri.networks.Network")],b)});