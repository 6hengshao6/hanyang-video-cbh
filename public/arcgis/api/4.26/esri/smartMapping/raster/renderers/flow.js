// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../../core/Error ../../../core/maybe ../../../renderers/support/AuthoringInfo ../../../renderers/support/AuthoringInfoVisualVariable ../../../renderers/support/rasterRendererHelper ../../../renderers/visualVariables/ColorVariable ../../../renderers/visualVariables/OpacityVariable ../../../renderers/visualVariables/SizeVariable ../support/utils ../../renderers/support/utils ../../symbology/flow".split(" "),function(t,l,m,v,q,u,w,x,y,z,n,r){async function A(a){a={...a};a.theme||(a.theme=
"flow-line");return z.processRasterRendererParameters(a)}async function B(a){let d=a.flowScheme,f=null;var b=null;b=await n.getBasemapInfo(null,a.view);f=m.isSome(b.basemapId)?b.basemapId:null;b=m.isSome(b.basemapTheme)?b.basemapTheme:null;if(d)return{scheme:r.cloneScheme(d),basemapId:f,basemapTheme:b};if(a=r.getSchemes({basemap:f,basemapTheme:b,theme:a.theme,hasSizeVariable:a.hasSizeVariable}))d=a.primaryScheme,f=a.basemapId,b=a.basemapTheme;return{scheme:d,basemapId:f,basemapTheme:b}}async function C(a,
d){d.flowRepresentation&&(a.flowRepresentation=d.flowRepresentation);const f=await B({theme:d.theme,flowScheme:d.flowScheme,view:d.view,hasSizeVariable:d.includeSizeVariable}),b=f.scheme;if(!b)throw new l("flow-renderer:insufficient-info","Unable to find flow scheme");a.flowSpeed=b.flowSpeed;a.density=b.density;a.trailLength=b.trailLength;a.trailWidth=b.trailWidth;a.trailCap=b.trailCap;a.color=b.color;const h=[];var g=[],c=d.layer.rasterInfo;c=!m.isSome(c.statistics)||"vector-magdir"!==c.dataType&&
"vector-uv"!==c.dataType?{minMagnitude:0,maxMagnitude:10}:u.estimateMagnitudeRange(c.dataType,c.statistics);if(!c||null==c.minMagnitude||null==c.maxMagnitude)throw new l("flow-renderer:insufficient-info","stats not available");c={min:c.minMagnitude,max:c.maxMagnitude};var e={min:c.min,max:null!=c.max?c.max/2:null},k=n.getDataRange(e,null,null,null);e=n.createDataValues(k,e,null);if(d.includeColorVariable){const p=n.createColors(b.colors,5);if(5>p.length)throw new l("flow-renderer:insufficient-info",
"Flow scheme does not have enough colors");k=new w({field:"Magnitude",stops:e.map((D,E)=>({value:D,color:p[E]}))});h.push(k);k=new q({type:"color",minSliderValue:c.min,maxSliderValue:c.max,theme:"high-to-low"});g.push(k)}d.includeOpacityVariable&&(e=new x({field:"Magnitude",stops:[{value:e[0],opacity:b.minOpacity},{value:e[4],opacity:b.maxOpacity}]}),h.push(e),e=new q({type:"opacity",minSliderValue:c.min,maxSliderValue:c.max}),g.push(e));d.includeSizeVariable&&(e=new y({field:"Magnitude",stops:[{value:c.min,
size:b.minSize},{value:c.max,size:b.maxSize}]}),h.push(e),e=new q({type:"size",minSliderValue:c.min,maxSliderValue:c.max,theme:"high-to-low"}),g.push(e));g=new v({type:"flow",visualVariables:g.length?g:null,flowTheme:b.theme});a.visualVariables=h;a.authoringInfo=g;a.legendOptions=d.legendOptions;return{renderer:a,visualVariables:h.map(p=>p.clone()),flowScheme:r.cloneScheme(b),basemapId:f.basemapId,basemapTheme:f.basemapTheme,layerEffect:b.layerEffect,statistics:c}}t.createRenderer=async function(a){a=
await A(a);const d=u.createFlowRenderer(a.layer.rasterInfo);if(!m.isSome(d))throw new l("flow-renderer:not-supported","Only vector data is supported");return C(d,a)};Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});