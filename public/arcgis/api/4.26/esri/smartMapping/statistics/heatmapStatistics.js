// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../core/Error ../../core/maybe ../../layers/support/fieldUtils ../../renderers/support/heatmapUtils ./support/utils ../support/utils ../support/adapters/support/layerUtils".split(" "),function(g,k,l,m,h,n,c){async function p(a){if(!(a&&a.layer&&a.view))throw new g("heatmap-statistics:missing-parameters","'layer' and 'view' parameters are required");var b=[c.LayerType.CSVLayer,c.LayerType.FeatureLayer,c.LayerType.OGCFeatureLayer,c.LayerType.GeoJSONLayer,c.LayerType.WFSLayer];const {layer:f,
...q}=a;a=c.createLayerAdapter(f,b);if(!a)throw new g("heatmap-statistics:invalid-parameters","'layer' must be one of these types: "+c.getLayerTypeLabels(b).join(", "));b={layerAdapter:a,...q};b.radius=null==b.radius?null==b.blurRadius?18:m.gaussianBlurRadiusPxToKernelDensityRadiusPt(b.blurRadius):b.radius;var e=k.isSome(b.signal)?{signal:b.signal}:null;await a.load(e);var d=b.field;e=d?a.getField(d):null;d=await n.getFieldsList({field:d});if(d=h.verifyBasicFieldValidity(a,d,"heatmap-statistics:invalid-parameters"))throw d;
if(e&&(a=h.verifyFieldType(a,e,"heatmap-statistics:invalid-parameters",r)))throw a;return b}const r=l.numericTypes;return async function(a){const {layerAdapter:b,...f}=await p(a);return b.heatmapStatistics(f)}});