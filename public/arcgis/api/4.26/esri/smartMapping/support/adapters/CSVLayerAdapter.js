// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/Error ../../../core/maybe ../../../core/Logger ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ../../../rest/support/generateRendererUtils ../../statistics/support/utils ../../statistics/support/WorkerClient ../utils ./FeatureLayerAdapter ./support/utils".split(" "),function(m,u,q,r,n,D,E,F,v,t,p,w,x,y,z){n=function(h){function l(a){return A.call(this,
a)}m._inherits(l,h);var A=m._createSuper(l);h=l.prototype;h._createGenerateRendererResult=async function(a,c,b,f,d){a=a?.features;if(!a?.length)throw new q("csv-layer-adapter:insufficient-data","No features are available to calculate statistics");const g=z.ensureFeaturesJSON(a);a=null;if("percent-of-total"===f&&(a=(await this.workerClient.summaryStatistics({field:c},g)).sum,null==a))throw new q("csv-layer-adapter:invalid","invalid normalizationTotal");if("class-breaks-definition"===d?.type)return c=
(await p.getDataValues({field:c,normalizationType:f,normalizationField:b,normalizationTotal:a},g)).filter(e=>Number.isFinite(e)),t.createGenerateRendererClassBreaks({definition:d,values:c,normalizationTotal:a});d=(await p.getDataValues({field:c},g)).filter(e=>null!=e&&"string"===typeof e&&""!==e.trim());return t.createGenerateRendererUniqueValues(d)};h.generateRenderer=function(a,c){const b=a.classificationDefinition;let f=null,d=null,g=null;"class-breaks-definition"===b?.type?(f=b.classificationField,
d=b.normalizationField,g=b.normalizationType):f=b?.attributeField;const e=this.layer;return x.getFieldsList({field:f,normalizationField:d}).then(B=>{const k=e.createQuery();k.returnGeometry=!1;k.outFields=B;k.where=p.mergeWhereClauses(k.where,a.where);return e.queryFeatures(k,{signal:c}).then(C=>this._createGenerateRendererResult(C,f,d,g,b))})};h.load=function(a){const c=this.layer.load(a).then(async b=>{this.geometryType=b.geometryType;this.objectIdField=b.objectIdField;this.supportsSQLExpression=
!0;this._hasLocalSource=!1;this.hasQueryEngine=!0;this.workerClient=w.WorkerClient.getInstance();await this.workerClient.open(r.unwrap(r.unwrap(a).signal))});this.addResolvingPromise(c);return Promise.resolve(this)};return m._createClass(l)}(y);return n=u.__decorate([v.subclass("esri.smartMapping.support.adapters.CSVLayerAdapter")],n)});