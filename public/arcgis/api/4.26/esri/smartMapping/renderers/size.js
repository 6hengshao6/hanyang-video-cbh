// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../renderers/ClassBreaksRenderer ../../renderers/DictionaryRenderer ../../renderers/DotDensityRenderer ../../renderers/HeatmapRenderer ../../renderers/PieChartRenderer ../../renderers/Renderer ../../renderers/SimpleRenderer ../../renderers/UniqueValueRenderer ../../renderers/support/jsonUtils ../../core/Error ../../core/maybe ../../core/screenUtils ../../intl/messages ../../intl/substitute ../../renderers/support/AuthoringInfo ../../renderers/support/AuthoringInfoVisualVariable ../../renderers/support/utils ../../renderers/visualVariables/SizeVariable ../../renderers/visualVariables/support/sizeVariableUtils ../heuristics/ageUnit ../heuristics/outline ../heuristics/sizeRange ./support/utils ../statistics/support/ageUtils ../support/binningUtils ../support/utils ../support/adapters/support/layerUtils ../symbology/size".split(" "),
function(B,J,ja,ka,la,ma,na,oa,pa,qa,h,z,K,F,T,L,U,V,M,W,X,N,Y,e,D,G,E,t,A){async function Z(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))throw new h("size-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(a.valueExpression&&!a.sqlExpression&&!a.view)throw new h("size-visual-variable:missing-parameters","View is required when 'valueExpression' is specified");a.forBinning&&G.verifyBinningParams(a,"size-visual-variable");
const b={...a};if("90-10"===b.theme)throw new h("size-visual-variable:not-supported","Only 'high-to-low', 'above', 'below' themes are supported.");var c=a.forBinning?t.binningCapableLayerTypes:t.featureCapableLayerTypes;a=t.createLayerAdapter(b.layer,c,a.forBinning);if(!a)throw new h("size-visual-variable:invalid-parameters","'layer' must be one of these types: "+t.getLayerTypeLabels(c).join(", "));b.layer=a;"height"===b.axis&&(b.sizeOptimizationEnabled=!1);c=z.isSome(b.signal)?{signal:b.signal}:
null;await a.load(c);c=a.geometryType;if("mesh"===c)throw new h("size-visual-variable:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(b.worldScale){if("polyline"===c||"polygon"===c)throw new h("size-visual-variable:not-supported","'worldScale' sizing is not supported for polyline and polygon layers");if(!b.view||"3d"!==b.view.type)throw new h("size-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true");
}c=await E.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});if(a=e.verifyBasicFieldValidity(a,c,"size-visual-variable:invalid-parameters"))throw a;return b}async function aa(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))throw new h("size-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(a.valueExpression&&!a.sqlExpression&&!a.view)throw new h("size-continuous-renderer:missing-parameters",
"View is required when 'valueExpression' is specified");a.forBinning&&G.verifyBinningParams(a,"size-continuous-renderer");const b={...a};b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled??(b.defaultSymbolEnabled=!0);var c=a.forBinning?t.binningCapableLayerTypes:t.featureCapableLayerTypes;a=t.createLayerAdapter(b.layer,c,a.forBinning);if(!a)throw new h("size-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+t.getLayerTypeLabels(c).join(", "));b.layer=a;c=z.isSome(b.signal)?
{signal:b.signal}:null;await a.load(c);c=a.geometryType;const d=b.symbolType.includes("3d");b.outlineOptimizationEnabled="polygon"===c?b.outlineOptimizationEnabled:!1;if("mesh"===c)throw new h("size-continuous-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(d&&("polyline"===c||"polygon"===c))throw new h("size-continuous-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(b.symbolType.includes("3d-volumetric")&&
(!b.view||"3d"!==b.view.type))throw new h("size-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");c=await E.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});if(a=e.verifyBasicFieldValidity(a,c,"size-continuous-renderer:invalid-parameters"))throw a;return b}async function ba(a){if(!a||!a.layer||!a.field&&!a.valueExpression)throw new h("size-class-breaks-renderer:missing-parameters",
"'layer' and 'field' or 'valueExpression' parameters are required");if(a.valueExpression&&!a.view)throw new h("size-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified");a.forBinning&&G.verifyBinningParams(a,"size-class-breaks-renderer");const b={...a};b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled??(b.defaultSymbolEnabled=!0);b.classificationMethod??(b.classificationMethod="equal-interval");b.normalizationType=E.getNormalizationType(b);var c=a.forBinning?
t.binningCapableLayerTypes:t.featureCapableLayerTypes;a=t.createLayerAdapter(b.layer,c,a.forBinning);if(!a)throw new h("size-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+t.getLayerTypeLabels(c).join(", "));b.layer=a;if(!(null!=b.minValue&&null!=b.maxValue||null==b.minValue&&null==b.maxValue))throw new h("size-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range");c=z.isSome(b.signal)?{signal:b.signal}:
null;await a.load(c);c=a.geometryType;const d=b.symbolType.includes("3d");b.outlineOptimizationEnabled="polygon"===c?b.outlineOptimizationEnabled:!1;if("mesh"===c)throw new h("size-class-breaks-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(d&&("polyline"===c||"polygon"===c))throw new h("size-class-breaks-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(b.symbolType.includes("3d-volumetric")&&(!b.view||
"3d"!==b.view.type))throw new h("size-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");c=await E.getFieldsList({field:b.field,normalizationField:b.normalizationField});if(a=e.verifyBasicFieldValidity(a,c,"size-class-breaks-renderer:invalid-parameters"))throw a;return b}function O(a){a={...a};const b=!!a.symbolType?.includes("3d-volumetric");if(a.worldScale=b)a.axis="3d-volumetric-uniform"===
a.symbolType?"all":"height";delete a.symbolType;delete a.defaultSymbolEnabled;return a}async function ca(a){if(!(a&&a.layer&&a.view&&a.startTime&&a.endTime))throw new h("size-age-renderer:missing-parameters","'layer', 'view', 'startTime', 'endTime' parameters are required");a={...a};a.symbolType??(a.symbolType="2d");a.defaultSymbolEnabled??(a.defaultSymbolEnabled=!0);var b=t.createLayerAdapter(a.layer,t.featureCapableLayerTypes);if(!b)throw new h("size-age-renderer:invalid-parameters","'layer' must be one of these types: "+
t.getLayerTypeLabels(t.featureCapableLayerTypes).join(", "));a.layer=b;var c=z.isSome(a.signal)?{signal:a.signal}:null;await b.load(c);c=b.geometryType;const d=a.symbolType.includes("3d");a.outlineOptimizationEnabled="polygon"===c?a.outlineOptimizationEnabled:!1;if("mesh"===c)throw new h("size-age-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(d&&("polyline"===c||"polygon"===c))throw new h("size-age-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");
if(a.symbolType.includes("3d-volumetric")&&(!a.view||"3d"!==a.view.type))throw new h("size-age-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");if(b=D.verifyDates(b,a.startTime,a.endTime,"size-age-renderer:invalid-parameters"))throw b;if(a.unit&&!D.supportedAgeUnits.includes(a.unit))throw new h("size-age-renderer:invalid-unit",`Supported units are: ${D.supportedAgeUnits.join(", ")}`);return a}
async function P(a){let b=a.sizeScheme,c=null;var d=null;d=await e.getBasemapInfo(a.basemap,a.view);c=z.isSome(d.basemapId)?d.basemapId:null;d=z.isSome(d.basemapTheme)?d.basemapTheme:null;if(b)return{scheme:A.cloneScheme(b),basemapId:c,basemapTheme:d};if(a=A.getSchemes({basemap:c,basemapTheme:d,geometryType:a.geometryType,worldScale:a.worldScale,view:a.view}))b=a.primaryScheme,c=a.basemapId,d=a.basemapTheme;return{scheme:b,basemapId:c,basemapTheme:d}}function Q(a,b){let c;switch(b){case "point":case "multipoint":c=
[a.minSize,a.maxSize];break;case "polyline":c=[a.minWidth,a.maxWidth];break;case "polygon":c=[a.marker.minSize,a.marker.maxSize]}return c}async function da(a,b,c,d){const {theme:f,field:k,normalizationField:v,minValue:m,maxValue:r,axis:l}=a;var g=a.layer,n="date"===(k&&"function"!==typeof k?g.getField(k):null)?.type,p=g.geometryType;g=await P({basemap:a.basemap,geometryType:p,sizeScheme:a.sizeScheme,worldScale:a.worldScale,view:a.view});const q=g.scheme;if(!q)throw new h("size-visual-variable:insufficient-info",
"Unable to find size scheme");d=d&&[d.minSize,d.maxSize]||Q(q,p);const {minDataValue:u,maxDataValue:x,defaultValuesUsed:w}=e.getDataRange(b,c,f,n,"above"===f||"below"===f);c=[];const y="height"===l;n=y?l:void 0;p=d[0];d=d[1];y&&"number"===typeof p&&"number"===typeof d&&(d=e.getSizeRangeForAxis({minSize:p,maxSize:d},n),c.push(new M({axis:"width-and-depth",minSize:d.minSize})),d=d.maxSize);a=new M({field:k,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,valueUnit:"unknown",
normalizationField:v,axis:n,minSize:p,maxSize:d,minDataValue:u,maxDataValue:x,legendOptions:a.legendOptions});a.transformationType===W.TransformationType.ClampedLinear&&"below"===f&&a.flipSizes();c.unshift(a);a=new U({type:"size",theme:f,minSliderValue:null!=m?m:b.min,maxSliderValue:null!=r?r:b.max});a=new L({visualVariables:[a]});return{basemapId:g.basemapId,basemapTheme:g.basemapTheme,visualVariables:c,statistics:b,defaultValuesUsed:w,sizeScheme:A.cloneScheme(q),authoringInfo:a}}async function R(a,
b,c,d,f){const k=await F.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),v=f.field,m=f.layer.geometryType,r=f.defaultSymbolEnabled;var l=A.cloneScheme(a.sizeScheme),g="polygon"===m;const n=g?l.marker:l;l=g?l.background:null;g=g?"point":m;const p=b&&b.opacity,q=a.visualVariables.map(u=>u.clone());b&&b.visualVariables&&b.visualVariables.length&&q.push(...b.visualVariables.map(u=>u.clone()));return{renderer:new J({backgroundFillSymbol:l&&e.createSymbol(m,{type:f.symbolType,color:l.color,outline:e.getSymbolOutlineFromScheme(l,
m,p)}),classBreakInfos:[{minValue:-S,maxValue:S,symbol:e.createSymbol(g,{type:f.symbolType,color:n.color,size:e.getSymbolSizeFromScheme(n,g),outline:e.getSymbolOutlineFromScheme(n,g,p)})}],defaultLabel:r?k.other:null,defaultSymbol:r?e.createSymbol(g,{type:f.symbolType,color:n.noDataColor,size:e.getSymbolSizeFromScheme(n,g,!0),outline:e.getSymbolOutlineFromScheme(n,g,p)}):null,field:v,normalizationField:d,normalizationType:c,valueExpression:f.valueExpression,valueExpressionTitle:f.valueExpressionTitle,
visualVariables:q,authoringInfo:a.authoringInfo&&a.authoringInfo.clone()}),visualVariables:a.visualVariables.map(u=>u.clone()),statistics:a.statistics,defaultValuesUsed:a.defaultValuesUsed,sizeScheme:A.cloneScheme(a.sizeScheme),basemapId:a.basemapId,basemapTheme:a.basemapTheme}}function ea(a,b){const c=K.toPt(a.minSize);a=(K.toPt(a.maxSize)-c)/(4<=b?b-1:b);const d=[];for(let f=0;f<b;f++)d.push(c+a*f);return d}async function fa(a,b){var c=await F.fetchMessageBundle("esri/smartMapping/t9n/smartMapping");
const d=a.defaultSymbolEnabled,f=a.layer.geometryType;var k="polygon"===f;const v=a.symbolType?.includes("3d-volumetric"),m=await P({basemap:a.basemap,geometryType:f,sizeScheme:a.sizeScheme,worldScale:v,view:a.view}),r=m.scheme,{result:l,outlineResult:g}=b,n=l?.classBreakInfos??[],p=a.classificationMethod,q=a.normalizationType,u=k?r.marker:r,x=k?r.background:null,w=k?"point":f;k=Q(u,w);const y=v?e.getSizeRangeForAxis({minSize:k[0],maxSize:k[1]},"height"):null,ha=ea({minSize:k[0],maxSize:y?y.maxSize:
k[1]},n.length),H=g&&g.opacity;c=new J({backgroundFillSymbol:x&&e.createSymbol(f,{type:a.symbolType,color:x.color,outline:e.getSymbolOutlineFromScheme(x,f,H)}),classBreakInfos:n.map((C,ia)=>({minValue:C.minValue,maxValue:C.maxValue,symbol:e.createSymbol(w,{type:a.symbolType,color:u.color,size:ha[ia],widthAndDepth:y&&y.minSize,outline:e.getSymbolOutlineFromScheme(u,w,H)}),label:C.label})),defaultLabel:d?c.other:null,defaultSymbol:d?e.createSymbol(w,{type:a.symbolType,color:u.noDataColor,size:e.getSymbolSizeFromScheme(u,
w,!0),widthAndDepth:y&&y.minSize,outline:e.getSymbolOutlineFromScheme(u,w,H)}):null,field:a.field,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,normalizationType:q,normalizationField:a.normalizationField,normalizationTotal:"percent-of-total"===q?l?.normalizationTotal:void 0,legendOptions:a.legendOptions,authoringInfo:new L({type:"class-breaks-size",classificationMethod:p,standardDeviationInterval:a.standardDeviationInterval})});"standard-deviation"!==p&&V.setLabelsForClassBreaks({classBreakInfos:c.classBreakInfos,
classificationMethod:p,normalizationType:q,round:!0});g&&g.visualVariables&&g.visualVariables.length&&(c.visualVariables=g.visualVariables.map(C=>C.clone()));return{renderer:c,sizeScheme:A.cloneScheme(r),classBreaksResult:l,defaultValuesUsed:!!b.defaultValuesUsed,basemapId:m.basemapId,basemapTheme:m.basemapTheme}}async function I(a){a=await Z(a);const {view:b,field:c,valueExpression:d,minValue:f,maxValue:k,layer:v,normalizationField:m,signal:r,statistics:l}=a,[g,n,p]=await Promise.all([l??e.getSummaryStatistics({layer:v,
field:c,valueExpression:d,sqlExpression:a.sqlExpression,sqlWhere:a.sqlWhere,normalizationType:m?"field":void 0,normalizationField:m,minValue:f,maxValue:k,view:b,signal:r}),"90-10"===a.theme?e.getClassBreaks({layer:v,field:c,normalizationField:m,valueExpression:d,classificationMethod:"quantile",minValue:f,maxValue:k,view:b,numClasses:10,signal:r}):null,a.sizeOptimizationEnabled?Y({view:b,layer:v,signal:r}).catch(e.errorCallback):null]);return da(a,g,n?.result,p)}const S=2**53-1;B.createAgeRenderer=
async function(a){var b=await ca(a);const {defaultSymbolEnabled:c,view:d,startTime:f,endTime:k,symbolType:v,minValue:m,maxValue:r,signal:l}=b;a=b.layer;var g={layer:b.layer,view:b.view,signal:l};const [n,p]=await Promise.all([b.unit?{unit:b.unit,statistics:null,valueExpression:null}:await X({view:d,layer:a,startTime:f,endTime:k,minValue:m,maxValue:r,signal:l}),b.outlineOptimizationEnabled?N(g).catch(e.errorCallback):null]),{unit:q,statistics:u}=n;g=D.getAgeExpressions({layer:a,startTime:f,endTime:k,
unit:q}).valueExpression;var x=await F.fetchMessageBundle("esri/smartMapping/t9n/smartMapping");x=T.substitute(x[`ageInfo_${q}`],{unit:q,startTime:e.formatDate(f,q,a),endTime:e.formatDate(k,q,a)});b=await I(O({layer:a,basemap:b.basemap,valueExpression:g,symbolType:v,statistics:u,legendOptions:{title:x},theme:b.theme,sizeScheme:b.sizeScheme,sizeOptimizationEnabled:b.sizeOptimizationEnabled,view:b.view,minValue:m,maxValue:r,signal:l}));a=await R(b,p,null,null,{layer:a,valueExpression:g,defaultSymbolEnabled:c,
symbolType:v});a.renderer.authoringInfo?.visualVariables?.forEach(w=>e.updateAgeRendererAuthoringInfoVV(w,f,k,q));return{...a,unit:q}};B.createClassBreaksRenderer=async function(a){a=await ba(a);var b=e.getClassBreaks;const c={...a};delete c.basemap;delete c.sizeScheme;delete c.legendOptions;delete c.symbolType;delete c.defaultSymbolEnabled;c.analyzeData=!(null!=c.minValue&&null!=c.maxValue);b=await b.call(e,c,a.outlineOptimizationEnabled);return fa(a,b)};B.createContinuousRenderer=async function(a){a=
await aa(a);var b={layer:a.layer,view:a.view,signal:a.signal};const [c,d]=await Promise.all([I(O(a)),a.outlineOptimizationEnabled?N(b).catch(e.errorCallback):null]);b=a.normalizationField;return R(c,d,b?"field":void 0,b,a)};B.createVisualVariables=I;Object.defineProperty(B,Symbol.toStringTag,{value:"Module"})});