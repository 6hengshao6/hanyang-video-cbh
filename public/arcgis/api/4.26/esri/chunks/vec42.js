// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define(["exports","../geometry/support/buffer/math/common"],function(m,I){function J(b,c,a){if(b.count!==c.count)I.mathLogger.error("source and destination buffers need to have the same number of elements");else{var g=b.count,h=a[0],d=a[1],e=a[2],f=a[3],k=a[4],p=a[5],q=a[6],D=a[7],E=a[8],F=a[9],r=a[10],t=a[11],x=a[12],v=a[13],w=a[14];a=a[15];var n=b.typedBuffer;b=b.typedBufferStride;var u=c.typedBuffer;c=c.typedBufferStride;for(let y=0;y<g;y++){const z=y*b;var l=y*c;const A=u[l],B=u[l+1],C=u[l+2];
l=u[l+3];n[z]=h*A+k*B+E*C+x*l;n[z+1]=d*A+p*B+F*C+v*l;n[z+2]=e*A+q*B+r*C+w*l;n[z+3]=f*A+D*B+t*C+a*l}}}function K(b,c,a){G(b.typedBuffer,c.typedBuffer,a,b.typedBufferStride,c.typedBufferStride)}function G(b,c,a,g=4,h=g){if(b.length/g!==c.length/h)I.mathLogger.error("source and destination buffers need to have the same number of elements");else{var d=b.length/g,e=a[0],f=a[1],k=a[2],p=a[3],q=a[4],D=a[5],E=a[6],F=a[7];a=a[8];var r=0,t=0;for(let x=0;x<d;x++){const v=c[r],w=c[r+1],n=c[r+2],u=c[r+3];b[t]=
e*v+p*w+E*n;b[t+1]=f*v+q*w+F*n;b[t+2]=k*v+D*w+a*n;b[t+3]=u;r+=h;t+=g}}}function L(b,c){const a=Math.min(b.count,c.count),g=b.typedBuffer;b=b.typedBufferStride;const h=c.typedBuffer;c=c.typedBufferStride;for(let f=0;f<a;f++){const k=f*b;var d=f*c;const p=h[d],q=h[d+1];d=h[d+2];var e=p*p+q*q+d*d;0<e&&(e=1/Math.sqrt(e),g[k]=e*p,g[k+1]=e*q,g[k+2]=e*d)}}function M(b,c,a){H(b.typedBuffer,c,a,b.typedBufferStride)}function H(b,c,a,g=4){const h=Math.min(b.length/g,c.count),d=c.typedBuffer;c=c.typedBufferStride;
let e=0,f=0;for(let k=0;k<h;k++)b[f]=a*d[e],b[f+1]=a*d[e+1],b[f+2]=a*d[e+2],b[f+3]=a*d[e+3],e+=c,f+=g}function N(b,c,a){const g=Math.min(b.count,c.count),h=b.typedBuffer;b=b.typedBufferStride;const d=c.typedBuffer;c=c.typedBufferStride;for(let e=0;e<g;e++){const f=e*b,k=e*c;h[f]=d[k]>>a;h[f+1]=d[k+1]>>a;h[f+2]=d[k+2]>>a;h[f+3]=d[k+3]>>a}}const O=Object.freeze(Object.defineProperty({__proto__:null,normalize:L,scale:H,scaleView:M,shiftRight:N,transformMat3:G,transformMat3View:K,transformMat4:J},Symbol.toStringTag,
{value:"Module"}));m.normalize=L;m.scale=H;m.scaleView=M;m.shiftRight=N;m.transformMat3=G;m.transformMat3View=K;m.transformMat4=J;m.vec4=O});