// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ./ObservableBase ./PropertyOrigin ./tracking ./tracking/Flags".split(" "),function(m,h,q,r,k,d){let u=function(){function f(a,b,c){this.properties=a;this.propertyName=b;this.metadata=c;this.observerObject=new t;this._handles=this._accessed=null;this.observerObject.flags=d.Flags.Dirty|(c.nonNullable?d.Flags.NonNullable:0)|(c.hasOwnProperty("value")?d.Flags.HasDefaultValue:0)|(void 0===c.get?d.Flags.DepTrackingInitialized:0)|(void 0===c.dependsOn?
d.Flags.AutoTracked:0);n.register(this,this.observerObject,this.observerObject)}var e=f.prototype;e.destroy=function(){n.unregister(this.observerObject);this.observerObject.destroy();this._accessed=null;this._clearObservationHandles()};e.getComputed=function(){const a=this.observerObject;k.trackAccess(a);var b=this.properties.store;const c=this.propertyName;var g=a.flags;const p=b.get(c);if(g&d.Flags.Computing||~g&d.Flags.Dirty&&b.has(c))return p;a.flags|=d.Flags.Computing;const l=this.properties.host;
g&d.Flags.AutoTracked?g=k.runTracked(this,this.metadata.get,l):(k.trackExplicitDependencies(l,this),g=this.metadata.get.call(l));b.set(c,g,r.OriginId.COMPUTED);b=b.get(c);b===p?a.flags&=~d.Flags.Dirty:k.runUntracked(this.commit,this);a.flags&=~d.Flags.Computing;return b};e.onObservableAccessed=function(a){a!==this.observerObject&&(null===this._accessed&&(this._accessed=[]),this._accessed.includes(a)||this._accessed.push(a))};e.onTrackingEnd=function(){this._clearObservationHandles();const a=this.observerObject;
a.flags|=d.Flags.DepTrackingInitialized;const b=this._accessed;if(null!==b){var c=this._handles;null===c&&(c=this._handles=[]);for(let g=0;g<b.length;++g)c.push(b[g].observe(a));b.length=0}};e.notifyChange=function(){const a=this.observerObject;a.onInvalidated();a.onCommitted()};e.invalidate=function(){this.observerObject.onInvalidated()};e.commit=function(){const a=this.observerObject;a.flags&=~d.Flags.Dirty;a.onCommitted()};e._clearObservationHandles=function(){const a=this._handles;if(null!==a){for(let b=
0;b<a.length;++b)a[b].remove();a.length=0}};return h._createClass(f)}(),t=function(f){function e(){var b=a.apply(this,arguments);b.flags=0;return b}h._inherits(e,f);var a=h._createSuper(e);f=e.prototype;f.onInvalidated=function(){~this.flags&d.Flags.Overriden&&(this.flags|=d.Flags.Dirty);const b=this._observers;if(b&&0<b.length)for(const c of b)c.onInvalidated()};f.onCommitted=function(){var b=this._observers;if(b&&0<b.length){b=b.slice();for(const c of b)c.onCommitted()}};f.destroy=function(){if(this.flags&
d.Flags.Dirty)this.onCommitted();h._get(h._getPrototypeOf(e.prototype),"destroy",this).call(this)};return h._createClass(e)}(q.ObservableBase);const n=new FinalizationRegistry(f=>{f.destroy()});m.Property=u;Object.defineProperty(m,Symbol.toStringTag,{value:"Module"})});