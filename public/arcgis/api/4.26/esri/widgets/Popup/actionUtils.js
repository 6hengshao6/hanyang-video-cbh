// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../core/Error ../../core/Logger ../../core/maybe ../../core/promiseUtils ./actions".split(" "),function(g,h,w,q,x,e){function r(a){const {selectedFeature:c,location:b,view:d}=a;return d?"3d"===d.type?c??b??null:a.get("selectedFeature.geometry")||b:null}function m(a){return!!a&&a.isAggregate&&"cluster"===a.sourceLayer?.featureReduction?.type}async function y(a,c){if("3d"!==c?.type||!a||"esri.Graphic"!==a.declaredClass)return!0;if((c=c.getViewForGraphic(a))&&"whenGraphicBounds"in
c){let b;try{b=await c.whenGraphicBounds(a,{useViewElevation:!0})}catch(d){}return!b||!b.boundingBox||b.boundingBox[0]===b.boundingBox[3]&&b.boundingBox[1]===b.boundingBox[4]&&b.boundingBox[2]===b.boundingBox[5]}return!0}async function t(a){const {location:c,selectedFeature:b,view:d,zoomFactor:k}=a,f=r(a);if(!d||!f)throw a=new h("zoom-to:invalid-target-or-view","Cannot zoom to location without a target and view.",{target:f,view:d}),l.error(a),a;const z=d.scale/k,n=a.selectedFeature?.geometry??c,u=
q.isSome(n)&&"point"===n.type&&await y(b,d);e.zoomToFeature.active=!0;e.zoomToFeature.disabled=!0;try{await a.zoomTo({target:{target:f,scale:u?z:void 0}})}catch(B){const A=new h("zoom-to:invalid-graphic","Could not zoom to the location of the graphic.",{graphic:b});l.error(A)}finally{e.zoomToFeature.active=!1,e.zoomToFeature.disabled=!1,a.zoomToLocation=null,u&&(a.location=n)}}async function v(a){const {selectedFeature:c,view:b}=a;if("2d"!==b?.type)throw a=new h("zoomToCluster:invalid-view","View must be 2d MapView.",
{view:b}),l.error(a),a;if(!c||!m(c))throw a=new h("zoomToCluster:invalid-selectedFeature","Selected feature must represent an aggregate/cluster graphic.",{selectedFeature:c}),l.error(a),a;const [d,k]=await p(b,c);e.zoomToClusteredFeatures.active=!0;e.zoomToClusteredFeatures.disabled=!0;const {extent:f}=await d.queryExtent(k);await a.zoomTo({target:f});e.zoomToClusteredFeatures.active=!1;e.zoomToClusteredFeatures.disabled=!1}async function p(a,c){a=await a.whenLayerView(c.sourceLayer);const b=a.createQuery();
c=c.getObjectId();b.aggregateIds=null!=c?[c]:[];return[a,b]}const l=w.getLogger("esri.widgets.Popup.PopupViewModel");g.browseAggregateFeatures=async function(a){const {selectedFeature:c,view:b}=a;if(b&&c){var [d,k]=await p(b,c);e.browseClusteredFeatures.active=!0;e.browseClusteredFeatures.disabled=!0;({features:a}=await d.queryFeatures(k));e.browseClusteredFeatures.active=!1;e.browseClusteredFeatures.disabled=!1;b.popup?.open({features:[c].concat(a),featureMenuOpen:!0})}};g.displayClusterExtent=async function(a){const {view:c,
selectedFeature:b}=a;if(c&&b){var [d,k]=await p(c,b),{extent:f}=await d.queryExtent(k);a.selectedClusterBoundaryFeature.geometry=f;c.graphics.add(a.selectedClusterBoundaryFeature)}};g.getPointFromGeometry=function(a){if(q.isNone(a))return null;switch(a.type){case "point":return a;case "extent":return a.center;case "polygon":return a.centroid;case "multipoint":case "polyline":return a.extent?.center;default:return null}};g.getSelectedTarget=r;g.isClusterFeature=m;g.removeClusteredFeaturesForBrowsing=
function(a){const c=a.features.filter(b=>m(b));c.length&&(a.features=c)};g.triggerAction=a=>{const {event:c,view:b}=a;({action:a}=c);var d=b&&b.popup;if(!a)return Promise.reject(new h("trigger-action:missing-arguments","Event has no action"));if(!d)return Promise.reject(new h("trigger-action:missing-arguments","view.popup is missing"));const {disabled:k,id:f}=a;if(!f)return Promise.reject(new h("trigger-action:invalid-action","action.id is missing"));if(k)return Promise.reject(new h("trigger-action:invalid-action",
"Action is disabled"));if(f===e.zoomToFeature.id)return t(d.viewModel).catch(x.throwIfNotAbortError);if(f===e.zoomToClusteredFeatures.id)return v(d.viewModel);if(f===e.browseClusteredFeatures.id)return d.featureMenuOpen=!d.featureMenuOpen,d.viewModel.browseClusterEnabled=!d.viewModel.browseClusterEnabled,Promise.resolve();d.viewModel.browseClusterEnabled=!1;if(f===e.removeSelectedFeature.id){d.close();({selectedFeature:a}=d);if(!a)return Promise.reject(new h(`trigger-action:${e.removeSelectedFeature.id}`,
"selectedFeature is required",{selectedFeature:a}));({sourceLayer:d}=a);d?d.remove(a):b.graphics.remove(a)}return Promise.resolve()};g.zoomToClusterExtent=v;g.zoomToLocation=t;Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});