// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../Basemap ../../../core/Collection ../../../core/Error ../../../core/Handles ../../../core/Loadable ../../../core/Logger ../../../core/Promise ../../../core/promiseUtils ../../../core/reactiveUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ../../../portal/Portal ./LocalBasemapsSource".split(" "),
function(k,d,b,p,q,r,t,u,v,w,l,e,A,B,C,x,m,y){const n=p.ofType(b);b=function(c){function f(a){a=z.call(this,a);a._handles=new r;a._lastPortalBasemapFetchController=null;a.basemaps=new n;a.filterFunction=null;a.portal=m.getDefault();a.query=null;a.updateBasemapsCallback=null;return a}k._inherits(f,c);var z=k._createSuper(f);c=f.prototype;c.initialize=function(){this._handles.add([l.watch(()=>[this.filterFunction,this.loadStatus,this.portal?.basemapGalleryGroupQuery,this.portal?.user,this.query,this.updateBasemapsCallback],
()=>this.refresh(),l.initial)])};c.destroy=function(){this._handles.destroy();this.portal=this.filterFunction=this._handles=null};c.load=function(a){this.addResolvingPromise(this.portal.load(a));this.notifyChange("state");return Promise.resolve(this)};c.refresh=async function(){if("ready"===this.state){this._lastPortalBasemapFetchController&&(this._lastPortalBasemapFetchController.abort(),this._lastPortalBasemapFetchController=null);var a=this.portal,g=new AbortController;this._lastPortalBasemapFetchController=
g;this.notifyChange("state");try{const h=await a.fetchBasemaps(this._toQueryString(this.query),g);this._updateBasemaps(h)}catch(h){if(w.isAbortError(h))throw h;u.getLogger(this.declaredClass).warn(new q("basemap-source:fetch-basemaps-error","Could not fetch basemaps from portal.",{error:h}));this._updateBasemaps()}this._lastPortalBasemapFetchController=null;this.notifyChange("state")}};c._toQueryString=function(a){return a&&"string"!==typeof a?Object.keys(a).map(g=>`${g}:${a[g]}`).join(" AND "):a};
c._updateBasemaps=function(a=[]){a=this.filterFunction?a.filter(this.filterFunction):a;a=this.updateBasemapsCallback?this.updateBasemapsCallback(a):a;this.basemaps.removeAll();this.basemaps.addMany(a)};k._createClass(f,[{key:"state",get:function(){return"not-loaded"===this.loadStatus?"not-loaded":"loading"===this.loadStatus||this._lastPortalBasemapFetchController?"loading":"ready"}}]);return f}(t.LoadableMixin(v.EsriPromiseMixin(y)));d.__decorate([e.property({readOnly:!0,type:n})],b.prototype,"basemaps",
void 0);d.__decorate([e.property()],b.prototype,"filterFunction",void 0);d.__decorate([e.property({type:m})],b.prototype,"portal",void 0);d.__decorate([e.property()],b.prototype,"query",void 0);d.__decorate([e.property({readOnly:!0})],b.prototype,"state",null);d.__decorate([e.property()],b.prototype,"updateBasemapsCallback",void 0);return b=d.__decorate([x.subclass("esri.widgets.BasemapGallery.support.PortalBasemapsSource")],b)});