// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../Color ../../core/handleUtils ../../core/maybe ../../core/memoize ../../core/reactiveUtils ../../core/SetUtils ../../core/unitUtils ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/arrayUtils ../../core/has ../../core/accessorSupport/decorators/subclass ../../chunks/vec3 ../../chunks/vec4f64 ../../geometry/ellipsoidUtils ../../geometry/support/ray ../../layers/support/ElevationQuery ../../views/3d/webgl-engine/lib/Intersector ../../views/3d/webgl-engine/lib/IntersectorInterfaces ../../views/3d/webgl-engine/lib/intersectorUtilsConversions ./ElevationProfileLine".split(" "),
function(m,d,A,G,e,H,B,I,J,g,c,W,X,K,L,C,M,D,N,O,P,Q,R){function S({view:f,inputGraphicUid:h,maxIntersectionDistance:v},a){for(const b of a)if(!(null!=b.distanceInRenderSpace&&b.distanceInRenderSpace>v)&&(a=Q.toGraphic(b,f),e.isNone(a)||E(a)!==h))return b;return null}function E(f){if(f.layer&&"objectIdField"in f.layer){const h=f.attributes[f.layer.objectIdField];if(h)return`o-${f.layer.id}-${h}`}return`u-${f.uid}`}c=function(f){function h(a){a=v.call(this,a);a.type="view";a.color=new A("#cf4ccf");
a.viewVisualizationEnabled=!0;a.include=null;a.exclude=null;a.numSamplesForPreview=50;a.numSamplesPerChunk=25;a._getQueryElevationDependencies=H.memoize((b,k,n,p,w,t,l)=>({inputGraphicUid:e.isSome(b)?E(b):null,visibleLayers:k,maxIntersectionDistance:n,intersectOptions:p,view:w,stationary:t,spatialReference:l}));a._vecA=C.create();a._vecB=C.create();a._ray=D.create();return a}m._inherits(h,f);var v=m._createSuper(h);f=h.prototype;f.queryElevation=async function(a,{noDataValue:b,signal:k}){const n=
this.queryElevationDependencies;if(e.isNone(n))throw Error("ElevationProfileLineInput: no dependencies");const p=this._intersector;if(e.isNone(p))throw Error("ElevationProfileLineInput: no view");const {intersectOptions:w,view:t,spatialReference:l}=n,x=t.renderCoordsHelper,T=t.sceneIntersectionHelper,F=this._vecA,u=this._vecA,q=this._vecB,U=this._ray;if(!l)return{geometry:a,noDataValue:b};k=await N.GeometryDescriptor.fromGeometry(a).project(l,k);if(!k)return{geometry:a,noDataValue:b};a=k.coordinates;
const V=a.length;for(let y=0;y<V;++y){const r=a[y];L.set(q,r.x,r.y,r.z??0);x.toRenderCoords(q,l,q);x.setAltitude(F,2E5,q);var z=D.fromPoints(F,q,U);T.computeIntersection(z,p,w);(z=S(n,p.results.all))?(z.getIntersectionPoint(u),x.fromRenderCoords(u,u,l),r.z=u[2]):r.z=b}return{geometry:k.export(),noDataValue:b}};f.attach=function(a){const b=()=>this._onChange();return G.handlesGroup([m._get(m._getPrototypeOf(h.prototype),"attach",this).call(this,a),B.watch(()=>this.queryElevationDependencies,b),B.on(()=>
a.elevationProvider,"elevation-change",b,{onListenerAdd:b,onListenerRemove:b})])};m._createClass(h,[{key:"minDemResolution",get:function(){const a=this._viewModel?.view;if(e.isNone(a)||"3d"!==a.type)return null;const b=a.pointsOfInterest?.focus?.renderLocation;return b?a.state.camera.computeRenderPixelSizeAt(b)*J.getMetersPerVerticalUnitForSR(a.spatialReference):null}},{key:"queryElevationDependencies",get:function(){return e.applySome(this._view,a=>this._getQueryElevationDependencies(this._viewModel?.input,
this._visibleLayers,this._maxIntersectionDistance,this._intersectOptions,a,a.stationary,a.spatialReference))}},{key:"_visibleLayers",get:function(){const a=e.applySome(this._view,b=>b.map?.allLayers?.filter(k=>k.visible).toArray());return e.unwrapOr(a,[])}},{key:"_intersectOptions",get:function(){var a=this._view;if(e.isNone(a))return{};const b=a.externalToInternalIntersectOptions({include:this.include,exclude:this.exclude});a=a.externalToInternalIntersectOptions({exclude:this._pointCloudLayers});
b.exclude=I.union(b.exclude,a.exclude);return b}},{key:"_pointCloudLayers",get:function(){const a=this._view;return e.isNone(a)?[]:a.allLayerViews.toArray().filter(b=>"point-cloud"===b.layer?.type).map(b=>b.layer)}},{key:"_view",get:function(){const a=this._viewModel?.view;return e.isSome(a)&&"3d"===a.type?a:null}},{key:"_maxIntersectionDistance",get:function(){const a=this._view;return e.isNone(a)||!a.renderCoordsHelper?Number.POSITIVE_INFINITY:M.getReferenceEllipsoid(a.spatialReference).radius/
a.renderCoordsHelper.unitInMeters}},{key:"_intersector",get:function(){var a=this._view;if(e.isNone(a))return null;a=O.newIntersector(a.state.viewingMode);const b=a.options;b.hud=!1;b.invisibleTerrain=!1;b.backfacesTerrain=!1;b.selectionMode=!1;b.store=P.StoreResults.ALL;return a}}]);return h}(R);d.__decorate([g.property({type:A,nonNullable:!0})],c.prototype,"color",void 0);d.__decorate([g.property()],c.prototype,"viewVisualizationEnabled",void 0);d.__decorate([g.property()],c.prototype,"include",
void 0);d.__decorate([g.property()],c.prototype,"exclude",void 0);d.__decorate([g.property({readOnly:!0})],c.prototype,"minDemResolution",null);d.__decorate([g.property()],c.prototype,"queryElevationDependencies",null);d.__decorate([g.property()],c.prototype,"_visibleLayers",null);d.__decorate([g.property()],c.prototype,"_intersectOptions",null);d.__decorate([g.property()],c.prototype,"_pointCloudLayers",null);d.__decorate([g.property()],c.prototype,"_view",null);d.__decorate([g.property()],c.prototype,
"_maxIntersectionDistance",null);d.__decorate([g.property()],c.prototype,"_intersector",null);return c=d.__decorate([K.subclass("esri.widgets.ElevationProfile.ElevationProfileLineView")],c)});