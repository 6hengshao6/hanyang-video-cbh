// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../geometry ../../Graphic ../../intl ../../symbols ../../core/analysisThemeUtils ../../core/maybe ../../core/reactiveUtils ../../core/unitFormatUtils ../../core/unitUtils ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/arrayUtils ../../core/has ../../core/accessorSupport/decorators/subclass ../../geometry/geometryEngine ../../geometry/projection ../../geometry/support/geodesicUtils ../../layers/GraphicsLayer ../../views/ViewingMode ../../views/draw/Draw ../../views/interactive/dragEventPipeline ../../views/interactive/GraphicManipulator ../../views/interactive/InteractiveToolBase ../../intl/messages ../../intl/locale ../../geometry/Point ../../symbols/SimpleFillSymbol ../../symbols/SimpleLineSymbol ../../symbols/TextSymbol ../../symbols/Font ../../symbols/SimpleMarkerSymbol ../../geometry/Polyline ../../geometry/SpatialReference ../../geometry/Polygon".split(" "),
function(g,z,q,ba,x,ca,da,w,A,D,v,E,t,ea,fa,ha,O,l,m,f,F,P,Q,B,R,S,G,T,H,U,V,W,X,I,J,y,Y){function Z(b,d,h){var a={style:"circle",color:w.getAccentColor(.5),outline:{type:"simple-line",width:0}};const e=new I({...a,size:8});a=new I({...a,size:12});b=new x({geometry:b,symbol:e});return new R.GraphicManipulator({view:d,layer:h,graphic:b,focusedSymbol:a})}function K(b,d,h){if(2===b.length)return b=new J({paths:b,spatialReference:d}),d?.isGeographic?f.isSupported(d)?d=f.geodesicDensify(b,1E5):(b=m.project(b,
y.WGS84),b=f.geodesicDensify(b,1E5),d=m.project(b,d)):d?.isWebMercator?d=l.geodesicDensify(b,1E5,"meters"):l.planarLength(b,"meters")>=h?(b=m.project(b,y.WGS84),b=f.geodesicDensify(b,1E5),d=m.project(b,d)):d=b,{measurement:null,fillGeometry:null,outlineGeometry:d};b.push(b[0]);var a=new J({paths:[b],spatialReference:d}),e=new Y({rings:[b],spatialReference:d});let c=b=null;if(d?.isGeographic)if(f.isSupported(d)){b=f.geodesicDensify(a,1E5);c=f.geodesicDensify(e,1E5);c=l.simplify(c);if(!c)return null;
e=f.geodesicLengths([a],"meters")[0];a=f.geodesicAreas([c],"square-meters")[0]}else{b=y.WGS84;a=m.project(a,b);e=m.project(e,b);b=f.geodesicDensify(a,1E5);c=f.geodesicDensify(e,1E5);c=l.simplify(c);if(!c)return null;e=f.geodesicLengths([a],"meters")[0];a=f.geodesicAreas([c],"square-meters")[0];b=m.project(b,d);c=m.project(c,d)}else if(d?.isWebMercator){b=l.geodesicDensify(a,1E5,"meters");c=l.geodesicDensify(e,1E5,"meters");c=l.simplify(c);if(!c)return null;e=l.geodesicLength(a,"meters");a=l.geodesicArea(c,
"square-meters")}else{const n=l.planarLength(a,"meters");if(n>=h){b=y.WGS84;a=m.project(a,b);e=m.project(e,b);b=f.geodesicDensify(a,1E5);c=f.geodesicDensify(e,1E5);c=l.simplify(c);if(!c)return null;e=f.geodesicLengths([a],"meters")[0];a=f.geodesicAreas([c],"square-meters")[0];b=m.project(b,d);c=m.project(c,d)}else{b=a;c=l.simplify(e);if(!c)return null;e=n;a=l.planarArea(c,"square-meters")}}return{measurement:{geometry:c,area:a,perimeter:e},fillGeometry:c,outlineGeometry:b}}function L(b){if(!b)return!1;
const {isGeographic:d,isWebMercator:h,isWGS84:a}=b;return d&&!a&&!f.isSupported(b)||!d&&!h}function M(b,d,h){if(!d||!b)return null;const a={area:null,perimeter:null},{area:e,perimeter:c}=d;switch(h){case "metric":a.area=v.formatMetricArea(b,e,"square-meters");break;case "imperial":a.area=v.formatImperialArea(b,e,"square-meters");break;default:d=E.convertUnit(e,"square-meters",h),a.area=v.formatDecimal(b,d,h)}if(h=aa(h))switch(h){case "metric":a.perimeter=v.formatMetricLength(b,c,"meters");break;case "imperial":a.perimeter=
v.formatImperialLength(b,c,"meters");break;default:d=E.convertUnit(c,"meters",h),a.perimeter=v.formatDecimal(b,d,h)}else a.perimeter="";return a}function aa(b){switch(b){case "metric":return"metric";case "imperial":return"imperial";case "square-inches":return"inches";case "square-feet":return"feet";case "square-yards":return"yards";case "square-miles":return"miles";case "square-us-feet":return"us-feet";case "square-meters":return"meters";case "square-kilometers":return"kilometers";case "acres":return"imperial";
case "ares":case "hectares":return"metric";case "square-millimeters":return"millimeters";case "square-centimeters":return"centimeters";case "square-decimeters":return"decimeters";default:return null}}g.AreaMeasurement2DTool=function(b){function d(a){a=h.call(this,a);a._drawActive=!1;a._measurementLayer=new F({internal:!0,listMode:"hide",visible:!1});a._manipulatorLayer=new F({internal:!0,listMode:"hide",visible:!1});a._vertices=[];a.geodesicDistanceThreshold=1E5;a.measurement=null;a.measurementLabel=
null;return a}z._inherits(d,b);var h=z._createSuper(d);b=d.prototype;b.initialize=function(){G.fetchMessageBundle("esri/core/t9n/Units").then(e=>{this.messages=e});this.addHandles(T.onLocaleChange(async()=>{this.messages=await G.fetchMessageBundle("esri/core/t9n/Units")}));const a=this.view;this._draw=new Q({view:a});a.map.addMany([this._measurementLayer,this._manipulatorLayer]);a.focus();this.addHandles(D.watch(()=>[this.unit,this.geodesicDistanceThreshold,this.messages],()=>{this._updateGraphics()},
D.initial))};b.destroy=function(){const {map:a}=this.view;this._draw.view=null;this._draw=A.destroyMaybe(this._draw);a.removeMany([this._measurementLayer,this._manipulatorLayer]);this._measurementLayer.removeAll();this._manipulatorLayer.removeAll();this._set("measurement",null);this._set("measurementLabel",null);this._measurementLayer=A.destroyMaybe(this._measurementLayer);this._manipulatorLayer=A.destroyMaybe(this._manipulatorLayer);this._resetVertices()};b.onActivate=function(){this._drawActive||
0!==this._vertices.length||this._startSketch()};b.onShow=function(){this._measurementLayer.visible=!0;this._manipulatorLayer.visible=!0};b.onHide=function(){this._measurementLayer.visible=!1;this._manipulatorLayer.visible=!1};b.reset=function(){this.manipulators.removeAll();this._resetVertices();this._measurementLayer.removeAll();this._manipulatorLayer.removeAll();this._set("measurement",null);this._set("measurementLabel",null);this._draw.reset();this._drawActive=!1};b._resetVertices=function(){for(const {handle:a}of this._vertices)a.remove();
this._vertices=[]};b._startSketch=function(){this._drawActive=!0;const a=this._draw.create("polyline",{mode:"click"});a.on("vertex-add vertex-update vertex-remove cursor-update undo redo".split(" "),e=>this._updateSketch(e.vertices));a.on("draw-complete",()=>this._stopSketch())};b._stopSketch=function(){3>this._vertices.length?(this.reset(),this._startSketch()):(this.manipulators.forEach(({manipulator:a})=>{a.interactive=!0}),this._drawActive=!1,this.finishToolCreation())};b._updateSketch=function(a){const e=
this.view.spatialReference;if(e&&(!L(e)||m.isLoaded())){for(;this._vertices.length>a.length;){const {handle:k,manipulator:p}=this._vertices.pop();k.remove();this.manipulators.remove(p)}for(let k=this._vertices.length;k<a.length;k++){const [p,u]=a[k];var c=new H({x:p,y:u,spatialReference:e});c=Z(c,this.view,this._manipulatorLayer);this.manipulators.add(c);var n=B.createManipulatorDragEventPipeline(c,(r,C)=>{C.next(B.screenToMap(this.view)).next(B.dragGraphic(r.graphic,P.ViewingMode.Local)).next(()=>
{const N=r.graphic.geometry;this._vertices[k].coord=[N.x,N.y];this._updateGraphics()})});this._vertices.push({manipulator:c,coord:[p,u],handle:n})}if(this._vertices.length){c=this._vertices.length-1;n=this._vertices[c];const [k,p]=a[c];if(n.coord[0]!==k||n.coord[1]!==p)n.coord=[k,p],n.manipulator.graphic.geometry=new H({x:k,y:p,spatialReference:e});const u=this._drawActive?this._vertices[c].manipulator:null;this.manipulators.forEach(({manipulator:r})=>{r.interactive=null==u||r!==u})}this._updateGraphics()}};
b._updateGraphics=function(){if(2>this._vertices.length)this._measurementLayer.removeAll();else{var a=this._vertices.map(({coord:C})=>C);if(a=K(a,this.view.spatialReference,this.geodesicDistanceThreshold)){var {measurement:e,fillGeometry:c,outlineGeometry:n}=a;this._set("measurement",e);a=e?M(this.messages,e,this.unit):null;this._set("measurementLabel",a);if(c||n){var {graphics:k}=this._measurementLayer;if(3===k.length){var p=k.at(0);var u=k.at(1);var r=k.at(2)}else p=new x({symbol:new U({color:w.getAccentColor(.3),
outline:null})}),u=new x({symbol:new V({color:w.getAccentColor(),width:2})}),r=new x({symbol:new W({color:w.getTextColor(),font:new X({size:14,family:"sans-serif"}),haloColor:w.getTextHaloColor(.5),haloSize:2})}),k.removeAll(),k.addMany([p,u,r]);p.geometry=c;u.geometry=n;r.geometry=c?.centroid;r.symbol.text=a?.area??""}}}};z._createClass(d,[{key:"cursor",get:function(){return this._drawActive?"crosshair":null}},{key:"editable",set:function(a){this._set("editable",a);a||this._draw.reset()}}]);return d}(S.InteractiveToolBase);
q.__decorate([t.property()],g.AreaMeasurement2DTool.prototype,"_drawActive",void 0);q.__decorate([t.property({readOnly:!0})],g.AreaMeasurement2DTool.prototype,"cursor",null);q.__decorate([t.property({value:!0})],g.AreaMeasurement2DTool.prototype,"editable",null);q.__decorate([t.property({type:Number})],g.AreaMeasurement2DTool.prototype,"geodesicDistanceThreshold",void 0);q.__decorate([t.property({readOnly:!0})],g.AreaMeasurement2DTool.prototype,"measurement",void 0);q.__decorate([t.property({readOnly:!0})],
g.AreaMeasurement2DTool.prototype,"measurementLabel",void 0);q.__decorate([t.property()],g.AreaMeasurement2DTool.prototype,"messages",void 0);q.__decorate([t.property()],g.AreaMeasurement2DTool.prototype,"unit",void 0);q.__decorate([t.property({constructOnly:!0})],g.AreaMeasurement2DTool.prototype,"view",void 0);g.AreaMeasurement2DTool=q.__decorate([O.subclass("esri.widgets.AreaMeasurement2D.AreaMeasurement2DTool")],g.AreaMeasurement2DTool);g.createAreaMeasurementInfo2D=K;g.createAreaMeasurementLabel=
M;g.isProjectionEngineRequired=L;g.isSupported=function(b){return null!=b};Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});