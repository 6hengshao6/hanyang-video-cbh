// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("require ../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../PopupTemplate ../renderers/ClassBreaksRenderer ../renderers/DictionaryRenderer ../renderers/DotDensityRenderer ../renderers/HeatmapRenderer ../renderers/PieChartRenderer ../renderers/Renderer ../renderers/SimpleRenderer ../renderers/UniqueValueRenderer ../renderers/support/jsonUtils ../renderers/support/types ../request ../symbols ../core/Clonable ../core/Collection ../core/Error ../core/Handles ../core/lang ../core/Logger ../core/maybe ../core/MultiOriginJSONSupport ../core/object ../core/promiseUtils ../core/sql ../core/urlUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/decorators/cast ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../core/accessorSupport/decorators/writer ../core/accessorSupport/extensions/serializableProperty/reader ../form/FormTemplate ../geometry/SpatialReference ./Layer ./graphics/sources/MemorySource ./mixins/APIKeyMixin ./mixins/ArcGISService ./mixins/BlendLayer ./mixins/CustomParametersMixin ./mixins/EditBusLayer ./mixins/FeatureEffectLayer ./mixins/FeatureLayerBase ./mixins/FeatureReductionLayer ./mixins/OperationalLayer ./mixins/OrderedLayer ./mixins/PortalLayer ./mixins/PublishableLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./mixins/TemporalLayer ./support/arcgisLayerUrl ./support/commonProperties ./support/featureLayerUtils ./support/FeatureTemplate ./support/FeatureType ./support/fieldProperties ./support/fieldUtils ./support/LabelClass ./support/labelingInfo ./support/serviceCapabilitiesUtils ./support/TimeInfo ./support/versionUtils ./support/source/DataLayerSource ../renderers/support/styleUtils ../rest/support/FeatureSet ../rest/support/Query ../rest/support/TopFeaturesQuery ../support/popupUtils ../webdoc/support/opacityUtils".split(" "),
function(z,p,f,R,u,Ia,Ja,Ka,La,Ma,S,T,U,I,V,J,e,A,r,W,B,X,v,Y,w,K,Z,C,h,aa,k,ba,D,ca,da,ea,fa,L,ha,ia,ja,ka,la,ma,na,oa,pa,qa,ra,sa,ta,ua,va,E,t,m,M,N,wa,F,xa,O,ya,za,Aa,Ba,Ca,Da,Ea,x,Fa,Ga){function y(c,l){return new r("layer:unsupported",`Layer (${c.title}, ${c.id}) of type '${c.declaredClass}' ${l}`,{layer:c})}function G(c,l,q){c=!!q?.writeLayerSchema;return{enabled:c,ignoreOrigin:c}}const Ha=X.getLogger("esri.layers.FeatureLayer");u=wa.defineFieldProperties();e=function(c){function l(...a){a=
q.call(this,...a);a._handles=new W;a.charts=null;a.copyright=null;a.displayField=null;a.dynamicDataSource=null;a.fields=null;a.fieldsIndex=null;a.formTemplate=null;a.fullExtent=null;a.geometryType=null;a.hasM=void 0;a.hasZ=void 0;a.infoFor3D=null;a.isTable=!1;a.labelsVisible=!0;a.labelingInfo=null;a.legendEnabled=!0;a.objectIdField=null;a.outFields=null;a.path=null;a.popupEnabled=!0;a.popupTemplate=null;a.screenSizePerspectiveEnabled=!0;a.spatialReference=ea.WGS84;a.subtypeCode=null;a.templates=null;
a.timeInfo=null;a.title=null;a.sublayerTitleMode="item-title";a.type="feature";a.typeIdField=null;a.types=null;a.visible=!0;return a}p._inherits(l,c);var q=p._createSuper(l);c=l.prototype;c.destroy=function(){this.source?.destroy();this._handles=v.destroyMaybe(this._handles)};c.normalizeCtorArgs=function(a,b){return"string"===typeof a?{url:a,...b}:a};c.load=function(a){const b=v.isSome(a)?a.signal:null;if(this.portalItem?.loaded&&this.source)return this.addResolvingPromise(this.createGraphicsSource(b).then(g=>
this.initLayerProperties(g))),Promise.resolve(this);const d=this.loadFromPortal({supportedTypes:["Feature Service","Feature Collection"]},a).catch(K.throwIfAbortError).then(async()=>{if(this.url&&null==this.layerId&&/FeatureServer|MapServer\/*$/i.test(this.url)){const g=await this._fetchFirstLayerId(b);null!=g&&(this.layerId=g)}if(!this.url&&!this._hasMemorySource())throw new r("feature-layer:missing-url-or-source","Feature layer must be created with either a url or a source");return this.initLayerProperties(await this.createGraphicsSource(b))}).then(()=>
this._setUserPrivileges(this.serviceItemId,a)).then(()=>m.ensureLayerCredential(this,a));this.addResolvingPromise(d);return Promise.resolve(this)};c.readCapabilities=function(a,b){b=b.layerDefinition||b;return ya.getFeatureLayerCapabilities(b,this.url)};c.readEditingEnabled=function(a,b){return this._readEditingEnabled(b,!1)};c.readEditingEnabledFromWebMap=function(a,b,d){return this._readEditingEnabled(b,!0,d)};c.writeEditingEnabled=function(a,b){this._writeEditingEnabled(a,b,!1)};c.writeEditingEnabledToWebMap=
function(a,b,d,g){this._writeEditingEnabled(a,b,!0,g)};c.readIsTable=function(a,b){b=b?.layerDefinition??b;return"Table"===b.type||!b.geometryType};c.writeIsTable=function(a,b,d,g){g?.writeLayerSchema&&w.setDeepValue(d,a?"Table":"Feature Layer",b)};c.readGlobalIdField=function(a,b){return m.readGlobalIdField(b.layerDefinition||b)};c.readObjectIdField=function(a,b){return m.readObjectIdField(b.layerDefinition||b)};c.readRenderer=function(a,b,d){b=b.layerDefinition||b;if(a=b.drawingInfo?.renderer)return(a=
U.read(a,b,d)??void 0)||Ha.error("Failed to create renderer",{rendererDefinition:b.drawingInfo.renderer,layer:this,context:d}),a;if(b.defaultSymbol)return b.types&&b.types.length?new T({defaultSymbol:H(b.defaultSymbol,b,d),field:b.typeIdField,uniqueValueInfos:b.types.map(g=>({id:g.id,symbol:H(g.symbol,g,d)}))}):new S({symbol:H(b.defaultSymbol,b,d)})};c.castSource=function(a){return a?Array.isArray(a)||a instanceof A?new L.MemorySource({layer:this,items:a}):a:null};c.readSource=function(a,b){a=Da.fromJSON(b.featureSet);
return new L.MemorySource({layer:this,items:a?.features??[]})};c.readTemplates=function(a,b){var d=b.editFieldsInfo;b=d&&d.creatorField;d=d&&d.editorField;a=a&&a.map(g=>M.fromJSON(g));this._fixTemplates(a,b);this._fixTemplates(a,d);return a};c.readTitle=function(a,b){a=b.layerDefinition?.name??b.name;b=b.title||b.layerDefinition&&b.layerDefinition.title;if(a){b=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return this.url?E.titleFromUrlAndName(this.url,a):a;if(!a&&
this.url){const d=E.parse(this.url);v.isSome(d)&&(a=d.title)}if(!a)return;"item-title-and-service-name"===this.sublayerTitleMode&&b&&b!==a&&(a=b+" - "+a);return E.cleanTitle(a)}if("item-title"===this.sublayerTitleMode&&b)return b};c.readTitleFromWebMap=function(a,b){return b.title||b.layerDefinition&&b.layerDefinition.name};c.readTypeIdField=function(a,b){b=b.layerDefinition||b;let d=b.typeIdField;d&&b.fields&&(d=d.toLowerCase(),a=b.fields.find(g=>g.name.toLowerCase()===d))&&(d=a.name);return d};
c.readTypes=function(a,b){b=b.layerDefinition||b;a=b.types;const d=(b=b.editFieldsInfo)&&b.creatorField,g=b&&b.editorField;return a&&a.map(n=>{n=N.fromJSON(n);this._fixTemplates(n.templates,d);this._fixTemplates(n.templates,g);return n})};c.readVisible=function(a,b){if(b.layerDefinition&&null!=b.layerDefinition.defaultVisibility)return!!b.layerDefinition.defaultVisibility;if(null!=b.visibility)return!!b.visibility};c.addAttachment=async function(a,b){return m.addAttachment(this,a,b,"FeatureLayer")};
c.updateAttachment=async function(a,b,d){return m.updateAttachment(this,a,b,d,"FeatureLayer")};c.applyEdits=async function(a,b){return m.applyEdits(this,a,b)};c.on=function(a,b){return p._get(p._getPrototypeOf(l.prototype),"on",this).call(this,a,b)};c.createPopupTemplate=function(a){return Fa.createPopupTemplate(this,a)};c.createGraphicsSource=async function(a){if(this._hasMemorySource()&&this.source)return this.source.load({signal:a});const {default:b}=await K.whenOrAbort(new Promise((d,g)=>z(["./graphics/sources/FeatureLayerSource"],
n=>d(Object.freeze(Object.defineProperty({__proto__:null,default:n},Symbol.toStringTag,{value:"Module"}))),g)),a);return(new b({layer:this})).load({signal:a})};c.createQuery=function(){const a=m.createQuery(this);a.dynamicDataSource=this.dynamicDataSource;var b=v.isSome(this.subtypeCode)?`${this.subtypeField} = ${this.subtypeCode}`:null;b=Z.sqlAnd(this.definitionExpression,b);a.where=b||"1\x3d1";return a};c.deleteAttachments=async function(a,b){return m.deleteAttachments(this,a,b,"FeatureLayer")};
c.fetchRecomputedExtents=async function(a){return m.fetchRecomputedExtents(this,a,"FeatureLayer")};c.getFeatureType=function(a){const {typeIdField:b,types:d}=this;if(!b||!a)return null;const g=a.attributes?a.attributes[b]:void 0;if(null==g)return null;let n=null;d?.some(P=>{const {id:Q}=P;if(null==Q)return!1;Q.toString()===g.toString()&&(n=P);return!!n});return n};c.getFieldDomain=function(a,b){return(b=this.getFeatureType(b?.feature))&&(b=b.domains&&b.domains[a])&&"inherited"!==b.type?b:this._getLayerDomain(a)};
c.getField=function(a){return this.fieldsIndex.get(a)};c.queryAttachments=async function(a,b){return m.queryAttachments(this,a,b,"FeatureLayer")};c.queryFeatures=async function(a,b){const d=await this.load();a=await d.source.queryFeatures(Ea.from(a)??d.createQuery(),b);if(a?.features)for(const g of a.features)g.layer=g.sourceLayer=d;return a};c.queryObjectIds=async function(a,b){return m.queryObjectIds(this,a,b,"FeatureLayer")};c.queryFeatureCount=async function(a,b){return m.queryFeatureCount(this,
a,b,"FeatureLayer")};c.queryExtent=async function(a,b){return m.queryExtent(this,a,b,"FeatureLayer")};c.queryRelatedFeatures=async function(a,b){return m.queryRelatedFeatures(this,a,b,"FeatureLayer")};c.queryRelatedFeaturesCount=async function(a,b){return m.queryRelatedFeaturesCount(this,a,b,"FeatureLayer")};c.queryTopFeatures=async function(a,b){const {source:d,capabilities:g}=await this.load();if(!d.queryTopFeatures||!g?.query?.supportsTopFeaturesQuery)throw new r("FeatureLayer","Layer source does not support queryTopFeatures capability");
a=await d.queryTopFeatures(x.from(a),b);if(a?.features)for(const n of a.features)n.layer=n.sourceLayer=this;return a};c.queryTopObjectIds=async function(a,b){const {source:d,capabilities:g}=await this.load();if(!d.queryTopObjectIds||!g?.query.supportsTopFeaturesQuery)throw new r("FeatureLayer","Layer source does not support queryTopObjectIds capability");return d.queryTopObjectIds(x.from(a),b)};c.queryTopFeaturesExtent=async function(a,b){const {source:d,capabilities:g}=await this.load();if(!d.queryTopExtents||
!g?.query?.supportsTopFeaturesQuery)throw new r("FeatureLayer","Layer source does not support queryTopExtents capability");return d.queryTopExtents(x.from(a),b)};c.queryTopFeatureCount=async function(a,b){const {source:d,capabilities:g}=await this.load();if(!d.queryTopCount||!g?.query?.supportsTopFeaturesQuery)throw new r("FeatureLayer","Layer source does not support queryFeatureCount capability");return d.queryTopCount(x.from(a),b)};c.read=function(a,b){const d=a.featureCollection;if(d){const g=
d.layers;g&&1===g.length&&(p._get(p._getPrototypeOf(l.prototype),"read",this).call(this,g[0],b),null!=d.showLegend&&p._get(p._getPrototypeOf(l.prototype),"read",this).call(this,{showLegend:d.showLegend},b))}p._get(p._getPrototypeOf(l.prototype),"read",this).call(this,a,b);b&&"service"===b.origin&&(this.revert(["objectIdField","fields","timeInfo"],"service"),this.spatialReference||this.revert(["spatialReference"],"service"))};c.write=function(a,b){b={...b,origin:b?.origin??void 0,writeLayerSchema:b?.writeLayerSchema??
this._hasMemorySource()};const {origin:d,layerContainerType:g,messages:n}=b;if(this.dynamicDataSource)return n?.push(y(this,"using a dynamic data source cannot be written to web scenes, web maps and feature service items")),null;if(this.isTable){if("web-scene"===d||"web-map"===d&&"tables"!==g)return n?.push(y(this,"using a table source cannot be written to web scenes and web maps")),null;if(this._hasMemorySource())return n?.push(y(this,"using an in-memory table source cannot be written to web scenes and web maps")),
null}else if(this.loaded&&"web-map"===d&&"tables"===g)return n?.push(y(this,"using a non-table source cannot be written to tables in web maps")),null;return p._get(p._getPrototypeOf(l.prototype),"write",this).call(this,a,b)};c.clone=function(){if(this._hasMemorySource())throw new r("FeatureLayer",`FeatureLayer (title: ${this.title}, id: ${this.id}) created using in-memory source cannot be cloned`);return p._get(p._getPrototypeOf(l.prototype),"clone",this).call(this)};c.serviceSupportsSpatialReference=
function(a){return this.loaded?"memory"===this.source?.type?!0:Aa.serviceSupportsSpatialReference(this,a):!1};c.save=async function(a){return(await new Promise((b,d)=>z(["./save/featureLayerUtils"],b,d))).save(this,a)};c.saveAs=async function(a,b){return(await new Promise((d,g)=>z(["./save/featureLayerUtils"],d,g))).saveAs(this,a,b)};c._readEditingEnabled=function(a,b,d){let g=a.layerDefinition?.capabilities;if(g)return this._hasEditingCapability(g);g=a.capabilities;if(b&&"web-map"===d?.origin&&!this._hasMemorySource()&&
g)return this._hasEditingCapability(g)};c._hasEditingCapability=function(a){return a.toLowerCase().split(",").map(b=>b.trim()).includes("editing")};c._writeEditingEnabled=function(a,b,d,g){a||(a=this.capabilities?.operations?.supportsSync?"Query,Sync":"Query",w.setDeepValue("layerDefinition.capabilities",a,b),d&&!g?.writeLayerSchema&&(b.capabilities=a))};c._getLayerDomain=function(a){return(a=this.fieldsIndex.get(a))?a.domain:null};c._fetchFirstLayerId=function(a){return V(this.url,{query:{f:"json",
...this.customParameters,token:this.apiKey},responseType:"json",signal:a}).then(b=>{if(b=b.data){if(Array.isArray(b.layers)&&0<b.layers.length)return b.layers[0].id;if(Array.isArray(b.tables)&&0<b.tables.length)return b.tables[0].id}})};c.initLayerProperties=async function(a){this._set("source",a);a.sourceJSON&&(this.sourceJSON=a.sourceJSON,this.read(a.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl}));this._verifySource();this._verifyFields();
F.fixRendererFields(this.renderer,this.fieldsIndex);F.fixTimeInfoFields(this.timeInfo,this.fieldsIndex);return Ca.loadStyleRenderer(this,{origin:"service"})};c.hasDataChanged=async function(){return m.hasDataChanged(this)};c.fetchPublishingStatus=async function(){const a=this.source;return a?.fetchPublishingStatus?a.fetchPublishingStatus():"unavailable"};c._verifyFields=function(){const a=this.parsedUrl?.path??"undefined";this.objectIdField||console.log("FeatureLayer: 'objectIdField' property is not defined (url: "+
a+")");this.isTable||this._hasMemorySource()||-1!==a.search(/\/FeatureServer\//i)||this.fields?.some(b=>"geometry"===b.type)||console.log("FeatureLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+a+")")};c._fixTemplates=function(a,b){a&&a.forEach(d=>{(d=d.prototype&&d.prototype.attributes)&&b&&delete d[b]})};c._verifySource=function(){if(this._hasMemorySource()){if(this.url)throw new r("feature-layer:mixed-source-and-url",
"FeatureLayer cannot be created with both an in-memory source and a url");}else if(!this.url)throw new r("feature-layer:source-or-url-required","FeatureLayer requires either a url, a valid portal item or a source");};c._initMemorySource=function(a){a.forEach(b=>{b.layer=this;b.sourceLayer=this});this._handles.add([a.on("after-add",b=>{b.item.layer=this;b.item.sourceLayer=this}),a.on("after-remove",b=>{b.item.layer=null;b.item.sourceLayer=null})],"fl-source")};c._resetMemorySource=function(a){a.forEach(b=>
{b.layer=null;b.sourceLayer=null});this._handles.remove("fl-source")};c._hasMemorySource=function(){return!(this.url||!this.source)};p._createClass(l,[{key:"createQueryVersion",get:function(){this.commitProperty("definitionExpression");this.commitProperty("dynamicDataSource");this.commitProperty("timeExtent");this.commitProperty("timeOffset");this.commitProperty("geometryType");this.commitProperty("gdbVersion");this.commitProperty("historicMoment");this.commitProperty("returnZ");this.commitProperty("capabilities");
this.commitProperty("returnM");return(this._get("createQueryVersion")??0)+1}},{key:"editingEnabled",get:function(){return this.loaded&&!this.capabilities?.operations.supportsEditing?!1:this._isOverridden("editingEnabled")?this._get("editingEnabled"):this._hasMemorySource()||this.userHasEditingPrivileges},set:function(a){this._overrideIfSome("editingEnabled",a)}},{key:"effectiveEditingEnabled",get:function(){return m.computeEffectiveEditingEnabled(this)}},{key:"parsedUrl",get:function(){const a=C.urlToObject(this.url);
null!=a&&(null!=this.dynamicDataSource?a.path=C.join(a.path,"dynamicLayer"):null!=this.layerId&&(a.path=C.join(a.path,this.layerId.toString())));return a}},{key:"defaultPopupTemplate",get:function(){return this.createPopupTemplate()}},{key:"renderer",set:function(a){F.fixRendererFields(a,this.fieldsIndex);this._set("renderer",a)}},{key:"source",set:function(a){const b=this._get("source");b!==a&&(b&&b instanceof A&&this._resetMemorySource(b),a&&a instanceof A&&this._initMemorySource(a),this._set("source",
a))}}]);return l}(na.FeatureLayerBase(oa.FeatureReductionLayer(ma.FeatureEffectLayer(sa.PublishableLayer(la.EditBusLayer(ja.BlendLayer(qa.OrderedLayer(va.TemporalLayer(ua.ScaleRangeLayer(ta.RefreshableLayer(ia.ArcGISService(pa.OperationalLayer(ra.PortalLayer(Y.MultiOriginJSONMixin(ka.CustomParametersMixin(ha.APIKeyMixin(e.ClonableMixin(fa))))))))))))))))));f.__decorate([k.reader("service","capabilities")],e.prototype,"readCapabilities",null);f.__decorate([h.property({json:{origins:{"portal-item":{write:!0},
"web-map":{write:!0}}}})],e.prototype,"charts",void 0);f.__decorate([h.property({readOnly:!0})],e.prototype,"createQueryVersion",null);f.__decorate([h.property({json:{read:{source:"layerDefinition.copyrightText"}}})],e.prototype,"copyright",void 0);f.__decorate([h.property({json:{read:{source:"layerDefinition.displayField"}}})],e.prototype,"displayField",void 0);f.__decorate([h.property({types:J.symbolTypes,readOnly:!0})],e.prototype,"defaultSymbol",void 0);f.__decorate([h.property({type:Ba.DataLayerSource})],
e.prototype,"dynamicDataSource",void 0);f.__decorate([h.property({type:Boolean})],e.prototype,"editingEnabled",null);f.__decorate([k.reader(["portal-item","web-scene"],"editingEnabled",["layerDefinition.capabilities"])],e.prototype,"readEditingEnabled",null);f.__decorate([k.reader("web-map","editingEnabled",["capabilities","layerDefinition.capabilities"])],e.prototype,"readEditingEnabledFromWebMap",null);f.__decorate([D.writer(["portal-item","web-scene"],"editingEnabled",{"layerDefinition.capabilities":{type:String}})],
e.prototype,"writeEditingEnabled",null);f.__decorate([D.writer("web-map","editingEnabled",{capabilities:{type:String},"layerDefinition.capabilities":{type:String}})],e.prototype,"writeEditingEnabledToWebMap",null);f.__decorate([h.property({readOnly:!0})],e.prototype,"effectiveEditingEnabled",null);f.__decorate([h.property({...u.fields,json:{read:{source:"layerDefinition.fields"},origins:{service:{name:"fields"},"web-map":{write:{target:"layerDefinition.fields",overridePolicy:G}}}}})],e.prototype,
"fields",void 0);f.__decorate([h.property(u.fieldsIndex)],e.prototype,"fieldsIndex",void 0);f.__decorate([h.property({type:da,json:{name:"formInfo",write:!0,origins:{"web-scene":{read:!1,write:!1}}}})],e.prototype,"formTemplate",void 0);f.__decorate([h.property({json:{read:{source:"layerDefinition.extent"}}})],e.prototype,"fullExtent",void 0);f.__decorate([h.property({json:{origins:{"web-map":{write:{target:"layerDefinition.geometryType",overridePolicy:G,writer(c,l,q){(c=c?m.geometryTypeKebabDict.toJSON(c):
null)&&w.setDeepValue(q,c,l)}}}},read:{source:"layerDefinition.geometryType",reader:m.geometryTypeKebabDict.read}}})],e.prototype,"geometryType",void 0);f.__decorate([h.property({json:{read:{source:"layerDefinition.hasM"}}})],e.prototype,"hasM",void 0);f.__decorate([h.property({json:{read:{source:"layerDefinition.hasZ"}}})],e.prototype,"hasZ",void 0);f.__decorate([h.property(t.id)],e.prototype,"id",void 0);f.__decorate([h.property({readOnly:!0,json:{origins:{service:{read:!0}},read:!1}})],e.prototype,
"infoFor3D",void 0);f.__decorate([h.property({json:{origins:{"web-map":{write:{target:"layerDefinition.type"}}}}})],e.prototype,"isTable",void 0);f.__decorate([k.reader("service","isTable",["type","geometryType"]),k.reader("isTable",["layerDefinition.type","layerDefinition.geometryType"])],e.prototype,"readIsTable",null);f.__decorate([D.writer("web-map","isTable")],e.prototype,"writeIsTable",null);f.__decorate([h.property(t.labelsVisible)],e.prototype,"labelsVisible",void 0);f.__decorate([h.property({type:[xa],
json:{origins:{service:{read:{source:"drawingInfo.labelingInfo",reader:O.reader},write:{target:"drawingInfo.labelingInfo",enabled:!1}}},read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:O.reader},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],e.prototype,"labelingInfo",void 0);f.__decorate([h.property((()=>{const c=B.clone(t.opacityDrawingInfo);c.json.origins["portal-item"]={write:{target:"layerDefinition.drawingInfo.transparency",writer(l,q,a){w.setDeepValue(a,Ga.opacityToTransparency(l),
q)}}};return c})())],e.prototype,"opacity",void 0);f.__decorate([h.property(t.legendEnabled)],e.prototype,"legendEnabled",void 0);f.__decorate([h.property({type:["show","hide"],json:(()=>{const c=B.clone(t.listMode.json);c.origins["portal-item"]={read:!1,write:!1};return c})()})],e.prototype,"listMode",void 0);f.__decorate([k.reader("globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],e.prototype,"readGlobalIdField",null);f.__decorate([h.property({json:{origins:{"web-map":{write:{target:"layerDefinition.objectIdField",
overridePolicy:G}}}}})],e.prototype,"objectIdField",void 0);f.__decorate([k.reader("objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],e.prototype,"readObjectIdField",null);f.__decorate([h.property({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],e.prototype,"operationalLayerType",void 0);f.__decorate([h.property(u.outFields)],e.prototype,"outFields",void 0);f.__decorate([h.property({readOnly:!0})],e.prototype,"parsedUrl",null);f.__decorate([h.property({type:String,
json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],e.prototype,"path",void 0);f.__decorate([h.property(t.popupEnabled)],e.prototype,"popupEnabled",void 0);f.__decorate([h.property({type:R,json:{name:"popupInfo",write:!0}})],e.prototype,"popupTemplate",void 0);f.__decorate([h.property({readOnly:!0})],e.prototype,"defaultPopupTemplate",null);f.__decorate([h.property({types:I.rendererTypes,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{types:I.webSceneRendererTypes,
name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(c,l,q){return{ignoreOrigin:q?.writeLayerSchema}}}}},write:{target:"layerDefinition.drawingInfo.renderer",overridePolicy(c,l,q){return{ignoreOrigin:q?.writeLayerSchema}}}}})],e.prototype,"renderer",null);f.__decorate([k.reader("service","renderer",["drawingInfo.renderer","defaultSymbol"]),k.reader("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],e.prototype,"readRenderer",null);f.__decorate([h.property((()=>
{const c=B.clone(t.screenSizePerspectiveEnabled);c.json.origins["portal-item"]={read:!1,write:!1};return c})())],e.prototype,"screenSizePerspectiveEnabled",void 0);f.__decorate([h.property({clonable:!1})],e.prototype,"source",null);f.__decorate([aa.cast("source")],e.prototype,"castSource",null);f.__decorate([k.reader("portal-item","source",["featureSet"]),k.reader("web-map","source",["featureSet"])],e.prototype,"readSource",null);f.__decorate([h.property({json:{read:{source:"layerDefinition.extent.spatialReference"}}})],
e.prototype,"spatialReference",void 0);f.__decorate([h.property({type:Number})],e.prototype,"subtypeCode",void 0);f.__decorate([h.property({type:[M]})],e.prototype,"templates",void 0);f.__decorate([k.reader("templates",["editFieldsInfo","creatorField","editorField","templates"])],e.prototype,"readTemplates",null);f.__decorate([h.property({type:za})],e.prototype,"timeInfo",void 0);f.__decorate([h.property()],e.prototype,"title",void 0);f.__decorate([k.reader("service","title",["name"]),k.reader("portal-item",
"title",["layerDefinition.title","layerDefinition.name","title"])],e.prototype,"readTitle",null);f.__decorate([k.reader("web-map","title",["layerDefinition.name","title"])],e.prototype,"readTitleFromWebMap",null);f.__decorate([h.property({type:String})],e.prototype,"sublayerTitleMode",void 0);f.__decorate([h.property({json:{read:!1}})],e.prototype,"type",void 0);f.__decorate([h.property({type:String})],e.prototype,"typeIdField",void 0);f.__decorate([k.reader("service","typeIdField"),k.reader("typeIdField",
["layerDefinition.typeIdField"])],e.prototype,"readTypeIdField",null);f.__decorate([h.property({type:[N]})],e.prototype,"types",void 0);f.__decorate([k.reader("service","types",["types"]),k.reader("types",["layerDefinition.types"])],e.prototype,"readTypes",null);f.__decorate([h.property({type:Boolean,json:{origins:{"portal-item":{write:{target:"layerDefinition.defaultVisibility"}}}}})],e.prototype,"visible",void 0);f.__decorate([k.reader("portal-item","visible",["visibility","layerDefinition.defaultVisibility"])],
e.prototype,"readVisible",null);e=f.__decorate([ba.subclass("esri.layers.FeatureLayer")],e);const H=ca.createTypeReader({types:J.symbolTypesRenderer});return e});