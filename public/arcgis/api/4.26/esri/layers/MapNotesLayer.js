// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../geometry ../Graphic ../symbols ../core/Collection ../core/Error ../core/lang ../core/maybe ../core/MultiOriginJSONSupport ../core/object ../core/Warning ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../core/accessorSupport/decorators/writer ../geometry/projection ../geometry/support/aaBoundingRect ../geometry/support/normalizeUtils ../geometry/support/spatialReferenceUtils ./FeatureLayer ./GraphicsLayer ./Layer ./graphics/objectIdUtils ./mixins/BlendLayer ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/ScaleRangeLayer ./support/Field ../symbols/SimpleFillSymbol ../symbols/SimpleLineSymbol ../symbols/SimpleMarkerSymbol ../symbols/TextSymbol ../geometry/SpatialReference ../geometry/Extent".split(" "),
function(u,d,e,M,ia,B,N,C,l,O,P,F,g,ja,x,G,Q,w,p,R,S,T,U,V,W,X,Y,Z,aa,H,ba,ca,I,da,z,ea){function A(h){return"markup"===h.featureCollectionType||h.layers.some(m=>null!=m.layerDefinition.visibilityField||!J(m))}function J({layerDefinition:h,featureSet:m}){const y=h.geometryType??m.geometryType;return D.find(b=>y===b.geometryTypeJSON&&h.drawingInfo?.renderer?.symbol?.type===b.identifyingSymbol.type)}function K(){return new ea({xmin:-180,ymin:-90,xmax:180,ymax:90})}const L=new H({name:"OBJECTID",alias:"OBJECTID",
type:"oid",nullable:!1,editable:!1}),fa=new H({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0});let r=function(h){function m(b){b=y.call(this,b);b.visibilityMode="inherited";return b}u._inherits(m,h);var y=u._createSuper(m);m.prototype.initialize=function(){for(const b of this.graphics)b.sourceLayer=this.layer;this.graphics.on("after-add",b=>{b.item.sourceLayer=this.layer});this.graphics.on("after-remove",b=>{b.item.sourceLayer=null})};u._createClass(m,[{key:"fullExtent",get:function(){const b=
this.layer?.spatialReference,a=this.fullBounds;return b?l.isNone(a)?w.projectOrLoad(K(),b).geometry:p.toExtent(a,b):null}},{key:"fullBounds",get:function(){const b=this.layer?.spatialReference;if(!b)return null;const a=p.empty();this.graphics.forEach(c=>{c=l.isSome(c.geometry)?w.projectOrLoad(c.geometry,b).geometry:null;l.isSome(c)&&p.expand(a,"point"===c.type?c:c.extent,a)});return p.equals(a,p.NEGATIVE_INFINITY)?null:a}},{key:"sublayers",get:function(){return this.graphics}}]);return m}(U);d.__decorate([g.property({readOnly:!0})],
r.prototype,"fullExtent",null);d.__decorate([g.property({readOnly:!0})],r.prototype,"fullBounds",null);d.__decorate([g.property({readOnly:!0})],r.prototype,"sublayers",null);d.__decorate([g.property()],r.prototype,"layer",void 0);d.__decorate([g.property()],r.prototype,"layerId",void 0);d.__decorate([g.property({readOnly:!0})],r.prototype,"visibilityMode",void 0);r=d.__decorate([G.subclass("esri.layers.MapNotesLayer.MapNotesSublayer")],r);const D=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",
id:"polygonLayer",layerId:0,title:"Polygons",identifyingSymbol:(new ba).toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",id:"polylineLayer",layerId:1,title:"Polylines",identifyingSymbol:(new ca).toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",id:"multipointLayer",layerId:2,title:"Multipoints",identifyingSymbol:(new I).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"pointLayer",layerId:3,title:"Points",identifyingSymbol:(new I).toJSON()},
{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"textLayer",layerId:4,title:"Text",identifyingSymbol:(new da).toJSON()}];e=function(h){function m(b){var a=y.call(this,b);a.capabilities={operations:{supportsMapNotesEditing:!0}};a.featureCollections=null;a.featureCollectionJSON=null;a.featureCollectionType="notes";a.legendEnabled=!1;a.listMode="hide-children";a.minScale=0;a.maxScale=0;a.spatialReference=z.WGS84;a.sublayers=new B(D.map(c=>new r({id:c.id,layerId:c.layerId,title:c.title,
layer:u._assertThisInitialized(a)})));a.title="Map Notes";a.type="map-notes";a.visibilityMode="inherited";return a}u._inherits(m,h);var y=u._createSuper(m);h=m.prototype;h.readCapabilities=function(b,a,c){return{operations:{supportsMapNotesEditing:!A(a)&&"portal-item"!==c?.origin}}};h.readFeatureCollections=function(b,a,c){if(!A(a))return null;b=a.layers.map(k=>{const f=new T;f.read(k,c);return f});return new B({items:b})};h.readLegacyfeatureCollectionJSON=function(b,a){return A(a)?C.clone(a.featureCollection):
null};h.readMinScale=function(b,a){for(const c of a.layers)if(null!=c.layerDefinition.minScale)return c.layerDefinition.minScale;return 0};h.readMaxScale=function(b,a){for(const c of a.layers)if(null!=c.layerDefinition.maxScale)return c.layerDefinition.maxScale;return 0};h.readSpatialReference=function(b,a){return a.layers.length?z.fromJSON(a.layers[0].layerDefinition.spatialReference):z.WGS84};h.readSublayers=function(b,a,c){if(A(a))return null;b=[];c=a.layers.reduce((k,f)=>Math.max(k,f.layerDefinition.id??
-1),-1)+1;for(const k of a.layers){const {layerDefinition:f,featureSet:n}=k;a=f.id??c++;const t=J(k);l.isSome(t)&&(a=new r({id:t.id,title:f.name,layerId:a,layer:this,graphics:n.features.map(({geometry:v,symbol:q,attributes:E,popupInfo:ha})=>M.fromJSON({attributes:E,geometry:v,symbol:q,popupTemplate:ha}))}),b.push(a))}return new B(b)};h.writeSublayers=function(b,a,c,k){const {minScale:f,maxScale:n}=this;if(!l.isNone(b))if(c=b.some(q=>0<q.graphics.length),this.capabilities.operations.supportsMapNotesEditing){c=
[];var t=this.spatialReference.toJSON();a:for(var v of b)for(const q of v.graphics)if(l.isSome(q.geometry)){t=q.geometry.spatialReference.toJSON();break a}for(const q of D)v=b.find(E=>q.id===E.id),this._writeMapNoteSublayer(c,v,q,f,n,t,k);P.setDeepValue("featureCollection.layers",c,a)}else c&&k?.messages?.push(new N("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer"))};h.load=function(b){this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},
b));return Promise.resolve(this)};h.read=function(b,a){"featureCollection"in b&&(b=C.clone(b),Object.assign(b,b.featureCollection));u._get(u._getPrototypeOf(m.prototype),"read",this).call(this,b,a)};h.beforeSave=async function(){if(!l.isNone(this.sublayers)){var b=null,a=[];for(const k of this.sublayers)for(const f of k.graphics)if(l.isSome(f.geometry)){const n=f.geometry;b?S.equals(n.spatialReference,b)||(w.canProjectWithoutEngine(n.spatialReference,b)||w.isLoaded()||await w.load(),f.geometry=w.project(n,
b)):b=n.spatialReference;a.push(f)}var c=await R.normalizeCentralMeridian(a.map(k=>k.geometry));a.forEach((k,f)=>k.geometry=c[f])}};h._findSublayer=function(b){return l.isNone(this.sublayers)?null:this.sublayers?.find(a=>a.id===b)??null};h._writeMapNoteSublayer=function(b,a,c,k,f,n,t){const v=[];if(!l.isNone(a)){for(const q of a.graphics)this._writeMapNote(v,q,c.geometryType,t);this._normalizeObjectIds(v,L);b.push({layerDefinition:{name:a.title,drawingInfo:{renderer:{type:"simple",symbol:C.clone(c.identifyingSymbol)}},
id:a.layerId,geometryType:c.geometryTypeJSON,minScale:k,maxScale:f,objectIdField:"OBJECTID",fields:[L.toJSON(),fa.toJSON()],spatialReference:n},featureSet:{features:v,geometryType:c.geometryTypeJSON}})}};h._writeMapNote=function(b,a,c,k){if(!l.isNone(a)){var {geometry:f,symbol:n,popupTemplate:t}=a;l.isNone(f)||(f.type!==c?k?.messages?.push(new F("map-notes-layer:invalid-geometry-type",`Geometry "${f.type}" cannot be saved in "${c}" layer`,{graphic:a})):l.isNone(n)?k?.messages?.push(new F("map-notes-layer:no-symbol",
"Skipping map notes with no symbol",{graphic:a})):(a={attributes:{...a.attributes},geometry:f.toJSON(),symbol:n.toJSON()},l.isSome(t)&&(a.popupInfo=t.toJSON()),b.push(a)))}};h._normalizeObjectIds=function(b,a){a=a.name;let c=W.findLastObjectIdFromFeatures(a,b)+1;const k=new Set;for(const f of b){f.attributes||(f.attributes={});({attributes:b}=f);if(null==b[a]||k.has(b[a]))b[a]=c++;k.add(b[a])}};u._createClass(m,[{key:"fullExtent",get:function(){const b=this.spatialReference,a=p.empty();l.isSome(this.sublayers)?
this.sublayers.forEach(({fullBounds:c})=>l.isSome(c)?p.expand(a,c,a):a,a):this.featureCollectionJSON?.layers.some(c=>c.layerDefinition.extent)&&this.featureCollectionJSON.layers.forEach(c=>{c=w.projectOrLoad(c.layerDefinition.extent,b).geometry;l.isSome(c)&&p.expand(a,c,a)});return p.equals(a,p.NEGATIVE_INFINITY)?w.projectOrLoad(K(),b).geometry:p.toExtent(a,b)}},{key:"multipointLayer",get:function(){return this._findSublayer("multipointLayer")}},{key:"pointLayer",get:function(){return this._findSublayer("pointLayer")}},
{key:"polygonLayer",get:function(){return this._findSublayer("polygonLayer")}},{key:"polylineLayer",get:function(){return this._findSublayer("polylineLayer")}},{key:"textLayer",get:function(){return this._findSublayer("textLayer")}}]);return m}(X.BlendLayer(aa.ScaleRangeLayer(Y.OperationalLayer(Z.PortalLayer(O.MultiOriginJSONMixin(V))))));d.__decorate([g.property({readOnly:!0})],e.prototype,"capabilities",void 0);d.__decorate([x.reader(["portal-item","web-map"],"capabilities",["layers"])],e.prototype,
"readCapabilities",null);d.__decorate([g.property({readOnly:!0})],e.prototype,"featureCollections",void 0);d.__decorate([x.reader(["web-map","portal-item"],"featureCollections",["layers"])],e.prototype,"readFeatureCollections",null);d.__decorate([g.property({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],e.prototype,"featureCollectionJSON",void 0);d.__decorate([x.reader(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],e.prototype,
"readLegacyfeatureCollectionJSON",null);d.__decorate([g.property({readOnly:!0,json:{read:!0,write:{enabled:!0,ignoreOrigin:!0}}})],e.prototype,"featureCollectionType",void 0);d.__decorate([g.property({readOnly:!0})],e.prototype,"fullExtent",null);d.__decorate([g.property({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return{enabled:null!=this.featureCollectionJSON}}}}}}})],e.prototype,"legendEnabled",void 0);d.__decorate([g.property({type:["show",
"hide","hide-children"]})],e.prototype,"listMode",void 0);d.__decorate([g.property({type:Number,nonNullable:!0,json:{write:!1}})],e.prototype,"minScale",void 0);d.__decorate([x.reader(["web-map","portal-item"],"minScale",["layers"])],e.prototype,"readMinScale",null);d.__decorate([g.property({type:Number,nonNullable:!0,json:{write:!1}})],e.prototype,"maxScale",void 0);d.__decorate([x.reader(["web-map","portal-item"],"maxScale",["layers"])],e.prototype,"readMaxScale",null);d.__decorate([g.property({readOnly:!0})],
e.prototype,"multipointLayer",null);d.__decorate([g.property({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],e.prototype,"operationalLayerType",void 0);d.__decorate([g.property({readOnly:!0})],e.prototype,"pointLayer",null);d.__decorate([g.property({readOnly:!0})],e.prototype,"polygonLayer",null);d.__decorate([g.property({readOnly:!0})],e.prototype,"polylineLayer",null);d.__decorate([g.property({type:z})],e.prototype,"spatialReference",void 0);d.__decorate([x.reader(["web-map","portal-item"],
"spatialReference",["layers"])],e.prototype,"readSpatialReference",null);d.__decorate([g.property({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],e.prototype,"sublayers",void 0);d.__decorate([x.reader("web-map","sublayers",["layers"])],e.prototype,"readSublayers",null);d.__decorate([Q.writer("web-map","sublayers")],e.prototype,"writeSublayers",null);d.__decorate([g.property({readOnly:!0})],e.prototype,"textLayer",null);d.__decorate([g.property()],e.prototype,"title",void 0);d.__decorate([g.property({readOnly:!0,
json:{read:!1}})],e.prototype,"type",void 0);return e=d.__decorate([G.subclass("esri.layers.MapNotesLayer")],e)});