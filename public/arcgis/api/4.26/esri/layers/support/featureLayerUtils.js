// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("require exports ../../kernel ../../core/Error ../../core/jsonMap ../../core/maybe ../../core/sql ./layerUtils ../../rest/support/AttachmentQuery ../../rest/support/Query ../../rest/support/RelationshipQuery".split(" "),function(v,f,l,g,n,q,w,x,y,m,r){function p(a,b,d){const {attributes:c}=b,{objectIdField:e}=a;return a.get("capabilities.data.supportsAttachment")?b?c?e&&c[e]?Promise.resolve():Promise.reject(new g(d,`feature is missing the identifying attribute ${e}`)):Promise.reject(new g(d,
"'attributes' are required on a feature to query attachments")):Promise.reject(new g(d,"A feature is required to add/delete/update attachments")):Promise.reject(new g(d,"this layer doesn't support attachments"))}async function k(a){return(await a.load()).source}async function z(a,b){if(l.id&&!l.id.findCredential(a)){var d;try{const c=await x.getOwningPortalUrl(a,b);c&&(d=await l.id.checkSignInStatus(`${c}/sharing`))}catch(c){}if(d)try{const c=q.isSome(b)?b.signal:null;await l.id.getCredential(a,{signal:c})}catch(c){}}}
n=new n.JSONMap({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryMultiPatch:"multipatch"});f.addAttachment=async function(a,b,d,c){const e=await k(a);await p(a,b,c);if(!e.addAttachment)throw new g(c,"Layer source does not support addAttachment capability");return e.addAttachment(b,d)};f.applyEdits=async function(a,b,d){const c=await new Promise((e,h)=>v(["../graphics/editingSupport"],e,h));a=await a.load();return c.applyEdits(a,
a.source,b,d)};f.computeEffectiveEditingEnabled=function(a){return a.sourceJSON?.isMultiServicesView?!1:a.userHasUpdateItemPrivileges||a.editingEnabled};f.createQuery=function(a){const b=new m,d=a.get("capabilities.data"),c=a.get("capabilities.query");b.historicMoment=a.historicMoment;b.gdbVersion=a.gdbVersion;b.returnGeometry=!0;c&&(b.compactGeometryEnabled=c.supportsCompactGeometry,b.defaultSpatialReferenceEnabled=c.supportsDefaultSpatialReference);d&&(d.supportsZ&&null!=a.returnZ&&(b.returnZ=a.returnZ),
d.supportsM&&null!=a.returnM&&(b.returnM=a.returnM));b.outFields=["*"];const {timeOffset:e,timeExtent:h}=a;b.timeExtent=null!=e&&null!=h?h.offset(-e.value,e.unit):h||null;b.multipatchOption="multipatch"===a.geometryType?"xyFootprint":null;return b};f.deleteAttachments=async function(a,b,d,c){const e=await k(a);await p(a,b,c);if(!e.deleteAttachments)throw new g(c,"Layer source does not support deleteAttachments capability");return e.deleteAttachments(b,d)};f.ensureLayerCredential=async function(a,
b){const d=a.parsedUrl?.path;if(d){var c=a.editFieldsInfo;(a.userHasUpdateItemPrivileges||a.userHasFullEditingPrivileges&&a.capabilities.operations.supportsEditing||c?.creatorField||c?.editorField)&&await z(d,b)}};f.fetchRecomputedExtents=async function(a,b,d){a=(await a.load({signal:b?.signal})).source;if(!a.fetchRecomputedExtents)throw new g(d,"Layer source does not support fetchUpdates capability");return a.fetchRecomputedExtents(b)};f.geometryTypeKebabDict=n;f.hasDataChanged=async function(a){const b=
a.source;if(b?.refresh)try{const {dataChanged:d,updates:c}=await b.refresh();q.isSome(c)&&(a.sourceJSON={...a.sourceJSON,...c},a.read(c,{origin:"service",url:a.parsedUrl}));if(d)return!0}catch{}if(a.definitionExpression)try{return(await w.parseWhereClause(a.definitionExpression,a.fieldsIndex)).hasDateFunctions}catch{}return!1};f.queryAttachments=async function(a,b,d,c){b=y.from(b);await a.load();d=a.source;a=a.capabilities;if(!a?.data?.supportsAttachment)throw new g(c,"this layer doesn't support attachments");
const {attachmentTypes:e,objectIds:h,globalIds:t,num:A,size:B,start:C,where:u}=b;if(!a?.operations?.supportsQueryAttachments&&(0<e?.length||0<t?.length||0<B?.length||A||C||u))throw new g(c,"when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",b);if(!(h?.length||t?.length||u))throw new g(c,"'objectIds', 'globalIds', or 'where' are required to perform attachment query",b);if(!d.queryAttachments)throw new g(c,"Layer source does not support queryAttachments capability",
b);return d.queryAttachments(b)};f.queryExtent=async function(a,b,d,c){const e=await k(a);if(!e.queryExtent)throw new g(c,"Layer source does not support queryExtent capability");return e.queryExtent(m.from(b)??a.createQuery(),d)};f.queryFeatureCount=async function(a,b,d,c){const e=await k(a);if(!e.queryFeatureCount)throw new g(c,"Layer source does not support queryFeatureCount capability");return e.queryFeatureCount(m.from(b)??a.createQuery(),d)};f.queryObjectIds=async function(a,b,d,c){const e=await k(a);
if(!e.queryObjectIds)throw new g(c,"Layer source does not support queryObjectIds capability");return e.queryObjectIds(m.from(b)??a.createQuery(),d)};f.queryRelatedFeatures=async function(a,b,d,c){a=await k(a);if(!a.queryRelatedFeatures)throw new g(c,"Layer source does not support queryRelatedFeatures capability");return a.queryRelatedFeatures(r.from(b),d)};f.queryRelatedFeaturesCount=async function(a,b,d,c){a=await k(a);if(!a.queryRelatedFeaturesCount)throw new g(c,"Layer source does not support queryRelatedFeaturesCount capability");
return a.queryRelatedFeaturesCount(r.from(b),d)};f.readGlobalIdField=function(a){const {globalIdField:b,fields:d}=a;if(b)return b;if(d)for(const c of d)if("esriFieldTypeGlobalID"===c.type)return c.name};f.readObjectIdField=function(a){const {objectIdField:b,fields:d}=a;if(b)return b;if(d)for(const c of d)if("esriFieldTypeOID"===c.type)return c.name};f.readVersion=function(a){return a.currentVersion?a.currentVersion:a.hasOwnProperty("capabilities")||a.hasOwnProperty("drawingInfo")||a.hasOwnProperty("hasAttachments")||
a.hasOwnProperty("htmlPopupType")||a.hasOwnProperty("relationships")||a.hasOwnProperty("timeInfo")||a.hasOwnProperty("typeIdField")||a.hasOwnProperty("types")?10:9.3};f.updateAttachment=async function(a,b,d,c,e){const h=await k(a);await p(a,b,e);if(!h.updateAttachment)throw new g(e,"Layer source does not support updateAttachment capability");return h.updateAttachment(b,d,c)};Object.defineProperty(f,Symbol.toStringTag,{value:"Module"})});