// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../geometry ../../../core/Error ../../../core/maybe ../../../core/urlUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ../RasterInfo ../RasterStorageInfo ../serviceTileInfoProperty ../TileInfo ../TilemapCache ./BaseRaster ../rasterFunctions/pixelUtils ../rasterTransforms/GCSShiftTransform ../../../rest/imageService/fetchRasterInfo ../../../geometry/SpatialReference ../../../geometry/Point ../../../geometry/Extent".split(" "),
function(A,B,u,C,t,E,D,W,X,Y,F,G,H,I,J,K,L,M,N,O,P,Q,R){u=function(m){function v(){var a=S.apply(this,arguments);a._levelOffset=0;a._tilemapCache=null;a._slices=null;a.datasetFormat="RasterTileServer";a.tileType=null;return a}A._inherits(v,m);var S=A._createSuper(v);m=v.prototype;m.open=async function(a){await this.init();var b=a&&a.signal;a=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:b});a.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));this.sourceJSON=
a=a.data;if(!a)throw new C("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!a.tileInfo)throw new C("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();var c="jpg jpeg png png8 png24 png32 mixed".split(" ");this.tileType=a.cacheType;null==this.tileType&&(c.includes(a.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===a.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster");
this.datasetName=a.name?.slice(a.name.indexOf("/")+1)??"";b=await this._fetchRasterInfo({signal:b});if(t.isNone(b))throw new C("image-server-raster:open","cannot initialize image service");c="Map"===this.tileType?I.readServiceTileInfo(a.tileInfo,a):J.fromJSON(a.tileInfo);t.assertIsSome(c);const [d,e]=this._computeMinMaxLOD(b,c),{extent:h,pixelSize:f}=b,k=.5/b.width*f.x,g=Math.max(f.x,f.y),{lods:n}=c;if("Map"!==this.tileType&&0!==a.maxScale||Math.abs(f.x-f.y)>k||!n.some(p=>Math.abs(p.resolution-g)<
k))f.x=f.y=d.resolution,b.width=Math.ceil((h.xmax-h.xmin)/f.x-.1),b.height=Math.ceil((h.ymax-h.ymin)/f.y-.1);const r=d.level-e.level,[w,x]=c.size,q=[],l=[];n.forEach((p,y)=>{p.level>=e.level&&p.level<=d.level&&q.push({x:p.resolution,y:p.resolution});y<n.length-1&&l.push(Math.round(10*p.resolution/n[y+1].resolution)/10)});q.sort((p,y)=>p.x-y.x);const T=this.computeBlockBoundary(h,w,x,c.origin,q,r),U=1<q.length?q.slice(1):null;var z;a.transposeInfo&&(z={tileSize:[a.transposeInfo.rows,a.transposeInfo.cols],
packetSize:b.keyProperties?._yxs.PacketSize??0});const V=1>=l.length||3<=l.length&&l.slice(0,l.length-1).every(p=>p===l[0])?l[0]??2:Math.round(10/(e.resolution/d.resolution)**(-1/r))/10;b.storageInfo=new H({blockWidth:c.size[0],blockHeight:c.size[1],pyramidBlockWidth:c.size[0],pyramidBlockHeight:c.size[1],pyramidResolutions:U,pyramidScalingFactor:V,compression:c.format,origin:c.origin,firstPyramidLevel:1,maximumPyramidLevel:r,tileInfo:c,transposeInfo:z,blockBoundary:T});this._fixGCSShift(b);this._set("rasterInfo",
b);a.capabilities.toLowerCase().includes("tilemap")&&(z={tileInfo:b.storageInfo.tileInfo,parsedUrl:E.urlToObject(this.url),url:this.url,tileServers:[],type:"tile"},this._tilemapCache=new K.TilemapCache({layer:z}))};m.fetchRawTile=async function(a,b,c,d={}){const {storageInfo:e,extent:h}=this.rasterInfo;var {transposeInfo:f}=e,k=t.isSome(f)&&!!d.transposedVariableName;if(this._slices&&!k&&null==d.sliceId)return null;({data:d}=await this.request(`${this.url}/tile/${k?0:e.maximumPyramidLevel-a+this._levelOffset}/${b}/${c}`,
{query:this._slices?k?{variable:d.transposedVariableName}:{sliceId:d.sliceId||0}:null,responseType:"array-buffer",signal:d.signal}));if(!d)return null;f=k?f.tileSize:e.tileInfo.size;k=await this.decodePixelBlock(d,{width:f[0],height:f[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType,returnInterleaved:k,noDataValue:t.unwrap(this.rasterInfo.noDataValue)});if(null==k)return null;f=e.blockBoundary[a];if("jpg"!==e.compression||c>f.minCol&&c<f.maxCol&&b>f.minRow&&b<f.maxRow)return k;const {origin:g,
blockWidth:n,blockHeight:r}=e,{x:w,y:x}=this.getPyramidPixelSize(a);var q=Math.round((h.xmin-g.x)/w)%n;a=Math.round((h.xmax-g.x)/w)%n||n;var l=Math.round((g.y-h.ymax)/x)%r;d=Math.round((g.y-h.ymin)/x)%r||r;q=c===f.minCol?q:0;l=b===f.minRow?l:0;M.setValidBoundary(k,{x:q,y:l},{width:(c===f.maxCol?a:n)-q,height:(b===f.maxRow?d:r)-l});return k};m.getSliceIndex=function(a){if(!this._slices||t.isNone(a)||0===a.length)return null;for(let b=0;b<this._slices.length;b++){const c=this._slices[b].multidimensionalDefinition;
if(c.length===a.length&&!c.some(d=>{var e=a.find(f=>d.variableName===f.variableName&&f.dimensionName===d.dimensionName);if(!e)return!0;const h=Array.isArray(d.values[0])?`${d.values[0][0]}-${d.values[0][1]}`:d.values[0];e=Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0];return h!==e}))return b}return null};m.fetchVariableStatisticsHistograms=async function(a,b){var c=this.request(this.url+"/statistics",{query:{variable:a,f:"json"},signal:b}).then(d=>d.data?.statistics);
a=this.request(this.url+"/histograms",{query:{variable:a,f:"json"},signal:b}).then(d=>d.data?.histograms);c=await Promise.all([c,a]);c[0]&&c[0].forEach(d=>{d.avg=d.mean;d.stddev=d.standardDeviation});return{statistics:c[0]||null,histograms:c[1]||null}};m.computeBestPyramidLevelForLocation=async function(a,b={}){if(!this._tilemapCache)return 0;a=this.identifyPixelLocation(a,0,t.unwrap(b.datumTransformation));if(null===a)return null;let c=0;var {maximumPyramidLevel:d}=this.rasterInfo.storageInfo;d=
d-c+this._levelOffset;const e=a.srcLocation;for(;0<=d;){try{if("available"===await this._tilemapCache.fetchAvailability(d,a.row,a.col,b))break}catch{}d--;c++;a=this.identifyPixelLocation(e,c,t.unwrap(b.datumTransformation));if(null===a)return null}return-1===d||null==a?null:c};m._fetchRasterInfo=async function(a){var b=this.sourceJSON;if("Map"===this.tileType){a=b.fullExtent||b.extent;var c=Math.ceil((a.xmax-a.xmin)/b.pixelSizeX-.1);const d=Math.ceil((a.ymax-a.ymin)/b.pixelSizeY-.1),e=P.fromJSON(b.spatialReference||
a.spatialReference);b=new Q({x:b.pixelSizeX,y:b.pixelSizeY,spatialReference:e});return new G({width:c,height:d,bandCount:3,extent:R.fromJSON(a),spatialReference:e,pixelSize:b,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}({signal:c}=a);a=O.fetchServiceRasterInfo(this.url,this.sourceJSON,{signal:c,query:this.ioConfig.customFetchParameters});b=b.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:c}).then(d=>d.data&&d.data.slices).catch(()=>null):null;
b=await Promise.all([a,b]);this._slices=b[1];return b[0]};m._fixScaleInServiceInfo=function(){const {sourceJSON:a}=this;a.minScale&&0>a.minScale&&(a.minScale=0);a.maxScale&&0>a.maxScale&&(a.maxScale=0)};m._fixGCSShift=function(a){const {extent:b,spatialReference:c}=a;-1<b.xmin&&181<b.xmax&&c?.wkid&&c.isGeographic&&(a.nativeExtent=a.extent,a.transform=new N,a.extent=a.transform.forwardTransform(b))};m._computeMinMaxLOD=function(a,b){const {pixelSize:c}=a,d=.5/a.width*c.x;({lods:a}=b);var e=b.lodAt(Math.max.apply(null,
a.map(g=>g.level)));b=b.lodAt(Math.min.apply(null,a.map(g=>g.level)));var {tileType:h}=this;if("Map"===h)return this._levelOffset=a[0].level,[e,b];if("Raster"===h)return[a.find(g=>g.resolution===c.x)??e,b];const {minScale:f,maxScale:k}=this.sourceJSON;h=e;0<k&&((h=a.find(g=>Math.abs(g.scale-k)<d))||(h=a.filter(g=>g.scale>k).sort((g,n)=>g.scale>n.scale?1:-1)[0]??e));e=b;0<f&&(e=a.find(g=>Math.abs(g.scale-f)<d)??b,this._levelOffset=e.level-b.level);return[h,e]};return A._createClass(v)}(L);B.__decorate([D.property({type:String,
json:{write:!0}})],u.prototype,"datasetFormat",void 0);B.__decorate([D.property()],u.prototype,"tileType",void 0);return u=B.__decorate([F.subclass("esri.layers.support.rasterDatasets.ImageServerRaster")],u)});