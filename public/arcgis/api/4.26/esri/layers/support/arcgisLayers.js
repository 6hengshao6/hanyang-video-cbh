// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("require exports ../../core/Error ../../core/maybe ../../core/urlUtils ./arcgisLayerUrl ./fetchService ./layerUtils ./lazyLayerLoader ../../support/requestPresets".split(" "),function(w,l,x,h,m,n,y,p,z,k){function q(a,b){return a?a.find(c=>c.id===b):null}function A(a,b,c){function e(d,f){d={...c,layerId:d,sublayerTitleMode:"service-name"};h.isSome(f)&&(d.sourceJSON=f);return new b.Constructor(d)}b.sublayerIds.forEach(d=>{d=e(d,q(b.sublayerInfos,d));a.add(d)});b.tableIds.forEach(d=>{d=e(d,q(b.tableInfos,
d));a.tables.add(d)})}async function B(a,b){var c=n.parse(a);h.isNone(c)&&(c=await C(a,b));if(h.isNone(c))throw new x("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:a});const {serverType:e,sublayer:d}=c;var f={FeatureServer:"FeatureLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer"};switch(e){case "MapServer":f=null!=d?"FeatureLayer":await D(a,b)?"TileLayer":"MapImageLayer";break;case "ImageServer":f=await k.fetchArcGISServiceJSON(a,{customParameters:b});
const {tileInfo:r,cacheType:t}=f;f=r?"LERC"!==r?.format?.toUpperCase()||t&&"elevation"!==t.toLowerCase()?"ImageryTileLayer":"ElevationLayer":"ImageryLayer";break;case "SceneServer":var g=await k.fetchArcGISServiceJSON(c.url.path,{customParameters:b});f="SceneLayer";if(g){const u=g?.layers;"Voxel"===g?.layerType?f="VoxelLayer":u?.length&&(g=u[0]?.layerType,null!=g&&null!=p.sceneServiceLayerTypeToClassName[g]&&(f=p.sceneServiceLayerTypeToClassName[g]))}break;default:f=f[e]}g="FeatureServer"===e;c={parsedUrl:c,
Constructor:null,layerOrTableId:g?d:void 0,sublayerIds:null,tableIds:null};E[f]&&null==d&&(a=await F(a,e,b),g&&(c.sublayerInfos=a.layerInfos,c.tableInfos=a.tableInfos),1!==a.layerIds.length+a.tableIds.length?(c.sublayerIds=a.layerIds,c.tableIds=a.tableIds):g&&(c.layerOrTableId=a.layerIds[0]??a.tableIds[0],c.sourceJSON=a.layerInfos?.[0]??a.tableInfos?.[0]));c.Constructor=await G(f);return c}async function C(a,b){b=await k.fetchArcGISServiceJSON(a,{customParameters:b});let c=null,e=null;var d=b.type;
"Feature Layer"===d||"Table"===d?(c="FeatureServer",e=b.id??null):"indexedVector"===d?c="VectorTileServer":b.hasOwnProperty("mapName")?c="MapServer":b.hasOwnProperty("bandCount")&&b.hasOwnProperty("pixelSizeX")?c="ImageServer":b.hasOwnProperty("maxRecordCount")&&b.hasOwnProperty("allowGeometryUpdates")?c="FeatureServer":b.hasOwnProperty("streamUrls")?c="StreamServer":v(b)?(c="SceneServer",e=b.id):b.hasOwnProperty("layers")&&v(b.layers?.[0])&&(c="SceneServer");if(!c)return null;d=null!=e?n.parseNonStandardSublayerUrl(a):
null;return{title:h.isSome(d)&&b.name||m.getFilename(a),serverType:c,sublayer:e,url:{path:h.isSome(d)?d.serviceUrl:m.urlToObject(a).path}}}function v(a){return null!=a&&a.hasOwnProperty("store")&&a.hasOwnProperty("id")&&"number"===typeof a.id}async function F(a,b,c){let e=!1;"FeatureServer"===b?(a=await y.fetchFeatureService(a,{customParameters:c}),e=!!a.layersJSON,b=a.layersJSON||a.serviceJSON):b=await k.fetchArcGISServiceJSON(a,{customParameters:c});a=b?.layers;b=b?.tables;return{layerIds:a?.map(d=>
d.id).reverse()||[],tableIds:b?.map(d=>d.id).reverse()||[],layerInfos:e?a:[],tableInfos:e?b:[]}}async function G(a){return(0,z.layerLookupMap[a])()}async function D(a,b){return(await k.fetchArcGISServiceJSON(a,{customParameters:b})).tileInfo}const E={FeatureLayer:!0,SceneLayer:!0};l.fromUrl=async function(a){const b=await B(a.url,a.properties?.customParameters);a={...a.properties,url:a.url};if(!b.sublayerIds)return null!=b.layerOrTableId&&(a.layerId=b.layerOrTableId,a.sourceJSON=b.sourceJSON),new b.Constructor(a);
const c=new (await new Promise((e,d)=>w(["../GroupLayer"],f=>e(Object.freeze(Object.defineProperty({__proto__:null,default:f},Symbol.toStringTag,{value:"Module"}))),d))).default({title:b.parsedUrl.title});A(c,b,a);return c};Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});