// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("require ../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../request ../core/Error ../core/maybe ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/urlUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/arrayUtils ../core/has ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../geometry/HeightModelInfo ./Layer ./mixins/ArcGISCachedService ./mixins/ArcGISService ./mixins/OperationalLayer ./mixins/PortalLayer ./support/commonProperties ./support/ElevationTileData ./support/LercDecoder".split(" "),
function(r,m,e,t,u,n,c,p,v,g,K,L,M,w,x,y,z,A,B,C,D,E,F,G){c=function(h){function l(...a){a=H.call(this,...a);a.copyright=null;a.heightModelInfo=null;a.path=null;a.minScale=void 0;a.maxScale=void 0;a.opacity=1;a.operationalLayerType="ArcGISTiledElevationServiceLayer";a.sourceJSON=null;a.type="elevation";a.url=null;a.version=null;a._lercDecoder=G.acquireDecoder();return a}m._inherits(l,h);var H=m._createSuper(l);h=l.prototype;h.normalizeCtorArgs=function(a,d){return"string"===typeof a?{url:a,...d}:
a};h.destroy=function(){this._lercDecoder=n.releaseMaybe(this._lercDecoder)};h.readVersion=function(a,d){(a=d.currentVersion)||(a=9.3);return a};h.load=function(a){const d=n.isSome(a)?a.signal:null;this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:f=>{for(let b=0;b<f.typeKeywords.length;b++)if("elevation 3d layer"===f.typeKeywords[b].toLowerCase())return!0;throw new u("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",
{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"});}},a).catch(p.throwIfAbortError).then(()=>this._fetchImageService(d)));return Promise.resolve(this)};h.fetchTile=function(a,d,f,b){b=b||{signal:null};const k=n.isSome(b.signal)?b.signal:b.signal=(new AbortController).signal,I={responseType:"array-buffer",signal:k},J={noDataValue:b.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(a,d,f,b)).then(()=>t(this.getTileUrl(a,d,f),I)).then(q=>this._lercDecoder.decode(q.data,
J,k)).then(q=>new F.ElevationTileData(q))};h.getTileUrl=function(a,d,f){const b=v.objectToQuery({...this.parsedUrl.query,blankTile:!this.tilemapCache&&this.supportsBlankTile?!1:null});return`${this.parsedUrl.path}/tile/${a}/${d}/${f}${b?"?"+b:""}`};h.queryElevation=async function(a,d){const {ElevationQuery:f}=await new Promise((b,k)=>r(["./support/ElevationQuery"],b,k));p.throwIfAborted(d);return(new f).query(this,a,d)};h.createElevationSampler=async function(a,d){const {ElevationQuery:f}=await new Promise((b,
k)=>r(["./support/ElevationQuery"],b,k));p.throwIfAborted(d);return(new f).createSampler(this,a,d)};h._fetchTileAvailability=function(a,d,f,b){return this.tilemapCache?this.tilemapCache.fetchAvailability(a,d,f,b):Promise.resolve("unknown")};h._fetchImageService=async function(a){if(this.sourceJSON)return this.sourceJSON;a=await t(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:a});a.ssl&&(this.url=this.url?.replace(/^http:/i,"https:"));this.sourceJSON=a.data;
this.read(a.data,{origin:"service",url:this.parsedUrl})};m._createClass(l,[{key:"hasOverriddenFetchTile",get:function(){return!this.fetchTile.__isDefault__}}]);return l}(A.ArcGISCachedService(B.ArcGISService(C.OperationalLayer(D.PortalLayer(c.MultiOriginJSONMixin(z))))));e.__decorate([g.property({json:{read:{source:"copyrightText"}}})],c.prototype,"copyright",void 0);e.__decorate([g.property({readOnly:!0,type:y})],c.prototype,"heightModelInfo",void 0);e.__decorate([g.property({type:String,json:{origins:{"web-scene":{read:!0,
write:!0}},read:!1}})],c.prototype,"path",void 0);e.__decorate([g.property({type:["show","hide"]})],c.prototype,"listMode",void 0);e.__decorate([g.property({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],c.prototype,"minScale",void 0);e.__decorate([g.property({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],c.prototype,
"maxScale",void 0);e.__decorate([g.property({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],c.prototype,"opacity",void 0);e.__decorate([g.property({type:["ArcGISTiledElevationServiceLayer"]})],c.prototype,"operationalLayerType",void 0);e.__decorate([g.property()],c.prototype,"sourceJSON",void 0);e.__decorate([g.property({json:{read:!1},value:"elevation",readOnly:!0})],c.prototype,"type",void 0);e.__decorate([g.property(E.url)],c.prototype,"url",void 0);e.__decorate([g.property()],
c.prototype,"version",void 0);e.__decorate([w.reader("version",["currentVersion"])],c.prototype,"readVersion",null);c=e.__decorate([x.subclass("esri.layers.ElevationLayer")],c);c.prototype.fetchTile.__isDefault__=!0;return c});