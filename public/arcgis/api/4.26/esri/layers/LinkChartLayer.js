// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../geometry ../core/Collection ../core/Error ../core/Logger ../core/promiseUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/arrayUtils ../core/has ../core/accessorSupport/decorators/subclass ../geohash/geohashUtils ./Layer ./graphics/featureConversionUtils ./graphics/OptimizedGeometry ./knowledgeGraph/KnowledgeGraphLayerDataManager ./knowledgeGraph/KnowledgeGraphSubLayer ./mixins/BlendLayer ./mixins/ScaleRangeLayer ../libs/linkchartlayout/LinkChartLayout ../rest/knowledgeGraphService ../rest/knowledgeGraph/EntityType ../rest/knowledgeGraph/RelationshipType ../geometry/Extent ../geometry/Point ../geometry/Polyline".split(" "),
function(G,v,r,L,H,I,S,x,da,ea,fa,T,D,U,C,M,e,N,V,W,t,X,Y,Z,O,J,P){r=function(A){function E(b){var c=aa.call(this,b);c.dataPreloadedInLocalCache=!1;c.layers=new L;c.linkChartDiagramLookup=new Map;c.linkChartExtent=new O({xmin:-1E-7,ymin:-1E-7,xmax:1E-7,ymax:1E-7});c.linkChartGeohashLookup=new Map;c.sublayerIdsCache=new Map;c.tables=new L;c.type="link-chart";c._originalInclusionList=b.inclusionModeDefinition;if(b.dataPreloadedInLocalCache&&!b.inclusionModeDefinition)throw new H("knowledge-graph:linkchart-layer-constructor",
"If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it");return c}G._inherits(E,A);var aa=G._createSuper(E);A=E.prototype;A.normalizeCtorArgs=function(b){return{url:b.url,title:b.title,dataPreloadedInLocalCache:b.dataPreloadedInLocalCache,defaultLinkChartConfig:b.defaultLinkChartConfig}};A._initializeLayerProperties=function(b){if(!this.title&&this.url){var c=this.url.split("/");
this.title=c[c.length-2]}const a=new Set,d=new Map;let h=[],l=[];if(b.inclusionModeDefinition&&(!b.inclusionModeDefinition.namedTypeDefinitions||1>b.inclusionModeDefinition.namedTypeDefinitions.size))throw new H("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");b.inclusionModeDefinition?.generateAllSublayers?(h=b.knowledgeGraph.dataModel.entityTypes??[],l=b.knowledgeGraph.dataModel.relationshipTypes??
[]):b.inclusionModeDefinition?.namedTypeDefinitions&&0<b.inclusionModeDefinition?.namedTypeDefinitions.size?(b.knowledgeGraph.dataModel.entityTypes?.forEach(w=>{w.name&&d.set(w.name,w)}),b.knowledgeGraph.dataModel.relationshipTypes?.forEach(w=>{w.name&&d.set(w.name,w)}),b.inclusionModeDefinition?.namedTypeDefinitions.forEach((w,q)=>{d.get(q)?d.get(q)instanceof Z||"strictOrigin"in d.get(q)?a.has(q)||(a.add(q),l.push(d.get(q))):d.get(q)instanceof Y||"properties"in d.get(q)?a.has(q)||(a.add(q),h.push(d.get(q))):
(I.getLogger(this.declaredClass).warn(`A named type, ${q}, was in the inclusion list that wasn't properly modeled and will be removed`),b.inclusionModeDefinition?.namedTypeDefinitions.delete(q)):(I.getLogger(this.declaredClass).warn(`A named type, ${q}, was in the inclusion list that wasn't in the data model and will be removed`),b.inclusionModeDefinition?.namedTypeDefinitions.delete(q))})):(h=b.knowledgeGraph.dataModel.entityTypes??[],l=b.knowledgeGraph.dataModel.relationshipTypes??[]);c=new e.KnowledgeGraphLayerDataManager({knowledgeGraph:b.knowledgeGraph,
inclusionModeDefinition:b.inclusionModeDefinition});this.knowledgeGraph=b.knowledgeGraph;this.memberEntityTypes=h;this.memberRelationshipTypes=l;this.dataManager=c};A.load=function(b){this.addResolvingPromise(new Promise(c=>{X.fetchKnowledgeGraph(this.url).then(a=>{this._initializeLayerProperties({knowledgeGraph:a,inclusionModeDefinition:this._originalInclusionList});this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,
namedTypeDefinitions:new Map},this.dataManager.knowledgeGraph.dataModel.entityTypes?.forEach(d=>{d.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(d.name,{useAllData:!0})}),this.dataManager.knowledgeGraph.dataModel.relationshipTypes?.forEach(d=>{d.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(d.name,{useAllData:!0})}));this.dataPreloadedInLocalCache?(this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=
!1),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(d=>{d.useAllData=!1;d.members?.forEach(h=>{let l;l=h.linkChartLocation instanceof M?h.linkChartLocation:h.linkChartLocation?C.convertFromGeometry(h.linkChartLocation):null;this.linkChartDiagramLookup.set(h.id,l);l&&2===l.coords.length&&0===l.lengths.length?this.linkChartGeohashLookup.set(h.id,D.encodeGeohash(l.coords[1],l.coords[0],e.GEOHASH_ENCODING_PRECISION)):this.linkChartGeohashLookup.set(h.id,"")});this.addResolvingPromise(this._initializeDiagram().then(async()=>
{this.layers.forEach(async h=>{await h.refreshCachedQueryEngine()});this.tables.forEach(async h=>{await h.refreshCachedQueryEngine()})}))})):this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!0,"GEOGRAPHIC"===this.defaultLinkChartConfig?.layoutMode).then(async()=>{S.throwIfAborted(b);const d=[],h=[];this.loadLayerAssumingLocalCache();this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1,this.dataManager.inclusionModeDefinition.namedTypeDefinitions.forEach(l=>
{l.useAllData=!1}));await this._initializeDiagram();this.layers.forEach(async l=>{h.push(l.refreshCachedQueryEngine());d.push(new Promise(w=>{l.on("layerview-create",async()=>{w(null)})}))});this.tables.forEach(async l=>{h.push(l.refreshCachedQueryEngine())});await Promise.all(h);Promise.all(d).then(async()=>{this.dataManager.refreshCacheContent().then(async()=>{this.layers.forEach(l=>{l.refreshCachedQueryEngine()});this.tables.forEach(l=>{l.refreshCachedQueryEngine()})})})}));c(null)})}));return Promise.resolve(this)};
A.loadLayerAssumingLocalCache=function(){this.memberRelationshipTypes.forEach(b=>{const c=new N({objectType:b,parentCompositeLayer:this,graphType:"relationship",title:b.name});c.geometryType?this.layers.push(c):this.tables.push(c);this.dataManager.sublayerCaches.has(b.name)||this.dataManager.sublayerCaches.set(b.name,new Map)});this.memberEntityTypes.forEach(b=>{const c=new N({objectType:b,parentCompositeLayer:this,graphType:"entity",title:b.name});c.geometryType?this.layers.push(c):this.tables.push(c);
this.dataManager.sublayerCaches.has(b.name)||this.dataManager.sublayerCaches.set(b.name,new Map)});this.dataManager.inclusionModeDefinition?.namedTypeDefinitions&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((b,c)=>{b.members?.forEach(a=>{this.sublayerIdsCache.has(c)?this.sublayerIdsCache.get(c)?.push(a.id):this.sublayerIdsCache.set(c,[a.id]);if(a.linkChartLocation)if(a.linkChartLocation instanceof M)this.linkChartDiagramLookup.set(a.id,a.linkChartLocation),2===a.linkChartLocation.coords.length&&
0===a.linkChartLocation.lengths.length?this.linkChartGeohashLookup.set(a.id,D.encodeGeohash(a.linkChartLocation.coords[1],a.linkChartLocation.coords[0],e.GEOHASH_ENCODING_PRECISION)):this.linkChartGeohashLookup.set(a.id,"");else{const d=C.convertFromGeometry(a.linkChartLocation);this.linkChartDiagramLookup.set(a.id,a.linkChartLocation?d:null);"x"in a.linkChartLocation&&"y"in a.linkChartLocation?this.linkChartGeohashLookup.set(a.id,D.encodeGeohash(a.linkChartLocation.x,a.linkChartLocation.y,e.GEOHASH_ENCODING_PRECISION)):
this.linkChartGeohashLookup.set(a.id,"")}})});Array.from(this.sublayerIdsCache.values()).forEach(b=>b.sort())};A.calculateLinkChartLayout=async function(b="RADIAL_TREE",c){const a=[],d=[];this.dataManager.sublayerCaches.forEach((k,p)=>{this.dataManager.entityTypeNames.has(p)?k.forEach(g=>{a.push({typeName:p,feature:g})}):this.dataManager.relationshipTypeNames.has(p)&&k.forEach(g=>{d.push({typeName:p,feature:g})})});this.linkChartDiagramLookup=new Map;const h=new Map,l=new Map,w=new Map,q=new Map,
B=new Uint8Array(a.length),z=new Float64Array(a.length),u=new Float64Array(a.length),Q=new Uint32Array(d.length),R=new Uint32Array(d.length),m=[];var f=c?.geographicStrategy??"FORCE_DIRECTED";const ba=c?.xScaleFactor??1,ca=c?.yScaleFactor??1,y=new O({xmin:-1E-7,ymin:-1E-7,xmax:1E-7,ymax:1E-7});let n=0,K=0;switch("GEOGRAPHIC"===b?f:b){case "FORCE_DIRECTED":f=t.LCForceDirectedLayout.apply;break;case "COMMUNITY":f=t.LCCommunityLayout.apply;break;case "HIERARCHICAL":f=t.LCHierarchicalLayout.apply;break;
case "RADIAL_TREE":f=t.LCRadialTreeLayout.apply;break;case "SMART_TREE":f=t.LCSmartTreeLayout.apply;break;default:f=t.LCSimpleLayout.apply}a.forEach(({typeName:k,feature:p})=>{if(c?.lockedNodeLocations?.has(p.attributes[e.MOCK_OID_FIELD_NAME])){"GEOGRAPHIC"===b&&this.dataManager.geographicLookup.has(k)?B[n]=t.NodeFlag.IsGeographic:B[n]=t.NodeFlag.None;var g=c.lockedNodeLocations.get(p.attributes[e.MOCK_OID_FIELD_NAME]);z[n]=g.x;u[n]=g.y}else if("GEOGRAPHIC"===b&&this.dataManager.geographicLookup.has(k)){B[n]=
t.NodeFlag.IsGeographic;g=null;g=p.attributes[this.dataManager.geographicLookup.get(k).name];switch(this.dataManager.geographicLookup.get(k)?.geometryType){case "esriGeometryPoint":z[n]=g?.x;u[n]=g?.y;break;case "esriGeometryPolygon":g=g?.centroid;g?.x&&g?.y?(z[n]=g?.x,u[n]=g?.y):B[n]=t.NodeFlag.IsMovable;break;case "esriGeometryPolyline":g=g?.extent?.center;g?.x&&g?.y?(z[n]=g?.x,u[n]=g?.y):B[n]=t.NodeFlag.IsMovable;break;case "esriGeometryMultipoint":g=g?.extent?.center;g?.x&&g?.y?(z[n]=g?.x,u[n]=
g?.y):B[n]=t.NodeFlag.IsMovable;break;default:B[n]=t.NodeFlag.IsMovable}z[n]||(z[n]=0);u[n]||(u[n]=0)}else B[n]=t.NodeFlag.IsMovable,z[n]=0,u[n]=0;q.set(p.attributes[e.MOCK_OID_FIELD_NAME],n);m[n]={feature:p,typeName:k};n++});d.forEach(k=>{const p=q.get(k.feature.attributes[e.MOCK_ORIGIN_ID_FIELD_NAME]),g=q.get(k.feature.attributes[e.MOCK_DESTINATION_ID_FIELD_NAME]);void 0!==p&&void 0!==g?(Q[K]=p,R[K]=g,K++):(I.getLogger(this.declaredClass).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members.  The diagram geometry will be set to null"),
this.linkChartDiagramLookup.set(k.feature.attributes[e.MOCK_ORIGIN_ID_FIELD_NAME],null),this.linkChartGeohashLookup.set(k.feature.attributes[e.MOCK_ORIGIN_ID_FIELD_NAME],null))});await t.load();if(!f(B,z,u,Q,R))throw new H("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");for(f=0;f<m.length;f++){80<u[f]&&(u[f]=80);-80>u[f]&&(u[f]=-80);m[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME]=B[f]===t.NodeFlag.IsMovable?new J(z[f]*ba,u[f]*ca):new J(z[f],
u[f]);if(h.has(m[f].typeName))h.get(m[f].typeName)?.set(m[f].feature.attributes[e.MOCK_OID_FIELD_NAME],m[f].feature);else{var F=new Map;F.set(m[f].feature.attributes[e.MOCK_OID_FIELD_NAME],m[f].feature);h.set(m[f].typeName,F)}w.set(m[f].feature.attributes[e.MOCK_OID_FIELD_NAME],m[f].feature);F=C.convertFromGeometry(m[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME]);this.linkChartDiagramLookup.set(m[f].feature.attributes[e.MOCK_OID_FIELD_NAME],m[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME]?
F:null);this.linkChartGeohashLookup.set(m[f].feature.attributes[e.MOCK_OID_FIELD_NAME],D.encodeGeohash(m[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].y,m[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].x,e.GEOHASH_ENCODING_PRECISION));m[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].x<y.xmin&&(y.xmin=m[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].x);m[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].x>y.xmax&&(y.xmax=m[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].x);
m[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].y<y.ymin&&(y.ymin=m[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].y);m[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].y>y.ymax&&(y.ymax=m[f].feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].y)}this.linkChartExtent.xmin=y.xmin;this.linkChartExtent.xmax=y.xmax;this.linkChartExtent.ymin=y.ymin;this.linkChartExtent.ymax=y.ymax;d.forEach(k=>{var p=m[q.get(k.feature.attributes[e.MOCK_ORIGIN_ID_FIELD_NAME])]?.feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME];
const g=m[q.get(k.feature.attributes[e.MOCK_DESTINATION_ID_FIELD_NAME])]?.feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME];p&&g&&(p=new P({paths:[[p.x,p.y],[g.x,g.y]]}),k.feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME]=p,l.has(k.typeName)?l.get(k.typeName)?.set(k.feature.attributes[e.MOCK_OID_FIELD_NAME],k.feature):(p=new Map,p.set(k.feature.attributes[e.MOCK_OID_FIELD_NAME],k.feature),l.set(k.typeName,p)),w.set(k.feature.attributes[e.MOCK_OID_FIELD_NAME],k.feature),p=C.convertFromGeometry(k.feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME]),
this.linkChartDiagramLookup.set(k.feature.attributes[e.MOCK_OID_FIELD_NAME],k.feature.attributes[e.MOCK_LAYOUT_GEOMETRY_FIELD_NAME]?p:null),this.linkChartGeohashLookup.set(k.feature.attributes[e.MOCK_OID_FIELD_NAME],""))});return{nodes:h,links:l,idMap:w}};A.applyNewLinkChartLayout=async function(b="RADIAL_TREE",c){const a=[];await this.calculateLinkChartLayout(b,c);this.layers.forEach(d=>{a.push(d.refreshCachedQueryEngine())});await Promise.all(a);this.layers.forEach(d=>{d.emit("refresh",{dataChanged:!0})})};
A.synchronizeInclusionListWithCache=async function(){return new Promise(b=>{this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((c,a)=>{c.useAllData=!1;if(c.members&&0<c.members.size&&this.dataManager.sublayerCaches.get(a)){var d=Array.from(this.dataManager.sublayerCaches.get(a).keys());Array.from(c.members.keys()).filter(h=>!d.includes(h)).forEach(h=>{c.members?.delete(h)})}});b()})};A._initializeDiagram=async function(){if(this.defaultLinkChartConfig)if(this.defaultLinkChartConfig.doNotRecalculateLayout)this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(b=>
{b?.members?.forEach(c=>{var a=c.linkChartLocation;c=c.id;if(a){a="x"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]};var d=C.convertFromGeometry(a);this.linkChartDiagramLookup.set(c,d);this.linkChartGeohashLookup.set(c,D.encodeGeohash(a.x,a.y,e.GEOHASH_ENCODING_PRECISION));this.linkChartExtent.xmin>a.x&&(this.linkChartExtent.xmin=a.x);this.linkChartExtent.xmax<a.x&&(this.linkChartExtent.xmax=a.x);this.linkChartExtent.ymin>a.y&&(this.linkChartExtent.ymin=a.y);this.linkChartExtent.ymax<a.y&&(this.linkChartExtent.ymax=
a.y)}})}),this.memberRelationshipTypes.forEach(b=>{b.name&&this.dataManager.sublayerCaches.get(b.name)?.forEach(c=>{var a=this.linkChartDiagramLookup.get(c.attributes[e.MOCK_ORIGIN_ID_FIELD_NAME]);const d=this.linkChartDiagramLookup.get(c.attributes[e.MOCK_DESTINATION_ID_FIELD_NAME]);a&&d?(a=C.convertFromGeometry(new P({paths:[[a.coords[0],a.coords[1]],[d.coords[0],d.coords[1]]]})),this.linkChartDiagramLookup.set(c.attributes[e.MOCK_OID_FIELD_NAME],a)):this.linkChartDiagramLookup.set(c.attributes[e.MOCK_OID_FIELD_NAME],
null);this.linkChartGeohashLookup.set(c.attributes[e.MOCK_OID_FIELD_NAME],"")})});else{const b=new Map;this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(c=>{c?.members?.forEach(a=>{var d=a.linkChartLocation;const h=a.id;d&&("x"in d?(a=d.x,d=d.y):(a=d.coords[0],d=d.coords[1]),b.set(h,new J({x:a,y:d})))})});await this.calculateLinkChartLayout(this.defaultLinkChartConfig.layoutMode,{xScaleFactor:this.defaultLinkChartConfig.xScaleFactor,yScaleFactor:this.defaultLinkChartConfig.yScaleFactor,
lockedNodeLocations:b})}else await this.calculateLinkChartLayout()};return G._createClass(E)}(V.BlendLayer(W.ScaleRangeLayer(U)));v.__decorate([x.property()],r.prototype,"dataPreloadedInLocalCache",void 0);v.__decorate([x.property()],r.prototype,"defaultLinkChartConfig",void 0);v.__decorate([x.property()],r.prototype,"dataManager",void 0);v.__decorate([x.property()],r.prototype,"knowledgeGraph",void 0);v.__decorate([x.property()],r.prototype,"layers",void 0);v.__decorate([x.property()],r.prototype,
"linkChartDiagramLookup",void 0);v.__decorate([x.property()],r.prototype,"linkChartExtent",void 0);v.__decorate([x.property()],r.prototype,"linkChartGeohashLookup",void 0);v.__decorate([x.property()],r.prototype,"memberEntityTypes",void 0);v.__decorate([x.property()],r.prototype,"memberRelationshipTypes",void 0);v.__decorate([x.property()],r.prototype,"sublayerIdsCache",void 0);v.__decorate([x.property()],r.prototype,"tables",void 0);v.__decorate([x.property({json:{read:!1}})],r.prototype,"type",
void 0);return r=v.__decorate([T.subclass("esri.layers.LinkChartLayer")],r)});