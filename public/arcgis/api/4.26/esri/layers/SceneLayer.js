// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("require ../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../Graphic ../PopupTemplate ../renderers/ClassBreaksRenderer ../renderers/DictionaryRenderer ../renderers/DotDensityRenderer ../renderers/HeatmapRenderer ../renderers/PieChartRenderer ../renderers/Renderer ../renderers/SimpleRenderer ../renderers/UniqueValueRenderer ../renderers/support/jsonUtils ../renderers/support/types ../request ../core/Collection ../core/Error ../core/Logger ../core/maybe ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/reactiveUtils ../core/urlUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/arrayUtils ../core/has ../core/accessorSupport/utils ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../core/accessorSupport/PropertyOrigin ./Layer ./mixins/APIKeyMixin ./mixins/ArcGISService ./mixins/EditBusLayer ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/ScaleRangeLayer ./mixins/SceneService ./support/capabilities ./support/commonProperties ./support/FeatureReduction ./support/FeatureReductionSelection ./support/FetchAssociatedFeatureLayer ./support/fieldProperties ./support/FieldsIndex ./support/fieldUtils ./support/I3SLayerDefinitions ./support/LabelClass ./support/labelingInfo ./support/LayerFloorInfo ./support/RangeInfo ./support/SceneFilter ../renderers/support/styleUtils ../rest/support/Query ../support/featureFlags ../support/popupUtils ../views/3d/layers/i3s/I3SUtil ../views/layers/support/popupUtils ../webdoc/support/opacityUtils".split(" "),
function(G,r,d,H,I,w,Ba,Ca,Da,Ea,Fa,Ga,Ha,Ia,J,K,A,l,p,k,c,B,L,M,g,Ja,Ka,La,N,t,O,C,P,Q,R,S,T,U,V,x,W,u,X,Y,Z,aa,ba,y,v,ca,D,da,ea,fa,ha,ia,ja,ka,la,E,ma){const na=["3DObject","Point"];w=aa.defineFieldProperties();c=function(f){function m(...a){a=oa.call(this,...a);a.featureReduction=null;a.rangeInfos=null;a.operationalLayerType="ArcGISSceneServiceLayer";a.type="scene";a.fields=null;a.floorInfo=null;a.outFields=null;a.nodePages=null;a.materialDefinitions=null;a.textureSetDefinitions=null;a.geometryDefinitions=
null;a.serviceUpdateTimeStamp=null;a.excludeObjectIds=new A;a.definitionExpression=null;a.filter=null;a.path=null;a.labelsVisible=!0;a.labelingInfo=null;a.legendEnabled=!0;a.priority=null;a.semantic=null;a.cachedDrawingInfo={color:!1};a.popupEnabled=!0;a.popupTemplate=null;a.objectIdField=null;a.globalIdField=null;a._fieldUsageInfo={};a.screenSizePerspectiveEnabled=!0;return a}r._inherits(m,f);var oa=r._createSuper(m);f=m.prototype;f.normalizeCtorArgs=function(a,b){return"string"===typeof a?{url:a,
...b}:a};f.getField=function(a){return this.fieldsIndex.get(a)};f.getFieldDomain=function(a,b){return(b=this.getFeatureType(b?.feature)?.domains?.[a])&&"inherited"!==b.type?b:this.getField(a)?.domain??null};f.getFeatureType=function(a){return null!=a&&k.isSome(this.associatedLayer)?this.associatedLayer.getFeatureType(a):null};f.readNodePages=function(a,b,e){"Point"===b.layerType&&(a=b.pointNodePages);return null==a||"object"!==typeof a?null:v.I3SNodePageDefinition.fromJSON(a,e)};f.readCachedDrawingInfo=
function(a){if(null==a||"object"!==typeof a)a={};null==a.color&&(a.color=!1);return a};f.readObjectIdField=function(a,b){!a&&b.fields&&b.fields.some(e=>{"esriFieldTypeOID"===e.type&&(a=e.name);return!!a});return a||void 0};f.readGlobalIdField=function(a,b){!a&&b.fields&&b.fields.some(e=>{"esriFieldTypeGlobalID"===e.type&&(a=e.name);return!!a});return a||void 0};f.readProfile=function(a,b){a=b.store.profile;if(null!=a&&F[a])return F[a];p.getLogger(this.declaredClass).error("Unknown or missing profile",
{profile:a,layer:this});return"mesh-pyramids"};f.load=function(a){const b=k.isSome(a)?a.signal:null,e=this.loadFromPortal({supportedTypes:["Scene Service"]},a).catch(B.throwIfAbortError).then(()=>this._fetchService(b)).then(()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,b),this._setAssociatedFeatureLayer(b),k.isSome(this.filter)?this.filter.loadGeometries(this.spatialReference):null])).then(()=>this._validateElevationInfo()).then(()=>this._applyAssociatedLayerOverrides()).then(()=>
this._populateFieldUsageInfo()).then(()=>ha.loadStyleRenderer(this,{origin:"service"},b)).then(()=>y.fixRendererFields(this.renderer,this.fieldsIndex)).then(()=>this.finishLoadEditablePortalLayer(a));this.addResolvingPromise(e);return Promise.resolve(this)};f.beforeSave=async function(){k.isSome(this.filter)&&await this.load()};f.createQuery=function(){const a=new ia;"mesh"!==this.geometryType&&(a.returnGeometry=!0,a.returnZ=!0);a.where=this.definitionExpression||"1\x3d1";a.sqlFormat="standard";a.outFields=
["*"];return a};f.queryExtent=function(a,b){return this._getAssociatedLayerForQuery().then(e=>e.queryExtent(a||this.createQuery(),b))};f.queryFeatureCount=function(a,b){return this._getAssociatedLayerForQuery().then(e=>e.queryFeatureCount(a||this.createQuery(),b))};f.queryFeatures=function(a,b){return this._getAssociatedLayerForQuery().then(e=>e.queryFeatures(a||this.createQuery(),b)).then(e=>{if(e?.features)for(const h of e.features)h.layer=this,h.sourceLayer=this;return e})};f.queryCachedAttributes=
async function(a,b){const e=y.unpackFieldNames(this.fieldsIndex,await E.getRequiredFields(this,E.getFetchPopupTemplate(this)));return la.queryAttributesFromCachedAttributesId(this.parsedUrl.path,this.attributeStorageInfo??[],a,b,e)};f.queryCachedFeature=async function(a,b){a=await this.queryCachedAttributes(a,[b]);if(!a||0===a.length)throw new l("scenelayer:feature-not-in-cached-data","Feature not found in cached data");b=new H;b.attributes=a[0];b.layer=this;b.sourceLayer=this;return b};f.queryObjectIds=
function(a,b){return this._getAssociatedLayerForQuery().then(e=>e.queryObjectIds(a||this.createQuery(),b))};f.queryAttachments=function(a,b){return this._getAssociatedLayerForQuery().then(e=>e.queryAttachments(a,b))};f.getFieldUsageInfo=function(a){const b={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[a]||b:(p.getLogger(this.declaredClass).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),b)};f.createPopupTemplate=
function(a){return ka.createPopupTemplate(this,a)};f._getAssociatedLayerForQuery=function(){const a=this.associatedLayer;return k.isSome(a)&&a.loaded?Promise.resolve(a):this._loadAssociatedLayerForQuery()};f._loadAssociatedLayerForQuery=async function(){await this.load();if(k.isNone(this.associatedLayer))throw new l("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(a){throw new l("scenelayer:query-not-available",
"SceneLayer associated feature layer could not be loaded",{layer:this,error:a});}return this.associatedLayer};f.hasCachedStatistics=function(a){return null!=this.statisticsInfo&&this.statisticsInfo.some(b=>b.name===a)};f.queryCachedStatistics=async function(a,b){await this.load(b);if(!this.statisticsInfo)throw new l("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const e=this.fieldsIndex.get(a);if(!e)throw new l("scenelayer:field-unexisting",`Field '${a}' does not exist on the layer`);
for(const h of this.statisticsInfo)if(h.name===e.name)return a=M.join(this.parsedUrl.path,h.href),K(a,{query:{f:"json",token:this.apiKey},responseType:"json",signal:b?b.signal:null}).then(n=>n.data);throw new l("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available");};f.saveAs=async function(a,b){return this._debouncedSaveOperations(x.SaveOperationType.SAVE_AS,{...b,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},a)};f.save=async function(){return this._debouncedSaveOperations(x.SaveOperationType.SAVE,
{getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"})};f.applyEdits=async function(a,b){const e=await new Promise((h,n)=>G(["./graphics/editingSupport"],h,n));await this.load();if(k.isNone(this.associatedLayer))throw new l(`${this.type}-layer:not-editable`,"Service is not editable");await this.associatedLayer.load();return e.applyEdits(this,this.associatedLayer.source,a,b)};f.on=function(a,b){return r._get(r._getPrototypeOf(m.prototype),"on",this).call(this,a,b)};f.validateLayer=
function(a){if(a.layerType&&!na.includes(a.layerType))throw new l("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:a.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new l("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(2<this.version.major)throw new l("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,
supportedVersions:"1.x, 2.x"});a=this.normalReferenceFrame;var b=this.spatialReference;let e=!1,h=!1;if(null==a)h=e=!0;else switch(b=b&&b.isGeographic,a){case "east-north-up":case "earth-centered":e=!0;h=b;break;case "vertex-reference-frame":e=!0;h=!b;break;default:e=!1}if(!e)throw new l("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!h)throw new l("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.");
};f._getTypeKeywords=function(){const a=[];if("points"===this.profile)a.push("Point");else if("mesh-pyramids"===this.profile)a.push("3DObject");else throw new l("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);return a};f._populateFieldUsageInfo=function(){this._fieldUsageInfo={};if(this.fields)for(const a of this.fields){const b=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some(h=>h.name===a.name)),e=!!(k.isSome(this.associatedLayer)&&
this.associatedLayer.fields&&this.associatedLayer.fields.some(h=>h&&a.name===h.name));this._fieldUsageInfo[a.name]={supportsLabelingInfo:b,supportsRenderer:b,supportsPopupTemplate:b||e,supportsLayerQuery:e}}};f._applyAssociatedLayerOverrides=function(){this._applyAssociatedLayerFieldsOverrides();this._applyAssociatedLayerPopupOverrides()};f._applyAssociatedLayerFieldsOverrides=function(){if(!k.isNone(this.associatedLayer)&&this.associatedLayer.fields){var a=null;for(const b of this.associatedLayer.fields){const e=
this.getField(b.name);e?(!e.domain&&b.domain&&(e.domain=b.domain.clone()),e.editable=b.editable,e.nullable=b.nullable,e.length=b.length):(a||(a=this.fields?this.fields.slice():[]),a.push(b.clone()))}a&&this._set("fields",a)}};f._applyAssociatedLayerPopupOverrides=function(){if(!k.isNone(this.associatedLayer)){var a=["popupTemplate","popupEnabled"],b=N.getProperties(this);for(let e=0;e<a.length;e++){const h=a[e],n=this.originIdOf(h),q=this.associatedLayer.originIdOf(h);n<q&&(q===C.OriginId.SERVICE||
q===C.OriginId.PORTAL_ITEM)&&b.setAtOrigin(h,this.associatedLayer[h],q)}}};f._setAssociatedFeatureLayer=async function(a){if(["mesh-pyramids","points"].includes(this.profile)){a=new Z.FetchAssociatedFeatureLayer(this.parsedUrl,this.portalItem,this.apiKey,a);try{this.associatedLayer=await a.fetch()}catch(b){B.isAbortError(b)||this._logWarningOnPopupEnabled()}}};f._logWarningOnPopupEnabled=async function(){await L.whenOnce(()=>this.popupEnabled&&null!=this.popupTemplate);const a=`this SceneLayer: ${this.title}`;
null==this.attributeStorageInfo?p.getLogger(this.declaredClass).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${a}`):p.getLogger(this.declaredClass).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${a}`)};f._validateElevationInfo=function(){const a=this.elevationInfo;a&&("mesh-pyramids"===this.profile&&"relative-to-scene"===a.mode&&p.getLogger(this.declaredClass).warn(".elevationInfo\x3d",
"Mesh scene layers don't support relative-to-scene elevation mode"),a.featureExpressionInfo&&"0"!==a.featureExpressionInfo.expression&&p.getLogger(this.declaredClass).warn(".elevationInfo\x3d","Scene layers do not support featureExpressionInfo"))};r._createClass(m,[{key:"types",get:function(){return k.isSome(this.associatedLayer)?this.associatedLayer.types??[]:[]}},{key:"typeIdField",get:function(){return k.isSome(this.associatedLayer)?this.associatedLayer.typeIdField:null}},{key:"formTemplate",get:function(){return k.isSome(this.associatedLayer)?
this.associatedLayer.formTemplate:null}},{key:"fieldsIndex",get:function(){return new ba(this.fields)}},{key:"elevationInfo",set:function(a){this._set("elevationInfo",a);this.loaded&&this._validateElevationInfo()}},{key:"geometryType",get:function(){return pa[this.profile]||"mesh"}},{key:"renderer",set:function(a){y.fixRendererFields(a,this.fieldsIndex);this._set("renderer",a)}},{key:"capabilities",get:function(){var a=k.isSome(this.associatedLayer)&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:
W.zeroCapabilities;const {query:b,editing:{supportsGlobalId:e,supportsRollbackOnFailure:h,supportsUploadWithItemId:n,supportsGeometryUpdate:q,supportsReturnServiceEditsInSourceSpatialReference:qa},data:{supportsZ:ra,supportsM:sa,isVersioned:ta,supportsAttachment:ua},operations:{supportsEditing:va,supportsAdd:wa,supportsUpdate:xa,supportsDelete:ya,supportsQuery:za,supportsQueryAttachments:Aa}}=a;a=a.operations.supportsChangeTracking;const z=k.isSome(this.associatedLayer)&&k.isSome(this.associatedLayer.infoFor3D)&&
ja.sceneLayerEditingEnabled();return{query:b,editing:{supportsGlobalId:e,supportsReturnServiceEditsInSourceSpatialReference:qa,supportsRollbackOnFailure:h,supportsGeometryUpdate:z&&q,supportsUploadWithItemId:n},data:{supportsAttachment:ua,supportsZ:ra,supportsM:sa,isVersioned:ta},operations:{supportsQuery:za,supportsQueryAttachments:Aa,supportsEditing:va&&a,supportsAdd:z&&wa&&a,supportsDelete:z&&ya&&a,supportsUpdate:xa&&a}}}},{key:"editingEnabled",get:function(){return this._isOverridden("editingEnabled")?
this._get("editingEnabled"):this.userHasEditingPrivileges},set:function(a){this._overrideIfSome("editingEnabled",a)}},{key:"infoFor3D",get:function(){return k.isSome(this.associatedLayer)?this.associatedLayer.infoFor3D:null}},{key:"defaultPopupTemplate",get:function(){return k.isSome(this.associatedLayer)||this.attributeStorageInfo?this.createPopupTemplate():null}},{key:"displayField",get:function(){return k.isSome(this.associatedLayer)?this.associatedLayer.displayField:null}}]);return m}(S.EditBusLayer(x.SceneService(R.ArcGISService(T.OperationalLayer(U.PortalLayer(V.ScaleRangeLayer(c.MultiOriginJSONMixin(Q.APIKeyMixin(P)))))))));
d.__decorate([g.property({types:{key:"type",base:X.FeatureReduction,typeMap:{selection:Y}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],c.prototype,"featureReduction",void 0);d.__decorate([g.property({type:[ea.RangeInfo],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],c.prototype,"rangeInfos",void 0);
d.__decorate([g.property({json:{read:!1}})],c.prototype,"associatedLayer",void 0);d.__decorate([g.property({type:["show","hide"]})],c.prototype,"listMode",void 0);d.__decorate([g.property({type:["ArcGISSceneServiceLayer"]})],c.prototype,"operationalLayerType",void 0);d.__decorate([g.property({json:{read:!1},readOnly:!0})],c.prototype,"type",void 0);d.__decorate([g.property({...w.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],c.prototype,"fields",void 0);d.__decorate([g.property()],
c.prototype,"types",null);d.__decorate([g.property()],c.prototype,"typeIdField",null);d.__decorate([g.property()],c.prototype,"formTemplate",null);d.__decorate([g.property({readOnly:!0})],c.prototype,"fieldsIndex",null);d.__decorate([g.property({type:da,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],c.prototype,"floorInfo",void 0);d.__decorate([g.property(w.outFields)],c.prototype,"outFields",void 0);d.__decorate([g.property({type:v.I3SNodePageDefinition,
readOnly:!0,json:{read:!1}})],c.prototype,"nodePages",void 0);d.__decorate([t.reader("service","nodePages",["nodePages","pointNodePages"])],c.prototype,"readNodePages",null);d.__decorate([g.property({type:[v.I3SMaterialDefinition],readOnly:!0})],c.prototype,"materialDefinitions",void 0);d.__decorate([g.property({type:[v.I3STextureSetDefinition],readOnly:!0})],c.prototype,"textureSetDefinitions",void 0);d.__decorate([g.property({type:[v.I3SGeometryDefinition],readOnly:!0})],c.prototype,"geometryDefinitions",
void 0);d.__decorate([g.property({readOnly:!0})],c.prototype,"serviceUpdateTimeStamp",void 0);d.__decorate([g.property({readOnly:!0})],c.prototype,"attributeStorageInfo",void 0);d.__decorate([g.property({readOnly:!0})],c.prototype,"statisticsInfo",void 0);d.__decorate([g.property({type:A.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],c.prototype,"excludeObjectIds",void 0);d.__decorate([g.property({type:String,
json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],c.prototype,"definitionExpression",void 0);d.__decorate([g.property({type:fa,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],c.prototype,"filter",void 0);d.__decorate([g.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],c.prototype,"path",void 0);d.__decorate([g.property(u.elevationInfo)],
c.prototype,"elevationInfo",null);d.__decorate([g.property({type:String})],c.prototype,"geometryType",null);d.__decorate([g.property(u.labelsVisible)],c.prototype,"labelsVisible",void 0);d.__decorate([g.property({type:[ca],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:D.reader},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:D.reader},write:!0}})],c.prototype,"labelingInfo",void 0);d.__decorate([g.property(u.legendEnabled)],c.prototype,"legendEnabled",
void 0);d.__decorate([g.property({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(f,m){if("number"===typeof f&&0<=f&&1>=f)return f;f=m.layerDefinition?.drawingInfo?.transparency;return void 0!==f?ma.transparencyToOpacity(f):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],c.prototype,"opacity",void 0);d.__decorate([g.property({type:["Low",
"High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],c.prototype,"priority",void 0);d.__decorate([g.property({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],c.prototype,"semantic",void 0);d.__decorate([g.property({types:J.webSceneRendererTypes,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],c.prototype,"renderer",null);d.__decorate([g.property({json:{read:!1}})],c.prototype,"cachedDrawingInfo",
void 0);d.__decorate([t.reader("service","cachedDrawingInfo")],c.prototype,"readCachedDrawingInfo",null);d.__decorate([g.property({readOnly:!0,json:{read:!1}})],c.prototype,"capabilities",null);d.__decorate([g.property({type:Boolean,json:{read:!1}})],c.prototype,"editingEnabled",null);d.__decorate([g.property({readOnly:!0,json:{write:!1,read:!1}})],c.prototype,"infoFor3D",null);d.__decorate([g.property(u.popupEnabled)],c.prototype,"popupEnabled",void 0);d.__decorate([g.property({type:I,json:{name:"popupInfo",
write:!0}})],c.prototype,"popupTemplate",void 0);d.__decorate([g.property({readOnly:!0,json:{read:!1}})],c.prototype,"defaultPopupTemplate",null);d.__decorate([g.property({type:String,json:{read:!1}})],c.prototype,"objectIdField",void 0);d.__decorate([t.reader("service","objectIdField",["objectIdField","fields"])],c.prototype,"readObjectIdField",null);d.__decorate([g.property({type:String,json:{read:!1}})],c.prototype,"globalIdField",void 0);d.__decorate([t.reader("service","globalIdField",["globalIdField",
"fields"])],c.prototype,"readGlobalIdField",null);d.__decorate([g.property({readOnly:!0,type:String,json:{read:!1}})],c.prototype,"displayField",null);d.__decorate([g.property({type:String,json:{read:!1}})],c.prototype,"profile",void 0);d.__decorate([t.reader("service","profile",["store.profile"])],c.prototype,"readProfile",null);d.__decorate([g.property({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],c.prototype,"normalReferenceFrame",void 0);
d.__decorate([g.property(u.screenSizePerspectiveEnabled)],c.prototype,"screenSizePerspectiveEnabled",void 0);c=d.__decorate([O.subclass("esri.layers.SceneLayer")],c);const F={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},pa={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};return c});