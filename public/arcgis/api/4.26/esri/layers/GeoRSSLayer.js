// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../config ../request ../symbols ../core/maybe ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/urlUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/arrayUtils ../core/has ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../geometry/Extent ../geometry/support/spatialReferenceUtils ./Layer ./mixins/BlendLayer ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./support/commonProperties ../symbols/Symbol ../symbols/SimpleLineSymbol ../symbols/PictureMarkerSymbol ../symbols/SimpleMarkerSymbol ../symbols/SimpleFillSymbol".split(" "),
function(l,c,q,r,p,t,b,u,v,d,L,M,N,w,x,y,z,A,B,C,D,E,F,m,h,G,n,H,I){const J=["atom","xml"];p={base:h,key:"type",typeMap:{"simple-line":G},errorContext:"symbol"};n={base:h,key:"type",typeMap:{"picture-marker":n,"simple-marker":H},errorContext:"symbol"};h={base:h,key:"type",typeMap:{"simple-fill":I},errorContext:"symbol"};b=function(f){function k(...a){a=K.call(this,...a);a.description=null;a.fullExtent=null;a.legendEnabled=!0;a.lineSymbol=null;a.pointSymbol=null;a.polygonSymbol=null;a.operationalLayerType=
"GeoRSS";a.url=null;a.type="geo-rss";return a}l._inherits(k,f);var K=l._createSuper(k);f=k.prototype;f.normalizeCtorArgs=function(a,e){return"string"===typeof a?{url:a,...e}:a};f.readFeatureCollections=function(a,e){e.featureCollection.layers.forEach(g=>{(g=g.layerDefinition.drawingInfo.renderer.symbol)&&"esriSFS"===g.type&&g.outline?.style.includes("esriSFS")&&(g.outline.style="esriSLSSolid")});return e.featureCollection.layers};f.load=function(a){const e=t.isSome(a)?a.signal:null;this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service",
"Feature Service","Feature Collection","Scene Service"]},a).catch(u.throwIfAbortError).then(()=>this._fetchService(e)).then(g=>{this.read(g,{origin:"service"})}));return Promise.resolve(this)};f.hasDataChanged=async function(){const a=await this._fetchService();this.read(a,{origin:"service",ignoreDefaults:!0});return!0};f._fetchService=async function(a){const e=this.spatialReference;({data:a}=await r(q.geoRSSServiceUrl,{query:{url:this.url,refresh:this.loaded?!0:void 0,outSR:z.isWGS84(e)?void 0:e.wkid??
JSON.stringify(e)},signal:a}));return a};f._hasGeometry=function(a){return this.featureCollections?.some(e=>e.featureSet?.geometryType===a&&0<e.featureSet.features?.length)??!1};l._createClass(k,[{key:"hasPoints",get:function(){return this._hasGeometry("esriGeometryPoint")}},{key:"hasPolylines",get:function(){return this._hasGeometry("esriGeometryPolyline")}},{key:"hasPolygons",get:function(){return this._hasGeometry("esriGeometryPolygon")}},{key:"title",get:function(){const a=this._get("title");
return a&&"defaults"!==this.originOf("title")?a:this.url?v.getFilename(this.url,J)||"GeoRSS":a||""},set:function(a){this._set("title",a)}}]);return k}(B.BlendLayer(E.RefreshableLayer(C.OperationalLayer(D.PortalLayer(F.ScaleRangeLayer(b.MultiOriginJSONMixin(A)))))));c.__decorate([d.property()],b.prototype,"description",void 0);c.__decorate([d.property()],b.prototype,"featureCollections",void 0);c.__decorate([w.reader("service","featureCollections",["featureCollection.layers"])],b.prototype,"readFeatureCollections",
null);c.__decorate([d.property({type:y,json:{name:"lookAtExtent"}})],b.prototype,"fullExtent",void 0);c.__decorate([d.property(m.id)],b.prototype,"id",void 0);c.__decorate([d.property(m.legendEnabled)],b.prototype,"legendEnabled",void 0);c.__decorate([d.property({types:p,json:{write:!0}})],b.prototype,"lineSymbol",void 0);c.__decorate([d.property({type:["show","hide"]})],b.prototype,"listMode",void 0);c.__decorate([d.property({types:n,json:{write:!0}})],b.prototype,"pointSymbol",void 0);c.__decorate([d.property({types:h,
json:{write:!0}})],b.prototype,"polygonSymbol",void 0);c.__decorate([d.property({type:["GeoRSS"]})],b.prototype,"operationalLayerType",void 0);c.__decorate([d.property(m.url)],b.prototype,"url",void 0);c.__decorate([d.property({json:{origins:{service:{read:{source:"name",reader(f){return f||void 0}}}}}})],b.prototype,"title",null);c.__decorate([d.property({readOnly:!0,json:{read:!1},value:"geo-rss"})],b.prototype,"type",void 0);return b=c.__decorate([x.subclass("esri.layers.GeoRSSLayer")],b)});