// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../config ../geometry ../Graphic ../PopupTemplate ../renderers/ClassBreaksRenderer ../renderers/DictionaryRenderer ../renderers/DotDensityRenderer ../renderers/HeatmapRenderer ../renderers/PieChartRenderer ../renderers/Renderer ../renderers/SimpleRenderer ../renderers/UniqueValueRenderer ../renderers/support/jsonUtils ../core/Collection ../core/Error ../core/HandleOwner ../core/Logger ../core/maybe ../core/MultiOriginJSONSupport ../core/object ../core/promiseUtils ../core/reactiveUtils ../core/unitUtils ../core/urlUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/arrayUtils ../core/has ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../core/accessorSupport/decorators/writer ../core/accessorSupport/originUtils ../geometry/Extent ../geometry/projection ../geometry/support/spatialReferenceUtils ./Layer ./mixins/BlendLayer ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/ScaleRangeLayer ./support/arcgisLayerUrl ./support/RouteSymbols ../portal/Portal ../portal/PortalItem ../portal/support/portalItemUtils ../rest/networkService ../rest/route ../rest/support/DirectionLine ../rest/support/DirectionPoint ../rest/support/PointBarrier ../rest/support/PolygonBarrier ../rest/support/PolylineBarrier ../rest/support/RouteInfo ../rest/support/RouteParameters ../rest/support/RouteSettings ../rest/support/Stop ../geometry/SpatialReference ../geometry/Multipoint".split(" "),
function(L,l,S,k,ea,fa,Ka,La,Ma,Na,Oa,Pa,Qa,Ra,ha,x,y,ia,ja,e,ka,la,ma,na,oa,pa,u,Sa,Ta,Ua,z,qa,ra,sa,ta,T,U,ua,va,wa,xa,ya,za,V,Aa,Ba,Ca,Da,Ea,I,J,E,F,G,K,W,Fa,H,C,Ga){function M(d){return d.length?d:null}function N(d){switch(d){case "esriGeometryPoint":return{type:"esriSMS",style:"esriSMSCircle",size:12,color:[0,0,0,0],outline:N("esriGeometryPolyline")};case "esriGeometryPolyline":return{type:"esriSLS",style:"esriSLSSolid",width:1,color:[0,0,0,0]};case "esriGeometryPolygon":return{type:"esriSFS",
style:"esriSFSNull",outline:N("esriGeometryPolyline")}}}function Ha(d,n,A){const a=n.networkDataset?.networkAttributes?.filter(({usageType:f})=>"cost"===f)??[],b=A.travelMode??n.defaultTravelMode;if(e.isNone(b))X.warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");else{var {timeAttributeName:c,distanceAttributeName:h}=b,m=a.find(({name:f})=>f===c),q=a.find(({name:f})=>f===h),v=e.unwrap(A.travelMode)?.impedanceAttributeName??
e.unwrap(A.impedanceAttribute)??n.impedance;m=m?.units;q=q?.units;if(!m||!q)throw new y("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");var g=A.directionsLanguage??n.directionsLanguage,w=e.unwrap(A.accumulateAttributes)??n.accumulateAttributeNames??[],r=new Set(a.filter(({name:f})=>f===c||f===h||f===v||null!=f&&w.includes(f)).map(({name:f})=>f));n=f=>{for(const Y in f)r.has(Y)||delete f[Y]};for(var p of d.pointBarriers)e.isSome(p.costs)&&(p.addedCost=
p.costs[v]??0,n(p.costs));for(const f of d.polygonBarriers)e.isSome(f.costs)&&(f.scaleFactor=f.costs[v]??1,n(f.costs));for(const f of d.polylineBarriers)e.isSome(f.costs)&&(f.scaleFactor=f.costs[v]??1,n(f.costs));({routeInfo:p}=d);var {findBestSequence:t,preserveFirstStop:B,preserveLastStop:O,startTimeIsUTC:P,timeWindowsAreUTC:Q}=A;p.analysisSettings=new Fa({accumulateAttributes:w,directionsLanguage:g,findBestSequence:t,preserveFirstStop:B,preserveLastStop:O,startTimeIsUTC:P,timeWindowsAreUTC:Q,travelMode:b});
p.totalDuration=D(p.totalCosts?.[c]??0,m);p.totalDistance=R(p.totalCosts?.[h]??0,q);p.totalLateDuration=D(p.totalViolations?.[c]??0,m);p.totalWaitDuration=D(p.totalWait?.[c]??0,m);e.isSome(p.totalCosts)&&n(p.totalCosts);e.isSome(p.totalViolations)&&n(p.totalViolations);e.isSome(p.totalWait)&&n(p.totalWait);for(const f of d.stops)e.isSome(f.serviceCosts)&&(f.serviceDuration=D(f.serviceCosts[c]??0,m),f.serviceDistance=R(f.serviceCosts[h]??0,q),n(f.serviceCosts)),e.isSome(f.cumulativeCosts)&&(f.cumulativeDuration=
D(f.cumulativeCosts[c]??0,m),f.cumulativeDistance=R(f.cumulativeCosts[h]??0,q),n(f.cumulativeCosts)),e.isSome(f.violations)&&(f.lateDuration=D(f.violations[c]??0,m),n(f.violations)),e.isSome(f.wait)&&(f.waitDuration=D(f.wait[c]??0,m),n(f.wait))}}async function Z(d){const n=C.WGS84;await T.initializeProjection(d.spatialReference,n);return T.project(d,n)}function D(d,n){switch(n){case "seconds":return d/60;case "hours":return 60*d;case "days":return 1440*d;default:return d}}function R(d,n){return"decimal-degrees"===
n||"points"===n||"unknown"===n?d:oa.convertUnit(d,n,"meters")}const Ia=x.ofType(I),Ja=x.ofType(J),aa=x.ofType(E),ba=x.ofType(F),ca=x.ofType(G),da=x.ofType(H),X=ja.getLogger("esri.layers.RouteLayer");k=function(d){function n(a){var b=A.call(this,a);b._cachedServiceDescription=null;b._featureCollection=null;b._type="Feature Collection";b.defaultSymbols=new V;b.directionLines=null;b.directionPoints=null;b.featureCollectionType="route";b.legendEnabled=!1;b.maxScale=0;b.minScale=0;b.pointBarriers=new aa;
b.polygonBarriers=new ba;b.polylineBarriers=new ca;b.routeInfo=null;b.spatialReference=C.WGS84;b.stops=new da;b.type="route";a=()=>{b._setStopSymbol(b.stops)};b.addHandles(na.on(()=>b.stops,"change",a,{sync:!0,onListenerAdd:a}));return b}L._inherits(n,d);var A=L._createSuper(n);d=n.prototype;d.writeFeatureCollectionWebmap=function(a,b,c,h){a=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),
this._writeStops()].filter(m=>!!m);c=a.map((m,q)=>q);la.setDeepValue("web-map"===h.origin?"featureCollection.layers":"layers",a,b);b.opacity=this.opacity;b.visibility=this.visible;b.visibleLayers=c};d.readDirectionLines=function(a,b){return this._getNetworkFeatures(b,"DirectionLines",c=>I.fromGraphic(c))};d.readDirectionPoints=function(a,b){return this._getNetworkFeatures(b,"DirectionPoints",c=>J.fromGraphic(c))};d.readMaxScale=function(a,b){return("layers"in b?b.layers:b.featureCollection?.layers)?.find(c=>
e.isSome(c.layerDefinition.maxScale))?.layerDefinition.maxScale??0};d.readMinScale=function(a,b){return("layers"in b?b.layers:b.featureCollection?.layers)?.find(c=>e.isSome(c.layerDefinition.minScale))?.layerDefinition.minScale??0};d.readPointBarriers=function(a,b){return this._getNetworkFeatures(b,"Barriers",c=>E.fromGraphic(c))};d.readPolygonBarriers=function(a,b){return this._getNetworkFeatures(b,"PolygonBarriers",c=>F.fromGraphic(c))};d.readPolylineBarriers=function(a,b){return this._getNetworkFeatures(b,
"PolylineBarriers",c=>G.fromGraphic(c))};d.readRouteInfo=function(a,b){a=this._getNetworkFeatures(b,"RouteInfo",c=>K.fromGraphic(c));return 0<a.length?a.getItemAt(0):null};d.readSpatialReference=function(a,b){a="layers"in b?b.layers:b.featureCollection?.layers;if(!a?.length)return C.WGS84;const {layerDefinition:c,featureSet:h}=a[0];a=e.unwrap(h.features[0]?.geometry)?.spatialReference??h.spatialReference??c.spatialReference??c.extent.spatialReference??U.WGS84;return C.fromJSON(a)};d.readStops=function(a,
b){return this._getNetworkFeatures(b,"Stops",c=>H.fromGraphic(c),c=>this._setStopSymbol(c))};d.load=function(a){this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},a));return Promise.resolve(this)};d.removeAll=function(){this.removeResult();this.pointBarriers.removeAll();this.polygonBarriers.removeAll();this.polylineBarriers.removeAll();this.stops.removeAll()};d.removeResult=function(){e.isSome(this.directionLines)&&(this.directionLines.removeAll(),this._set("directionLines",
null));e.isSome(this.directionPoints)&&(this.directionPoints.removeAll(),this._set("directionPoints",null));e.isSome(this.routeInfo)&&this._set("routeInfo",null)};d.save=async function(){await this.load();const {fullExtent:a,portalItem:b}=this;if(!b)throw new y("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!b.id)throw new y("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if("Feature Collection"!==b.type)throw new y("routelayer:portal-item-wrong-type",
'Portal item needs to have type "Feature Collection"');if(e.isNone(this.routeInfo))throw new y("routelayer:route-unsolved","save() requires a solved route");var {portal:c}=b;await c.signIn();c.user||await b.reload();const {itemUrl:h,itemControl:m}=b;if("admin"!==m&&"update"!==m)throw new y("routelayer:insufficient-permissions","To save this layer, you need to be the owner or an administrator of your organization");const q=h?pa.urlToObject(h):void 0;c=this.write(void 0,{messages:[],origin:"portal-item",
portal:c,url:q,writtenProperties:[]});b.extent=await Z(a);b.title=this.title;await b.update({data:c});return b};d.saveAs=async function(a,b={}){await this.load();if(e.isNone(this.routeInfo))throw new y("routelayer:route-unsolved","saveAs() requires a solved route");a=Ba.from(a).clone();a.extent??(a.extent=await Z(this.fullExtent));a.id=null;a.portal??(a.portal=Aa.getDefault());a.title??(a.title=this.title);a.type="Feature Collection";a.typeKeywords=["Data","Feature Collection",Ca.TypeKeyword.MULTI_LAYER,
"Route Layer"];const {portal:c}=a,h={messages:[],origin:"portal-item",portal:c,url:null,writtenProperties:[]};await c.signIn();b=b?.folder;const m=this.write(void 0,h);await c.user?.addItem({item:a,folder:b,data:m});this.portalItem=a;sa.updateOrigins(h);return h.portalItem=a};d.solve=async function(a,b){var c=a?.stops??this.stops;const h=a?.pointBarriers??M(this.pointBarriers),m=a?.polylineBarriers??M(this.polylineBarriers),q=a?.polygonBarriers??M(this.polygonBarriers);if(e.isNone(c))throw new y("routelayer:undefined-stops",
"the route layer must have stops defined in the route parameters.");if(("esri.rest.support.FeatureSet"===c.declaredClass||"esri.rest.support.NetworkFeatureSet"===c.declaredClass)&&2>c.features.length||x.isCollection(c)&&2>c.length)throw new y("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");if(x.isCollection(c))for(var v of c)v.routeName=null;const g=this.url;v=await this._getServiceDescription(g,a?.apiKey,b);var w=a?.travelMode??v.defaultTravelMode;
const r=e.unwrap(a?.accumulateAttributes)??[];e.isSome(w)&&(r.push(w.distanceAttributeName),w.timeAttributeName&&r.push(w.timeAttributeName));w={startTime:new Date};c={accumulateAttributes:r,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:h,polylineBarriers:m,polygonBarriers:q,preserveFirstStop:!0,preserveLastStop:!0,returnBarriers:!!h,returnDirections:!0,returnPolygonBarriers:!!q,returnPolylineBarriers:!!m,returnRoutes:!0,returnStops:!0,stops:c};a=a?W.from(a):new W;for(const t in w)null==
a[t]&&(a[t]=w[t]);a.set(c);let p;try{p=await Ea.solve(g,a,b)}catch(t){throw ma.isAbortError(t)?t:new y("routelayer:failed-route-request","the routing request failed",{error:t});}b=this._toRouteLayerSolution(p);this._isOverridden("title")||(this.title=e.unwrapOrValue(b.routeInfo.name,"Route"));Ha(b,v,a);return b};d.update=function(a){const {stops:b,directionLines:c,directionPoints:h,pointBarriers:m,polylineBarriers:q,polygonBarriers:v,routeInfo:g}=a;this.set({stops:b,pointBarriers:m,polylineBarriers:q,
polygonBarriers:v});this._set("directionLines",c);this._set("directionPoints",h);this._set("routeInfo",g);e.isSome(g.geometry)&&(this.spatialReference=g.geometry.spatialReference)};d._getNetworkFeatures=function(a,b,c,h){a=("layers"in a?a.layers:a.featureCollection?.layers)?.find(t=>t.layerDefinition.name===b);if(e.isNone(a))return new x;const {layerDefinition:m,popupInfo:q,featureSet:v}=a;a=m.drawingInfo.renderer;const {features:g}=v,w=v.spatialReference??m.spatialReference??m.extent.spatialReference??
U.WGS84,r=a&&ha.read(a),p=C.fromJSON(w);a=g.map(t=>{const B=ea.fromJSON(t);e.isSome(B.geometry)&&e.isSome(t.geometry)&&e.isNone(t.geometry.spatialReference)&&(B.geometry.spatialReference=p);t=c(B);t.symbol??(t.symbol=r?.getSymbol(B)??this._getNetworkSymbol(b));t.popupTemplate??(t.popupTemplate=q&&fa.fromJSON(q));return t});h&&a.some(t=>!t.symbol)&&h(a);return new x(a)};d._getNetworkSymbol=function(a){switch(a){case "Barriers":return this.defaultSymbols.pointBarriers;case "DirectionPoints":return this.defaultSymbols.directionPoints;
case "DirectionLines":return this.defaultSymbols.directionLines;case "PolylineBarriers":return this.defaultSymbols.polylineBarriers;case "PolygonBarriers":return this.defaultSymbols.polygonBarriers;case "RouteInfo":return this.defaultSymbols.routeInfo;case "Stops":return null}};d._getServiceDescription=async function(a,b,c){if(e.isSome(this._cachedServiceDescription)&&this._cachedServiceDescription.url===a)return this._cachedServiceDescription.serviceDescription;b=await Da.fetchServiceDescription(a,
b,c);this._cachedServiceDescription={serviceDescription:b,url:a};return b};d._setStopSymbol=function(a){if(a&&0!==a.length&&!e.isNone(this.defaultSymbols.stops)&&!a.every(r=>e.isSome(r.symbol))){var {first:b,last:c,middle:h,unlocated:m,waypoint:q,break:v}=this.defaultSymbols.stops;if(e.isNone(this.routeInfo)||1===a.length)a.forEach((r,p)=>{switch(p){case 0:r.symbol=b;break;case a.length-1:r.symbol=c;break;default:r.symbol=h}});else{var g=a.map(r=>r.sequence).filter(r=>e.isSome(r)),w=Math.min(...g);
g=Math.max(...g);for(const r of a)r.symbol=r.sequence===w?b:r.sequence===g?c:"ok"!==r.status&&"not-located-on-closest"!==r.status?m:"waypoint"===r.locationType?q:"break"===r.locationType?v:h}}};d._toRouteLayerSolution=function(a){var b=a.routeResults[0].stops?.map(g=>H.fromJSON(g.toJSON()));this._setStopSymbol(b);b=new da(b);const c=new ba(a.polygonBarriers?.map(g=>{g=F.fromJSON(g.toJSON());g.symbol=this.defaultSymbols.polygonBarriers;return g})),h=new ca(a.polylineBarriers?.map(g=>{g=G.fromJSON(g.toJSON());
g.symbol=this.defaultSymbols.polylineBarriers;return g})),m=new aa(a.pointBarriers?.map(g=>{g=E.fromJSON(g.toJSON());g.symbol=this.defaultSymbols.pointBarriers;return g}));var q=a.routeResults[0].route?.toJSON();q=K.fromJSON(q);q.symbol=this.defaultSymbols.routeInfo;const v=new Ja(a.routeResults[0].directionPoints?.features.map(g=>{g=J.fromJSON(g.toJSON());g.symbol=this.defaultSymbols.directionPoints;return g}));return{directionLines:new Ia(a.routeResults[0].directionLines?.features.map(g=>{g=I.fromJSON(g.toJSON());
g.symbol=this.defaultSymbols.directionLines;return g})),directionPoints:v,pointBarriers:m,polygonBarriers:c,polylineBarriers:h,routeInfo:q,stops:b}};d._writeDirectionLines=function(){return this._writeNetworkFeatures(this.directionLines,this.defaultSymbols.directionLines,"esriGeometryPolyline",I.fields,I.popupInfo,"DirectionLines","Direction Lines")};d._writeDirectionPoints=function(){return this._writeNetworkFeatures(this.directionPoints,this.defaultSymbols.directionPoints,"esriGeometryPoint",J.fields,
J.popupInfo,"DirectionPoints","Direction Points")};d._writeNetworkFeatures=function(a,b,c,h,m,q,v){if(e.isNone(a)||!a.length)return null;const g=this.spatialReference.toJSON(),{fullExtent:w,maxScale:r,minScale:p}=this;return{featureSet:{features:a.toArray().map(t=>{const {attributes:B,geometry:O,popupTemplate:P,symbol:Q}=t.toGraphic().toJSON();return{attributes:B,geometry:O,popupInfo:P,symbol:Q}}),geometryType:c,spatialReference:g},layerDefinition:{capabilities:"Query,Update,Editing",drawingInfo:{renderer:{type:"simple",
symbol:e.isSome(b)?b.toJSON():N(c)}},extent:w.toJSON(),fields:h,geometryType:c,hasM:!1,hasZ:!1,maxScale:r,minScale:p,name:q,objectIdField:"ObjectID",spatialReference:g,title:v,type:"Feature Layer",typeIdField:""},popupInfo:m}};d._writePointBarriers=function(){return this._writeNetworkFeatures(this.pointBarriers,this.defaultSymbols.pointBarriers,"esriGeometryPoint",E.fields,E.popupInfo,"Barriers","Point Barriers")};d._writePolygonBarriers=function(){return this._writeNetworkFeatures(this.polygonBarriers,
this.defaultSymbols.polygonBarriers,"esriGeometryPolygon",F.fields,F.popupInfo,"PolygonBarriers","Polygon Barriers")};d._writePolylineBarriers=function(){return this._writeNetworkFeatures(this.polylineBarriers,this.defaultSymbols.polylineBarriers,"esriGeometryPolyline",G.fields,G.popupInfo,"PolylineBarriers","Line Barriers")};d._writeRouteInfo=function(){return this._writeNetworkFeatures(e.isSome(this.routeInfo)?new x([this.routeInfo]):null,this.defaultSymbols.routeInfo,"esriGeometryPolyline",K.fields,
K.popupInfo,"RouteInfo","Route Details")};d._writeStops=function(){const a=this._writeNetworkFeatures(this.stops,null,"esriGeometryPoint",H.fields,H.popupInfo,"Stops","Stops");if(e.isNone(a))return null;var {stops:b}=this.defaultSymbols;const c=e.isSome(b)&&e.isSome(b.first)&&b.first.toJSON(),h=e.isSome(b)&&e.isSome(b.middle)&&b.middle.toJSON();b=e.isSome(b)&&e.isSome(b.last)&&b.last.toJSON();a.layerDefinition.drawingInfo.renderer={type:"uniqueValue",field1:"Sequence",defaultSymbol:h,uniqueValueInfos:[{value:"1",
symbol:c,label:"First Stop"},{value:`${this.stops.length}`,symbol:b,label:"Last Stop"}]};return a};L._createClass(n,[{key:"fullExtent",get:function(){var a=new ta({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:C.WGS84});if(e.isSome(this.routeInfo)&&e.isSome(this.routeInfo.geometry))return this.routeInfo.geometry.extent??a;if(e.isNone(this.stops))return a;const b=this.stops.filter(h=>e.isSome(h.geometry));if(2>b.length)return a;const {spatialReference:c}=b.getItemAt(0).geometry;if(e.isNone(c))return a;
a=b.toArray().map(h=>{h=h.geometry;return[h.x,h.y]});return(new Ga({points:a,spatialReference:c})).extent}},{key:"title",get:function(){return e.isSome(this.routeInfo)&&e.isSome(this.routeInfo.name)?this.routeInfo.name:"Route"},set:function(a){this._overrideIfSome("title",a)}},{key:"url",get:function(){return S.routeServiceUrl},set:function(a){null==a?this._set("url",S.routeServiceUrl):this._set("url",za.sanitizeUrl(a,X))}}]);return n}(va.BlendLayer(ya.ScaleRangeLayer(wa.OperationalLayer(xa.PortalLayer(ka.MultiOriginJSONMixin(ia.HandleOwnerMixin(ua)))))));
l.__decorate([u.property({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:null==this.portalItem}}}}}}})],k.prototype,"_featureCollection",void 0);l.__decorate([ra.writer(["web-map","portal-item"],"_featureCollection")],k.prototype,"writeFeatureCollectionWebmap",null);l.__decorate([u.property({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:null!=
this.portalItem}}}}}}})],k.prototype,"_type",void 0);l.__decorate([u.property({nonNullable:!0,type:V})],k.prototype,"defaultSymbols",void 0);l.__decorate([u.property({readOnly:!0})],k.prototype,"directionLines",void 0);l.__decorate([z.reader(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],k.prototype,"readDirectionLines",null);l.__decorate([u.property({readOnly:!0})],k.prototype,"directionPoints",void 0);l.__decorate([z.reader(["web-map","portal-item"],"directionPoints",
["layers","featureCollection.layers"])],k.prototype,"readDirectionPoints",null);l.__decorate([u.property({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],k.prototype,"featureCollectionType",void 0);l.__decorate([u.property({readOnly:!0})],k.prototype,"fullExtent",null);l.__decorate([u.property({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],k.prototype,"legendEnabled",void 0);l.__decorate([u.property({type:["show","hide"]})],k.prototype,"listMode",
void 0);l.__decorate([u.property({type:Number,nonNullable:!0,json:{write:!1}})],k.prototype,"maxScale",void 0);l.__decorate([z.reader(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],k.prototype,"readMaxScale",null);l.__decorate([u.property({type:Number,nonNullable:!0,json:{write:!1}})],k.prototype,"minScale",void 0);l.__decorate([z.reader(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],k.prototype,"readMinScale",null);l.__decorate([u.property({type:["ArcGISFeatureLayer"],
value:"ArcGISFeatureLayer"})],k.prototype,"operationalLayerType",void 0);l.__decorate([u.property({nonNullable:!0,type:x.ofType(E)})],k.prototype,"pointBarriers",void 0);l.__decorate([z.reader(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],k.prototype,"readPointBarriers",null);l.__decorate([u.property({nonNullable:!0,type:x.ofType(F)})],k.prototype,"polygonBarriers",void 0);l.__decorate([z.reader(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],
k.prototype,"readPolygonBarriers",null);l.__decorate([u.property({nonNullable:!0,type:x.ofType(G)})],k.prototype,"polylineBarriers",void 0);l.__decorate([z.reader(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],k.prototype,"readPolylineBarriers",null);l.__decorate([u.property({readOnly:!0})],k.prototype,"routeInfo",void 0);l.__decorate([z.reader(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],k.prototype,"readRouteInfo",null);l.__decorate([u.property({type:C})],
k.prototype,"spatialReference",void 0);l.__decorate([z.reader(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],k.prototype,"readSpatialReference",null);l.__decorate([u.property({nonNullable:!0,type:x.ofType(H)})],k.prototype,"stops",void 0);l.__decorate([z.reader(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],k.prototype,"readStops",null);l.__decorate([u.property()],k.prototype,"title",null);l.__decorate([u.property({readOnly:!0,json:{read:!1}})],
k.prototype,"type",void 0);l.__decorate([u.property()],k.prototype,"url",null);return k=l.__decorate([qa.subclass("esri.layers.RouteLayer")],k)});