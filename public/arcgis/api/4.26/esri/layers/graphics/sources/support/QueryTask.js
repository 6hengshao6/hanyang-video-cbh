// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("require ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/Accessor ../../../../core/Error ../../../../core/has ../../../../core/maybe ../../../../core/promiseUtils ../../../../core/urlUtils ../../../../core/accessorSupport/decorators/property ../../../../core/accessorSupport/ensureType ../../../../core/arrayUtils ../../../../core/accessorSupport/decorators/subclass ../../../support/source/DataLayerSource ../../../../rest/utils ../../../../rest/query/executeForCount ../../../../rest/query/executeForExtent ../../../../rest/query/executeForIds ../../../../rest/query/executeQueryJSON ../../../../rest/query/executeQueryPBF ../../../../rest/support/FeatureSet ../../../../rest/support/Query".split(" "),
function(k,t,l,h,x,y,p,n,z,m,R,S,A,v,B,C,D,E,F,G,H,I){const w=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"}));h=function(e){function r(a){a=J.call(this,a);a.dynamicDataSource=null;a.fieldsIndex=null;a.gdbVersion=null;a.infoFor3D=null;a.pbfSupported=!1;a.queryAttachmentsSupported=!1;a.sourceSpatialReference=null;a.url=null;return a}t._inherits(r,e);var J=t._createSuper(r);e=r.prototype;e.execute=async function(a,b){const c=await this.executeJSON(a,
b);return this.featureSetFromJSON(a,c,b)};e.executeJSON=async function(a,b){const c=this._normalizeQuery(a);a=null!=a.outStatistics?.[0];const f=y("featurelayer-pbf-statistics");a=!a||f;let d;if(this.pbfSupported&&a)try{d=await G.executeRawQueryPBF(this.url,c,b)}catch(g){if("query:parsing-pbf"===g.name)this.pbfSupported=!1;else throw g;}this.pbfSupported&&a||(d=await F.executeRawQueryJSON(this.url,c,b));this._normalizeFields(d.fields);return d};e.featureSetFromJSON=async function(a,b,c){if(!this._queryIs3DObjectFormat(a)||
p.isNone(this.infoFor3D)||!b.assetMaps||!b.features||!b.features.length)return H.fromJSON(b);({meshFeatureSetFromJSON:c}=await n.whenOrAbort(new Promise((f,d)=>k(["../../../../rest/support/meshFeatureSet"],f,d)),c));return c(a,this.infoFor3D,b)};e.executeForCount=function(a,b){return C.executeForCount(this.url,this._normalizeQuery(a),b)};e.executeForExtent=function(a,b){return D.executeForExtent(this.url,this._normalizeQuery(a),b)};e.executeForIds=function(a,b){return E.executeForIds(this.url,this._normalizeQuery(a),
b)};e.executeRelationshipQuery=async function(a,b){const [{default:c},{executeRelationshipQuery:f}]=await n.whenOrAbort(Promise.all([new Promise((d,g)=>k(["../../../../rest/support/RelationshipQuery"],q=>d(w(q)),g)),new Promise((d,g)=>k(["../../../../rest/query/executeRelationshipQuery"],d,g))]),b);a=c.from(a);if(this.gdbVersion||this.dynamicDataSource)a=a.clone(),a.gdbVersion=a.gdbVersion||this.gdbVersion,a.dynamicDataSource=a.dynamicDataSource||this.dynamicDataSource;return f(this.url,a,b)};e.executeRelationshipQueryForCount=
async function(a,b){const [{default:c},{executeRelationshipQueryForCount:f}]=await n.whenOrAbort(Promise.all([new Promise((d,g)=>k(["../../../../rest/support/RelationshipQuery"],q=>d(w(q)),g)),new Promise((d,g)=>k(["../../../../rest/query/executeRelationshipQuery"],d,g))]),b);a=c.from(a);if(this.gdbVersion||this.dynamicDataSource)a=a.clone(),a.gdbVersion=a.gdbVersion||this.gdbVersion,a.dynamicDataSource=a.dynamicDataSource||this.dynamicDataSource;return f(this.url,a,b)};e.executeAttachmentQuery=async function(a,
b){const {executeAttachmentQuery:c,fetchAttachments:f,processAttachmentQueryResult:d}=await n.whenOrAbort(new Promise((q,u)=>k(["../../../../rest/query/operations/queryAttachments"],q,u)),b),g=B.parseUrl(this.url);a=await (this.queryAttachmentsSupported?c(g,a,b):f(g,a,b));return d(g,a)};e.executeTopFeaturesQuery=async function(a,b){const {executeTopFeaturesQuery:c}=await n.whenOrAbort(new Promise((f,d)=>k(["../../../../rest/query/executeTopFeaturesQuery"],f,d)),b);return c(this.parsedUrl,a,this.sourceSpatialReference,
b)};e.executeForTopIds=async function(a,b){const {executeForTopIds:c}=await n.whenOrAbort(new Promise((f,d)=>k(["../../../../rest/query/executeForTopIds"],f,d)),b);return c(this.parsedUrl,a,b)};e.executeForTopExtents=async function(a,b){const {executeForTopExtents:c}=await n.whenOrAbort(new Promise((f,d)=>k(["../../../../rest/query/executeForTopExtents"],f,d)),b);return c(this.parsedUrl,a,b)};e.executeForTopCount=async function(a,b){const {executeForTopCount:c}=await n.whenOrAbort(new Promise((f,
d)=>k(["../../../../rest/query/executeForTopCount"],f,d)),b);return c(this.parsedUrl,a,b)};e._normalizeQuery=function(a){let b=I.from(a);b.sourceSpatialReference=b.sourceSpatialReference||this.sourceSpatialReference;if(this.gdbVersion||this.dynamicDataSource)b=b===a?b.clone():b,b.gdbVersion=a.gdbVersion||this.gdbVersion,b.dynamicDataSource=a.dynamicDataSource?v.DataLayerSource.from(a.dynamicDataSource):this.dynamicDataSource;if(p.isSome(this.infoFor3D)&&this._queryIs3DObjectFormat(a)){b=b===a?b.clone():
b;b.formatOf3DObjects=null;for(const c of this.infoFor3D.queryFormats){if("3D_glb"===c){b.formatOf3DObjects=c;break}"3D_gltf"!==c||b.formatOf3DObjects||(b.formatOf3DObjects=c)}if(!b.formatOf3DObjects)throw new x("query:unsupported-3d-query-formats","Could not find any supported 3D object query format. Only supported formats are 3D_glb and 3D_gltf");if(p.isNone(b.outFields)||!b.outFields.includes("*")){b=b===a?b.clone():b;p.isNone(b.outFields)&&(b.outFields=[]);const {originX:c,originY:f,originZ:d,
translationX:g,translationY:q,translationZ:u,scaleX:K,scaleY:L,scaleZ:M,rotationX:N,rotationY:O,rotationZ:P,rotationDeg:Q}=this.infoFor3D.transformFieldRoles;b.outFields.push(c,f,d,g,q,u,K,L,M,N,O,P,Q)}}return b};e._normalizeFields=function(a){if(p.isSome(this.fieldsIndex)&&p.isSome(a))for(const b of a)(a=this.fieldsIndex.get(b.name))&&Object.assign(b,a.toJSON())};e._queryIs3DObjectFormat=function(a){return p.isSome(this.infoFor3D)&&!0===a.returnGeometry&&"xyFootprint"!==a.multipatchOption&&!a.outStatistics};
t._createClass(r,[{key:"parsedUrl",get:function(){return z.urlToObject(this.url)}}]);return r}(h);l.__decorate([m.property({type:v.DataLayerSource})],h.prototype,"dynamicDataSource",void 0);l.__decorate([m.property()],h.prototype,"fieldsIndex",void 0);l.__decorate([m.property()],h.prototype,"gdbVersion",void 0);l.__decorate([m.property()],h.prototype,"infoFor3D",void 0);l.__decorate([m.property({readOnly:!0})],h.prototype,"parsedUrl",null);l.__decorate([m.property()],h.prototype,"pbfSupported",void 0);
l.__decorate([m.property()],h.prototype,"queryAttachmentsSupported",void 0);l.__decorate([m.property()],h.prototype,"sourceSpatialReference",void 0);l.__decorate([m.property({type:String})],h.prototype,"url",void 0);return h=l.__decorate([A.subclass("esri.tasks.QueryTask")],h)});