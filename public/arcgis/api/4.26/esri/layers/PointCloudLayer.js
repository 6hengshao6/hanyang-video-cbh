// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../PopupTemplate ../request ../core/Error ../core/lang ../core/Logger ../core/maybe ../core/MultiOriginJSONSupport ../core/object ../core/promiseUtils ../core/urlUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../core/accessorSupport/decorators/writer ./Layer ./mixins/APIKeyMixin ./mixins/ArcGISService ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/ScaleRangeLayer ./mixins/SceneService ./pointCloudFilters/typeUtils ./support/commonProperties ./support/Field ./support/fieldProperties ../popup/ExpressionInfo ../renderers/support/pointCloud/typeUtils ../support/popupUtils".split(" "),
function(n,d,x,y,l,z,u,A,c,B,C,D,g,p,E,F,G,H,I,J,K,L,M,q,N,r,t,O,v,w,P){p=O.defineFieldProperties();c=function(e){function m(...a){a=Q.call(this,...a);a.operationalLayerType="PointCloudLayer";a.popupEnabled=!0;a.popupTemplate=null;a.opacity=1;a.filters=[];a.fields=null;a.fieldsIndex=null;a.outFields=null;a.path=null;a.legendEnabled=!0;a.renderer=null;a.type="point-cloud";return a}n._inherits(m,e);var Q=n._createSuper(m);e=m.prototype;e.normalizeCtorArgs=function(a,b){return"string"===typeof a?{url:a,
...b}:a};e.getFieldDomain=function(a){return(a=this.fieldsIndex.get(a))&&a.domain?a.domain:null};e.readServiceFields=function(a,b,h){return Array.isArray(a)?a.map(f=>{const k=new t;"FieldTypeInteger"===f.type&&(f=z.clone(f),f.type="esriFieldTypeInteger");k.read(f,h);return k}):Array.isArray(b.attributeStorageInfo)?b.attributeStorageInfo.map(f=>new t({name:f.name,type:"ELEVATION"===f.name?"double":"integer"})):null};e.writeRenderer=function(a,b,h,f){B.setDeepValue("layerDefinition.drawingInfo.renderer",
a.write({},f),b)};e.load=function(a){const b=A.isSome(a)?a.signal:null;a=this.loadFromPortal({supportedTypes:["Scene Service"]},a).catch(C.throwIfAbortError).then(()=>this._fetchService(b));this.addResolvingPromise(a);return Promise.resolve(this)};e.createPopupTemplate=function(a){if(a=P.createPopupTemplate(this,a))this._formatPopupTemplateReturnsField(a),this._formatPopupTemplateRGBField(a);return a};e._formatPopupTemplateReturnsField=function(a){const b=this.fieldsIndex.get("RETURNS");if(b){var h=
a.fieldInfos?.find(k=>k.fieldName===b.name);if(h){var f=new v({name:"pcl-returns-decoded",title:b.alias||b.name,expression:`\n        var returnValue = $feature.${b.name};\n        return (returnValue % 16) + " / " + Floor(returnValue / 16);\n      `});a.expressionInfos=[...(a.expressionInfos||[]),f];h.fieldName="expression/pcl-returns-decoded"}}};e._formatPopupTemplateRGBField=function(a){const b=this.fieldsIndex.get("RGB");if(b){var h=a.fieldInfos?.find(k=>k.fieldName===b.name);if(h){var f=new v({name:"pcl-rgb-decoded",
title:b.alias||b.name,expression:`\n        var rgb = $feature.${b.name};\n        var red = Floor(rgb / 65536, 0);\n        var green = Floor((rgb - (red * 65536)) / 256,0);\n        var blue = rgb - (red * 65536) - (green * 256);\n\n        return "rgb(" + red + "," + green + "," + blue + ")";\n      `});a.expressionInfos=[...(a.expressionInfos||[]),f];h.fieldName="expression/pcl-rgb-decoded"}}};e.queryCachedStatistics=async function(a,b){await this.load(b);if(!this.attributeStorageInfo)throw new l("scenelayer:no-cached-statistics",
"Cached statistics are not available for this layer");const h=this.fieldsIndex.get(a);if(!h)throw new l("pointcloudlayer:field-unexisting",`Field '${a}' does not exist on the layer`);for(const f of this.attributeStorageInfo)if(f.name===h.name)return a=D.join(this.parsedUrl.path,`./statistics/${f.key}`),y(a,{query:{f:"json",token:this.apiKey},responseType:"json",signal:b?b.signal:null}).then(k=>k.data);throw new l("pointcloudlayer:no-cached-statistics","Cached statistics for this attribute are not available");
};e.saveAs=async function(a,b){return this._debouncedSaveOperations(q.SaveOperationType.SAVE_AS,{...b,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"point-cloud"},a)};e.save=async function(){return this._debouncedSaveOperations(q.SaveOperationType.SAVE,{getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"point-cloud"})};e.validateLayer=function(a){if(a.layerType&&"PointCloud"!==a.layerType)throw new l("pointcloudlayer:layer-type-not-supported","PointCloudLayer does not support this layer type",
{layerType:a.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new l("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"});if(2<this.version.major)throw new l("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"});};e.hasCachedStatistics=function(a){return null!=this.attributeStorageInfo&&this.attributeStorageInfo.some(b=>
b.name===a)};e._getTypeKeywords=function(){return["PointCloud"]};e._validateElevationInfo=function(){const a=this.elevationInfo;a&&("absolute-height"!==a.mode&&u.getLogger(this.declaredClass).warn(".elevationInfo\x3d","Point cloud layers only support absolute-height elevation mode"),a.featureExpressionInfo&&"0"!==a.featureExpressionInfo.expression&&u.getLogger(this.declaredClass).warn(".elevationInfo\x3d","Point cloud layers do not support featureExpressionInfo"))};n._createClass(m,[{key:"defaultPopupTemplate",
get:function(){return this.attributeStorageInfo?this.createPopupTemplate():null}},{key:"elevationInfo",set:function(a){this._set("elevationInfo",a);this._validateElevationInfo()}}]);return m}(q.SceneService(J.ArcGISService(K.OperationalLayer(L.PortalLayer(M.ScaleRangeLayer(c.MultiOriginJSONMixin(I.APIKeyMixin(H))))))));d.__decorate([g.property({type:["PointCloudLayer"]})],c.prototype,"operationalLayerType",void 0);d.__decorate([g.property(r.popupEnabled)],c.prototype,"popupEnabled",void 0);d.__decorate([g.property({type:x,
json:{name:"popupInfo",write:!0}})],c.prototype,"popupTemplate",void 0);d.__decorate([g.property({readOnly:!0,json:{read:!1}})],c.prototype,"defaultPopupTemplate",null);d.__decorate([g.property({readOnly:!0,json:{write:!1,read:!1,origins:{"web-document":{write:!1,read:!1}}}})],c.prototype,"opacity",void 0);d.__decorate([g.property({type:["show","hide"]})],c.prototype,"listMode",void 0);d.__decorate([g.property({types:[N.types],json:{origins:{service:{read:{source:"filters"}}},name:"layerDefinition.filters",
write:!0}})],c.prototype,"filters",void 0);d.__decorate([g.property({type:[t]})],c.prototype,"fields",void 0);d.__decorate([g.property(p.fieldsIndex)],c.prototype,"fieldsIndex",void 0);d.__decorate([E.reader("service","fields",["fields","attributeStorageInfo"])],c.prototype,"readServiceFields",null);d.__decorate([g.property(p.outFields)],c.prototype,"outFields",void 0);d.__decorate([g.property({readOnly:!0})],c.prototype,"attributeStorageInfo",void 0);d.__decorate([g.property(r.elevationInfo)],c.prototype,
"elevationInfo",null);d.__decorate([g.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],c.prototype,"path",void 0);d.__decorate([g.property(r.legendEnabled)],c.prototype,"legendEnabled",void 0);d.__decorate([g.property({types:w.types,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:{target:{"layerDefinition.drawingInfo.renderer":{types:w.types},"layerDefinition.drawingInfo.transparency":{type:Number}}}}})],
c.prototype,"renderer",void 0);d.__decorate([G.writer("renderer")],c.prototype,"writeRenderer",null);d.__decorate([g.property({json:{read:!1},readOnly:!0})],c.prototype,"type",void 0);return c=d.__decorate([F.subclass("esri.layers.PointCloudLayer")],c)});