// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
require({cache:{"esri/layers/graphics/sources/WFSSource":function(){define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../geometry ../../../core/Error ../../../core/HandleOwner ../../../core/has ../../../core/Loadable ../../../core/maybe ../../../core/promiseUtils ../../../core/workers/workers ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/accessorSupport/decorators/subclass ../../../geometry/support/typeUtils ./support/clientSideDefaults ../../ogc/wfsUtils ../../../rest/support/FeatureSet ../../../geometry/Extent".split(" "),
function(r,k,z,t,u,x,V,M,P,G,Q,H,ba,L,J,m,W,N,a,e){r.WFSSource=function(l){function v(){var g=D.apply(this,arguments);g._connection=null;g.capabilities=W.createCapabilities(!1,!1);g.type="wfs";g.refresh=G.debounce(async q=>{await g.load();({extent:q}=await g._connection.invoke("refresh",q));q&&(g.sourceJSON.extent=q);return{dataChanged:!0,updates:{extent:g.sourceJSON.extent}}});return g}k._inherits(v,l);var D=k._createSuper(v);l=v.prototype;l.load=function(g){g=P.isSome(g)?g.signal:null;this.addResolvingPromise(this._startWorker({signal:g}));
return Promise.resolve(this)};l.destroy=function(){this._connection?.close();this._connection=null};l.openPorts=async function(){await this.load();return this._connection.openPorts()};l.queryFeatures=async function(g,q={}){await this.load(q);g=await this._connection.invoke("queryFeatures",g?g.toJSON():null,q);return a.fromJSON(g)};l.queryFeaturesJSON=async function(g,q={}){await this.load(q);return this._connection.invoke("queryFeatures",g?g.toJSON():null,q)};l.queryFeatureCount=async function(g,
q={}){await this.load(q);return this._connection.invoke("queryFeatureCount",g?g.toJSON():null,q)};l.queryObjectIds=async function(g,q={}){await this.load(q);return this._connection.invoke("queryObjectIds",g?g.toJSON():null,q)};l.queryExtent=async function(g,q={}){await this.load(q);g=await this._connection.invoke("queryExtent",g?g.toJSON():null,q);return{count:g.count,extent:e.fromJSON(g.extent)}};l.querySnapping=async function(g,q={}){await this.load(q);return this._connection.invoke("querySnapping",
g,q)};l._createLoadOptions=async function(g){const {url:q,customParameters:F,name:w,namespaceUri:C,spatialReference:R,fields:S,geometryType:K,swapXY:O}=this.layer;if(!q)throw new u("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities||(this.wfsCapabilities=await N.getCapabilities(q,{customParameters:F,...g}));g="fields geometryType name namespaceUri spatialReference swapXY".split(" ").some(X=>null==this.layer[X])?await N.getWFSLayerInfo(this.wfsCapabilities,w,C,{spatialReference:R,
customParameters:F,signal:g?.signal}):{...N.prepareWFSLayerFields(S??[]),geometryType:K,name:w,namespaceUri:C,spatialReference:R,swapXY:O};const B=P.unwrap(N.findFeatureType(this.wfsCapabilities.readFeatureTypes(),g.name,g.namespaceUri)),Z=m.featureGeometryTypeKebabDictionary.toJSON(g.geometryType);return{customParameters:F,featureType:B,fields:g.fields?.map(X=>X.toJSON())??[],geometryField:g.geometryField,geometryType:Z,getFeatureUrl:this.wfsCapabilities.operations.GetFeature.url,getFeatureOutputFormat:this.wfsCapabilities.operations.GetFeature.outputFormat,
objectIdField:g.objectIdField,spatialReference:g.spatialReference.toJSON(),swapXY:!!g.swapXY}};l._startWorker=async function(g){const [q,F]=await G.eachAlways([this._createLoadOptions(g),Q.open("WFSSourceWorker",{...g,strategy:V("feature-layers-workers")?"dedicated":"local"})]);var w=q.error||F.error||null;const C=F.value||null;if(w)throw C&&C.close(),w;w=q.value;this._connection=F.value;this.sourceJSON={extent:(await this._connection.invoke("load",w,g)).extent,fields:w.fields,geometryType:w.geometryType,
objectIdField:w.objectIdField,geometryField:w.geometryField,drawingInfo:W.createDrawingInfo(w.geometryType),name:w.featureType.title,wfsInfo:{name:w.featureType.name,featureUrl:w.getFeatureUrl,maxFeatures:3E3,swapXY:w.swapXY,supportedSpatialReferences:w.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:w.featureType.namespaceUri}}};return k._createClass(v)}(x.HandleOwnerMixin(M));z.__decorate([H.property()],r.WFSSource.prototype,"capabilities",void 0);z.__decorate([H.property({constructOnly:!0})],
r.WFSSource.prototype,"layer",void 0);z.__decorate([H.property()],r.WFSSource.prototype,"sourceJSON",void 0);z.__decorate([H.property()],r.WFSSource.prototype,"type",void 0);z.__decorate([H.property()],r.WFSSource.prototype,"wfsCapabilities",void 0);r.WFSSource=z.__decorate([J.subclass("esri.layers.graphics.sources.WFSSource")],r.WFSSource);Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})})},"esri/layers/ogc/wfsUtils":function(){define("exports ../../geometry ../../request ../../core/Error ../../core/iteratorUtils ../../core/maybe ../../core/promiseUtils ../../core/urlUtils ../../geometry/projection ../../geometry/support/spatialReferenceUtils ../../geometry/support/typeUtils ../graphics/sources/geojson/geojson ./dateUtils ./xmlUtils ../support/Field ../../geometry/SpatialReference ../../geometry/Extent".split(" "),
function(r,k,z,t,u,x,V,M,P,G,Q,H,ba,L,J,m,W){function N(b){b=O(b);Z(b);X(b);b=b.firstElementChild;const c=u.cache(e(b));return{operations:a(b),get featureTypes(){return Array.from(c())},readFeatureTypes:c}}function a(b){let c=!1;const d={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}};L.visitXML(b,{OperationsMetadata:{Operation:n=>{switch(n.getAttribute("name")){case "GetCapabilities":return{DCP:{HTTP:{Get:h=>{d.GetCapabilities.url=
h.getAttribute("xlink:href")}}}};case "DescribeFeatureType":return{DCP:{HTTP:{Get:h=>{d.DescribeFeatureType.url=h.getAttribute("xlink:href")}}}};case "GetFeature":return{DCP:{HTTP:{Get:h=>{d.GetFeature.url=h.getAttribute("xlink:href")}}},Parameter:h=>{if("outputFormat"===h.getAttribute("name"))return{AllowedValues:{Value:p=>{(p=p.textContent)&&fa.has(p.toLowerCase())&&(d.GetFeature.outputFormat=p)}}}}}}},Constraint:n=>{switch(n.getAttribute("name")){case "KVPEncoding":return{DefaultValue:h=>{c="true"===
h.textContent.toLowerCase()}};case "ImplementsResultPaging":return{DefaultValue:h=>{d.GetFeature.supportsPagination="true"===h.textContent.toLowerCase()}}}}}});if(!c)throw new t("wfs-layer:kvp-encoding-not-supported","WFS service doesn't support key/value pair (KVP) encoding");if(x.isNone(d.GetFeature.outputFormat))throw new t("wfs-layer:geojson-not-supported","WFS service doesn't support GeoJSON output format");return d}function e(b){return L.iterateXML(b,{FeatureTypeList:{FeatureType:c=>{const d=
{typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",supportedSpatialReferences:[]},n=new Set([4326]),h=p=>{p=parseInt(p.textContent?.match(/(?<wkid>\d+$)/i)?.groups?.wkid??"",10);Number.isNaN(p)||n.add(p)};L.visitXML(c,{Name:p=>{const {name:y,prefix:A}=B(p.textContent);d.typeName=`${A}:${y}`;d.name=y;d.namespacePrefix=A;d.namespaceUri=p.lookupNamespaceURI(A)},Abstract:p=>{d.description=p.textContent},Title:p=>{d.title=p.textContent},WGS84BoundingBox:p=>
{d.extent=l(p)},DefaultSRS:h,DefaultCRS:h,OtherSRS:h,OtherCRS:h});d.title||(d.title=d.name);d.supportedSpatialReferences.push(...n);return d}}})}function l(b){let c,d,n,h;for(const p of b.children)switch(p.localName){case "LowerCorner":[c,d]=p.textContent.split(" ").map(y=>Number.parseFloat(y));break;case "UpperCorner":[n,h]=p.textContent.split(" ").map(y=>Number.parseFloat(y))}return{xmin:c,ymin:d,xmax:n,ymax:h,spatialReference:G.WGS84}}function v(b,c,d){return u.find(b,n=>d?n.name===c&&n.namespaceUri===
d:n.typeName===c||n.name===c)}async function D(b,c,d,n={}){const {spatialReference:h=m.WGS84}=n;b=b.readFeatureTypes();d=c?v(b,c,d):b.next().value;if(x.isNone(d)){if(c)throw new t("wfs-layer:feature-type-not-found",`The type '${c}' could not be found in the service`);throw new t("wfs-layer:empty-service","The service is empty");}c=new W({...d.extent,spatialReference:h});if(!G.equals(h,G.WGS84))try{await P.initializeProjection(G.WGS84,h,void 0,n),c=P.project(c,G.WGS84)}catch{throw new t("wfs-layer:unsupported-spatial-reference",
"Projection not supported");}return{extent:c,spatialReference:h,featureType:d}}async function g(b,c,d={}){const [n,h]=await V.eachAlways([w(b.operations.DescribeFeatureType.url,c,d),F(b,c,d)]);if(n.error||h.error)throw new t("wfs-layer:getWFSLayerTypeInfo-error",`An error occurred while getting info about the feature type '${c}'`,{error:n.error||h.error});const {fields:p,errors:y}=n.value??{};b=n.value?.geometryType||h.value?.geometryType;d=h.value?.swapXY??!1;if(x.isNone(b))throw new t("wfs-layer:unknown-geometry-type",
`The geometry type could not be determined for type '${c}`,{typeName:c,geometryType:b,fields:p,errors:y});return{...q(p??[]),geometryType:b,swapXY:d}}function q(b){const c=b.find(n=>"geometry"===n.type);let d=b.find(n=>"oid"===n.type);b=b.filter(n=>"geometry"!==n.type);d||(d=new J({name:"__esri_wfs_id__",type:"oid",alias:"__esri_wfs_id__"}),b.unshift(d));return{geometryField:c?.name??null,objectIdField:d.name,fields:b}}async function F(b,c,d={}){let n,h=!1;const [p,y]=await Promise.all([S(b.operations.GetFeature.url,
c,b.operations.GetFeature.outputFormat,{...d,count:1}),z(b.operations.GetFeature.url,{responseType:"text",query:K(c,void 0,{...d,count:1}),signal:d?.signal})]);if(b="FeatureCollection"===p.type&&p.features[0]?.geometry){n=Q.featureGeometryTypeKebabDictionary.fromJSON(H.getGeometryType(b.type));switch(b.type){case "Point":var A=b.coordinates;break;case "LineString":case "MultiPoint":A=b.coordinates[0];break;case "MultiLineString":case "Polygon":A=b.coordinates[0][0];break;case "MultiPolygon":A=b.coordinates[0][0][0]}if(c=
/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(y.data))b=A[0].toFixed(3),A=A[1].toFixed(3),d=parseFloat(c[1]).toFixed(3),c=parseFloat(c[2]).toFixed(3),b===c&&A===d&&(h=!0)}return{geometryType:n,swapXY:h}}async function w(b,c,d){b=await z(b,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:"2.0.0",TYPENAME:c,...d?.customParameters},signal:d?.signal});return C(c,b.data)}function C(b,c){const {name:d}=B(b);c=O(c);X(c);const n=u.find(L.iterateXML(c.firstElementChild,
{element:h=>({name:h.getAttribute("name"),typeName:B(h.getAttribute("type")).name})}),({name:h})=>h===d);if(x.isSome(n)){const h=u.find(L.iterateXML(c.firstElementChild,{complexType:p=>p}),p=>p.getAttribute("name")===n.typeName);if(x.isSome(h))return R(h)}throw new t("wfs-layer:feature-type-not-found",`Type '${b}' not found in document`,{document:(new XMLSerializer).serializeToString(c)});}function R(b){const c=[],d=[];let n=void 0;var h=L.iterateXML(b,{complexContent:{extension:{sequence:{element:p=>
p}}}});for(const p of h){h=p.getAttribute("name");if(!h)continue;let y,A;p.hasAttribute("type")?y=B(p.getAttribute("type")).name:L.visitXML(p,{simpleType:{restriction:da=>{y=B(da.getAttribute("base")).name;return{maxLength:ea=>{A=+ea.getAttribute("value")}}}}});if(!y)continue;const Y="true"===p.getAttribute("nillable");let T=!1;switch(y.toLowerCase()){case "integer":case "nonpositiveinteger":case "negativeinteger":case "long":case "int":case "short":case "byte":case "nonnegativeinteger":case "unsignedlong":case "unsignedint":case "unsignedshort":case "unsignedbyte":case "positiveinteger":d.push(new J({name:h,
alias:h,type:"integer",nullable:Y}));break;case "float":case "double":case "decimal":d.push(new J({name:h,alias:h,type:"double",nullable:Y}));break;case "boolean":case "string":case "gyearmonth":case "gyear":case "gmonthday":case "gday":case "gmonth":case "anyuri":case "qname":case "notation":case "normalizedstring":case "token":case "language":case "idrefs":case "entities":case "nmtoken":case "nmtokens":case "name":case "ncname":case "id":case "idref":case "entity":case "duration":case "time":d.push(new J({name:h,
alias:h,type:"string",nullable:Y,length:A??255}));break;case "datetime":case "date":d.push(new J({name:h,alias:h,type:"date",nullable:Y,length:A??36}));break;case "pointpropertytype":n="point";T=!0;break;case "multipointpropertytype":n="multipoint";T=!0;break;case "curvepropertytype":case "multicurvepropertytype":case "multilinestringpropertytype":n="polyline";T=!0;break;case "surfacepropertytype":case "multisurfacepropertytype":case "multipolygonpropertytype":n="polygon";T=!0;break;case "geometrypropertytype":case "multigeometrypropertytype":T=
!0;c.push(new t("wfs-layer:unknown-geometry-type",`geometry type '${y}' is not supported`,{type:(new XMLSerializer).serializeToString(b)}));break;default:c.push(new t("wfs-layer:unknown-field-type",`Unknown field type '${y}'`,{type:(new XMLSerializer).serializeToString(b)}))}T&&d.push(new J({name:h,alias:h,type:"geometry",nullable:Y}))}for(const p of d)if("integer"===p.type&&!p.nullable&&ha.has(p.name.toLowerCase())){p.type="oid";break}return{geometryType:n,fields:d,errors:c}}async function S(b,c,
d,n){({data:b}=await z(b,{responseType:"text",query:K(c,d,n),signal:n?.signal}));b=b.replace(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{if(n?.dateFields?.length){const h=new Set(n.dateFields);return JSON.parse(b,(p,y)=>h.has(p)?ba.parseDate(y):y)}return JSON.parse(b)}catch(h){throw new t("wfs-layer:malformed-json","Error while parsing the\u00a0response",{response:b,error:h});}}function K(b,c,d){return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:"2.0.0",TYPENAMES:b,OUTPUTFORMAT:c,SRSNAME:"EPSG:4326",
STARTINDEX:d?.startIndex,COUNT:d?.count,...d?.customParameters}}function O(b){return(new DOMParser).parseFromString(b.trim(),"text/xml")}function B(b){const [c,d]=b.split(":");return{prefix:d?c:"",name:d??c}}function Z(b){if((b=b.firstElementChild?.getAttribute("version"))&&"2.0.0"!==b)throw new t("wfs-layer:unsupported-wfs-version",`Unsupported WFS version ${b}. Supported version: ${"2.0.0"}`);}function X(b){let c="",d="";L.visitXML(b.firstElementChild,{Exception:n=>{c=n.getAttribute("exceptionCode");
return{ExceptionText:h=>{d=h.textContent}}}});if(c)throw new t(`wfs-layer:${c}`,d);}const fa=new Set(["json","application/json","geojson","application/json; subtype\x3dgeojson"]),ha=new Set(["objectid","fid"]);r.WFS_OID_FIELD_NAME="__esri_wfs_id__";r.describeFeatureType=w;r.findFeatureType=v;r.getCapabilities=async function(b,c){c=await z(b,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:"2.0.0",...c?.customParameters},signal:c?.signal});c=N(c.data);M.isHTTPSProtocol(b)&&
(M.hasSameOrigin(b,c.operations.DescribeFeatureType.url,!0)&&(c.operations.DescribeFeatureType.url=M.toHTTPS(c.operations.DescribeFeatureType.url)),M.hasSameOrigin(b,c.operations.GetFeature.url,!0)&&(c.operations.GetFeature.url=M.toHTTPS(c.operations.GetFeature.url)));return c};r.getFeature=S;r.getFeatureCount=async function(b,c,d){b=await z(b,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:"2.0.0",TYPENAMES:c,RESULTTYPE:"hits",...d?.customParameters},signal:d?.signal});b=O(b.data);
X(b);b=Number.parseFloat(b.firstElementChild.getAttribute("numberMatched"));return Number.isNaN(b)?0:b};r.getFeatureTypeInfo=D;r.getWFSLayerInfo=async function(b,c,d,n={}){const {featureType:h,extent:p}=await D(b,c,d,n),{fields:y,geometryType:A,swapXY:Y,objectIdField:T,geometryField:da}=await g(b,h.typeName,n);return{url:b.operations.GetCapabilities.url,name:h.name,namespaceUri:h.namespaceUri,fields:y,geometryField:da,geometryType:A,objectIdField:T,spatialReference:n.spatialReference??m.WGS84,extent:p,
swapXY:Y,wfsCapabilities:b,customParameters:n.customParameters}};r.parseDescribeFeatureTypeResponse=C;r.parseGetCapabilitiesResponse=N;r.prepareWFSLayerFields=q;Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})})},"esri/layers/graphics/sources/geojson/geojson":function(){define(["exports","../../../../core/Error","../../OptimizedFeature","../../OptimizedGeometry","../../../support/fieldUtils"],function(r,k,z,t,u){function*x(a){switch(a.type){case "Feature":yield a;break;case "FeatureCollection":for(const e of a.features)e&&
(yield e)}}function*V(a){if(a)switch(a.type){case "Point":yield a.coordinates;break;case "LineString":case "MultiPoint":yield*a.coordinates;break;case "MultiLineString":case "Polygon":for(const e of a.coordinates)yield*e;break;case "MultiPolygon":for(const e of a.coordinates)for(const l of e)yield*l}}function*M(a,e={}){const {geometryType:l,objectIdField:v}=e;for(const D of a){const {geometry:g,properties:q,id:F}=D;if(g&&N[g.type]!==l)continue;a=q||{};let w=void 0;v&&(w=a[v],null==F||w||(a[v]=w=F));
yield new z.OptimizedFeature(g?H(new t,g,e):null,a,null,w??void 0)}}function P(a){for(const e of a)if(2<e.length)return!0;return!1}function G(a){let e=0;for(let l=0;l<a.length;l++){const v=a[l],D=a[(l+1)%a.length];e+=v[0]*D[1]-D[0]*v[1]}return 0>=e}function Q(a){const e=a[0],l=a[a.length-1];e[0]===l[0]&&e[1]===l[1]&&e[2]===l[2]||a.push(e);return a}function H(a,e,l){switch(e.type){case "LineString":return J(a,e.coordinates,l),a;case "MultiLineString":for(const D of e.coordinates)J(a,D,l);return a;
case "MultiPoint":return J(a,e.coordinates,l),a;case "MultiPolygon":for(var v of e.coordinates)for(ba(a,v[0],l),e=1;e<v.length;e++)L(a,v[e],l);return a;case "Point":return W(a,e.coordinates,l),a;case "Polygon":v=e.coordinates;ba(a,v[0],l);for(e=1;e<v.length;e++)L(a,v[e],l);return a}}function ba(a,e,l){e=Q(e);G(e)?J(a,e,l):m(a,e,l)}function L(a,e,l){e=Q(e);G(e)?m(a,e,l):J(a,e,l)}function J(a,e,l){for(const v of e)W(a,v,l);a.lengths.push(e.length)}function m(a,e,l){for(let v=e.length-1;0<=v;v--)W(a,
e[v],l);a.lengths.push(e.length)}function W(a,e,l){const [v,D,g]=e;a.coords.push(v,D);l.hasZ&&a.coords.push(g||0)}const N={LineString:"esriGeometryPolyline",MultiLineString:"esriGeometryPolyline",MultiPoint:"esriGeometryMultipoint",Point:"esriGeometryPoint",Polygon:"esriGeometryPolygon",MultiPolygon:"esriGeometryPolygon"};r.createOptimizedFeatures=function(a,e){return Array.from(M(x(a),e))};r.getGeometryType=function(a){return N[a]};r.inferLayerProperties=function(a,e={}){const l=[];var v=new Set;
const D=new Set;var g=!1;let q=null,F=!1,w=void 0;({geometryType:e=null}=e);var C=!1;for(const R of x(a)){const {geometry:S,properties:K,id:O}=R;if(S&&(e||(e=N[S.type]),N[S.type]!==e))continue;g||(g=V(S),g=P(g));!F&&(F=null!=O)&&(w=typeof O,K&&(q=Object.keys(K).filter(B=>K[B]===O)));K&&q&&F&&null!=O&&(1<q.length?q=q.filter(B=>K[B]===O):1===q.length&&(q=K[q[0]]===O?q:[]));if(!C&&K){a=!0;for(const B in K){if(v.has(B))continue;C=K[B];if(null==C){a=!1;D.add(B);continue}a:switch(typeof C){case "string":C=
"esriFieldTypeString";break a;case "number":C="esriFieldTypeDouble";break a;default:C="unknown"}if("unknown"===C){D.add(B);continue}D.delete(B);v.add(B);const Z=u.normalizeFieldName(B);Z&&l.push({name:Z,alias:B,type:C})}C=a}}if(v=u.normalizeFieldName(1===q?.length&&q[0]||null)??void 0)for(const R of l)if(R.name===v&&u.isNumericField(R)){R.type="esriFieldTypeOID";break}return{fields:l,geometryType:e,hasZ:g,objectIdFieldName:v,objectIdFieldType:w,unknownFields:Array.from(D)}};r.validateGeoJSON=function(a){if(!a)throw new k("geojson-layer:empty",
"GeoJSON data is empty");if("Feature"!==a.type&&"FeatureCollection"!==a.type)throw new k("geojson-layer:unsupported-geojson-object","missing or not supported GeoJSON object type",{data:a});({crs:a}=a);if(a){var e="string"===typeof a?a:"name"===a.type?a.properties.name:"EPSG"===a.type?a.properties.code:null,l=RegExp(".*(CRS84H?|4326)$","i");if(!e||!l.test(e))throw new k("geojson-layer:unsupported-crs","unsupported GeoJSON 'crs' member",{crs:a});}};Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})})},
"esri/layers/ogc/dateUtils":function(){define(["exports"],function(r){function k(t){t=(new Date(t)).getTime();return Number.isNaN(t)?null:t}const z=/^(?:(?<year>-?\d{4,})-(?<month>\d{2})-(?<day>\d{2}))(?:T(?<hours>\d{2}):(?<minutes>\d{2}):(?<seconds>\d{2})(?:\.(?<ms>\d+))?)?(?:(?<isUTC>Z)|(?:(?<offsetSign>\+|-)(?<offsetHours>\d{2}):(?<offsetMinutes>\d{2})))?$/;r.parseDate=function(t){var u=z.exec(t);if(u?.groups){u=u.groups;var x=+u.year,V=+u.month-1,M=+u.day,P=+(u.hours??0),G=+(u.minutes??0),Q=+(u.seconds??
0);if(23<P||59<G||59<Q)u=null;else{var H=u.ms??"0";H=H?+H.padEnd(3,"0").substring(0,3):0;u=u.isUTC?Date.UTC(x,V,M,P,G,Q,H):u.offsetSign?6E4*("+"===u.offsetSign?-1:1)*(60*+u.offsetHours+ +u.offsetMinutes)+Date.UTC(x,V,M,P,G,Q,H):(new Date(x,V,M,P,G,Q,H)).getTime();u=Number.isNaN(u)?null:u}}else u=null;return u??k(t)};r.parseJSDate=k;Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})})},"esri/layers/ogc/xmlUtils":function(){define(["exports"],function(r){function k(t,u){if(t&&u)for(const x of t.children)x.localName in
u&&(t=u[x.localName],"function"===typeof t?(t=t(x))&&k(x,t):k(x,t))}function*z(t,u){for(const x of t.children)x.localName in u&&(t=u[x.localName],"function"===typeof t?yield t(x):yield*z(x,t))}r.iterateXML=z;r.visitXML=k;Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})})},"*noref":1}});
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../geometry ../PopupTemplate ../renderers/ClassBreaksRenderer ../renderers/DictionaryRenderer ../renderers/DotDensityRenderer ../renderers/HeatmapRenderer ../renderers/PieChartRenderer ../renderers/Renderer ../renderers/SimpleRenderer ../renderers/UniqueValueRenderer ../renderers/support/jsonUtils ../renderers/support/types ../core/maybe ../core/MultiOriginJSONSupport ../core/object ../core/urlUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/arrayUtils ../core/has ../core/accessorSupport/decorators/subclass ../core/accessorSupport/decorators/writer ../geometry/support/typeUtils ./Layer ./graphics/sources/WFSSource ./mixins/BlendLayer ./mixins/CustomParametersMixin ./mixins/FeatureEffectLayer ./mixins/FeatureReductionLayer ./mixins/OperationalLayer ./mixins/OrderedLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./mixins/TemporalLayer ./ogc/wfsUtils ./support/commonProperties ./support/Field ./support/fieldProperties ./support/fieldUtils ./support/LabelClass ./support/labelingInfo ../rest/support/Query ../support/popupUtils ../geometry/SpatialReference ../geometry/Extent".split(" "),function(r,
k,z,t,u,x,V,M,P,G,Q,H,ba,L,J,m,W,N,a,e,l,v,D,g,q,F,w,C,R,S,K,O,B,Z,X,fa,ha,b,c,d,n,h,p,y,A,Y,T,da){var ea;z=n.defineFieldProperties();m=ea=function(I){function ca(f){f=ia.call(this,f);f.copyright=null;f.customParameters=null;f.definitionExpression=null;f.displayField=null;f.elevationInfo=null;f.featureUrl=void 0;f.fields=null;f.fieldsIndex=null;f.fullExtent=null;f.geometryType=null;f.labelsVisible=!0;f.labelingInfo=null;f.legendEnabled=!0;f.objectIdField=null;f.operationalLayerType="WFS";f.maxFeatures=
3E3;f.mode=0;f.name=null;f.namespaceUri=null;f.outFields=null;f.popupEnabled=!0;f.popupTemplate=null;f.screenSizePerspectiveEnabled=!0;f.source=new w.WFSSource({layer:r._assertThisInitialized(f)});f.spatialReference=T.WGS84;f.spatialReferences=[4326];f.swapXY=void 0;f.title="WFS";f.type="wfs";f.url=null;f.version=void 0;return f}r._inherits(ca,I);var ia=r._createSuper(ca);ca.fromWFSLayerInfo=function(f){const {customParameters:E,fields:U,geometryField:aa,geometryType:ja,name:ka,namespaceUri:la,objectIdField:ma,
spatialReference:na,swapXY:oa,url:pa,wfsCapabilities:qa}=f;return new ea({customParameters:E,fields:U,geometryField:aa,geometryType:ja,name:ka,namespaceUri:la,objectIdField:ma,spatialReference:na,swapXY:oa,url:pa,wfsCapabilities:qa})};I=ca.prototype;I.destroy=function(){this.source?.destroy()};I.load=function(f){this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WFS"]},f).then(()=>this.source.load(f)).then(()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl});this.revert("objectIdField fields timeInfo spatialReference name namespaceUri".split(" "),
"service");h.fixRendererFields(this.renderer,this.fieldsIndex);h.fixTimeInfoFields(this.timeInfo,this.fieldsIndex)}));return Promise.resolve(this)};I.writeFields=function(f,E,U){f=f.filter(aa=>aa.name!==b.WFS_OID_FIELD_NAME);this.geometryField&&f.unshift(new d({name:this.geometryField,alias:this.geometryField,type:"geometry"}));W.setDeepValue(U,f.map(aa=>aa.toJSON()),E)};I.createPopupTemplate=function(f){return Y.createPopupTemplate(this,f)};I.createQuery=function(){const f=new A;f.returnGeometry=
!0;f.outFields=["*"];f.where=this.definitionExpression||"1\x3d1";const {timeOffset:E,timeExtent:U}=this;f.timeExtent=null!=E&&null!=U?U.offset(-E.value,E.unit):U||null;return f};I.getFieldDomain=function(f,E){return this.getField(f)?.domain};I.getField=function(f){return this.fieldsIndex?.get(f)};I.queryFeatures=function(f,E){return this.load().then(()=>this.source.queryFeatures(A.from(f)||this.createQuery(),E)).then(U=>{if(U?.features)for(const aa of U.features)aa.layer=aa.sourceLayer=this;return U})};
I.queryObjectIds=function(f,E){return this.load().then(()=>this.source.queryObjectIds(A.from(f)||this.createQuery(),E))};I.queryFeatureCount=function(f,E){return this.load().then(()=>this.source.queryFeatureCount(A.from(f)||this.createQuery(),E))};I.queryExtent=function(f,E){return this.load().then(()=>this.source.queryExtent(A.from(f)||this.createQuery(),E))};I.hasDataChanged=async function(){try{const {dataChanged:f,updates:E}=await this.source.refresh(this.customParameters);J.isSome(E)&&this.read(E,
{origin:"service",url:this.parsedUrl,ignoreDefaults:!0});return f}catch{}return!1};r._createClass(ca,[{key:"capabilities",get:function(){return this.source?.capabilities}},{key:"createQueryVersion",get:function(){this.commitProperty("definitionExpression");this.commitProperty("timeExtent");this.commitProperty("timeOffset");this.commitProperty("geometryType");this.commitProperty("capabilities");return(this._get("createQueryVersion")||0)+1}},{key:"defaultPopupTemplate",get:function(){return this.createPopupTemplate()}},
{key:"parsedUrl",get:function(){return N.urlToObject(this.url)}},{key:"renderer",set:function(f){h.fixRendererFields(f,this.fieldsIndex);this._set("renderer",f)}},{key:"wfsCapabilities",get:function(){return this.source?.wfsCapabilities},set:function(f){this.source&&(this.source.wfsCapabilities=f)}}]);return ca}(B.OrderedLayer(R.CustomParametersMixin(K.FeatureReductionLayer(S.FeatureEffectLayer(C.BlendLayer(ha.TemporalLayer(X.RefreshableLayer(fa.ScaleRangeLayer(O.OperationalLayer(Z.PortalLayer(m.MultiOriginJSONMixin(F))))))))))));
k.__decorate([a.property({readOnly:!0})],m.prototype,"capabilities",null);k.__decorate([a.property({type:String})],m.prototype,"copyright",void 0);k.__decorate([a.property({readOnly:!0})],m.prototype,"createQueryVersion",null);k.__decorate([a.property({json:{name:"wfsInfo.customParameters",write:{overridePolicy(I){return{enabled:!!(I&&0<Object.keys(I).length),ignoreOrigin:!0}}}}})],m.prototype,"customParameters",void 0);k.__decorate([a.property({readOnly:!0})],m.prototype,"defaultPopupTemplate",null);
k.__decorate([a.property({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],m.prototype,"definitionExpression",void 0);k.__decorate([a.property({type:String})],m.prototype,"displayField",void 0);k.__decorate([a.property(c.elevationInfo)],m.prototype,"elevationInfo",void 0);k.__decorate([a.property({type:String,readOnly:!0,json:{name:"wfsInfo.featureUrl",write:{ignoreOrigin:!0,isRequired:!0}}})],m.prototype,"featureUrl",void 0);k.__decorate([a.property({type:[d],
json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],m.prototype,"fields",void 0);k.__decorate([g.writer("fields")],m.prototype,"writeFields",null);k.__decorate([a.property(z.fieldsIndex)],m.prototype,"fieldsIndex",void 0);k.__decorate([a.property({type:da,json:{name:"extent"}})],m.prototype,"fullExtent",void 0);k.__decorate([a.property()],m.prototype,"geometryField",void 0);k.__decorate([a.property({type:String,json:{read:{source:"layerDefinition.geometryType",
reader:q.featureGeometryTypeKebabDictionary.read},write:{target:"layerDefinition.geometryType",writer:q.featureGeometryTypeKebabDictionary.write,ignoreOrigin:!0},origins:{service:{read:q.featureGeometryTypeKebabDictionary.read}}}})],m.prototype,"geometryType",void 0);k.__decorate([a.property({type:String})],m.prototype,"id",void 0);k.__decorate([a.property(c.labelsVisible)],m.prototype,"labelsVisible",void 0);k.__decorate([a.property({type:[p],json:{name:"layerDefinition.drawingInfo.labelingInfo",
read:{reader:y.reader},write:!0}})],m.prototype,"labelingInfo",void 0);k.__decorate([a.property(c.legendEnabled)],m.prototype,"legendEnabled",void 0);k.__decorate([a.property({type:["show","hide"]})],m.prototype,"listMode",void 0);k.__decorate([a.property({type:String})],m.prototype,"objectIdField",void 0);k.__decorate([a.property({type:["WFS"]})],m.prototype,"operationalLayerType",void 0);k.__decorate([a.property({type:e.Integer,json:{name:"wfsInfo.maxFeatures",write:{ignoreOrigin:!0,isRequired:!0}}})],
m.prototype,"maxFeatures",void 0);k.__decorate([a.property({type:[0],readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],m.prototype,"mode",void 0);k.__decorate([a.property({type:String,json:{name:"wfsInfo.name",write:{ignoreOrigin:!0,isRequired:!0}}})],m.prototype,"name",void 0);k.__decorate([a.property({type:String,json:{name:"wfsInfo.wfsNamespace",write:{ignoreOrigin:!0,isRequired:!0}}})],m.prototype,"namespaceUri",void 0);k.__decorate([a.property(c.opacityDrawingInfo)],
m.prototype,"opacity",void 0);k.__decorate([a.property(z.outFields)],m.prototype,"outFields",void 0);k.__decorate([a.property({readOnly:!0})],m.prototype,"parsedUrl",null);k.__decorate([a.property(c.popupEnabled)],m.prototype,"popupEnabled",void 0);k.__decorate([a.property({type:t,json:{name:"popupInfo",write:!0}})],m.prototype,"popupTemplate",void 0);k.__decorate([a.property({types:L.rendererTypes,json:{origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:L.webSceneRendererTypes,name:"layerDefinition.drawingInfo.renderer",
write:!0}},name:"layerDefinition.drawingInfo.renderer",write:{ignoreOrigin:!0}}})],m.prototype,"renderer",null);k.__decorate([a.property(c.screenSizePerspectiveEnabled)],m.prototype,"screenSizePerspectiveEnabled",void 0);k.__decorate([a.property({readOnly:!0})],m.prototype,"source",void 0);k.__decorate([a.property({type:T,json:{name:"layerDefinition.spatialReference",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"extent.spatialReference"}}}})],m.prototype,"spatialReference",void 0);
k.__decorate([a.property({readOnly:!0,type:[e.Integer],json:{name:"wfsInfo.supportedSpatialReferences",write:{ignoreOrigin:!0,isRequired:!0}}})],m.prototype,"spatialReferences",void 0);k.__decorate([a.property({type:Boolean,value:!1,json:{name:"wfsInfo.swapXY",write:{ignoreOrigin:!0,isRequired:!0}}})],m.prototype,"swapXY",void 0);k.__decorate([a.property({json:{write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"name"}}}})],m.prototype,"title",void 0);k.__decorate([a.property({json:{read:!1},
readOnly:!0})],m.prototype,"type",void 0);k.__decorate([a.property(c.url)],m.prototype,"url",void 0);k.__decorate([a.property({type:String,readOnly:!0,json:{name:"wfsInfo.version",write:{ignoreOrigin:!0,isRequired:!0}}})],m.prototype,"version",void 0);k.__decorate([a.property()],m.prototype,"wfsCapabilities",null);return m=ea=k.__decorate([D.subclass("esri.layers.WFSLayer")],m)});