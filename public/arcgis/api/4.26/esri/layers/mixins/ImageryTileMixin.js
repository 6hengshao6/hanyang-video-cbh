// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.27/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../geometry ../../rasterRenderers ../../request ../../core/Error ../../core/Logger ../../core/maybe ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/arrayUtils ../../core/has ../../core/accessorSupport/decorators/subclass ../../geometry/support/spatialReferenceUtils ../support/arcgisLayerUrl ../support/commonProperties ../support/DimensionalDefinition ../support/MultidimensionalSubset ../support/RasterFunction ../support/RasterJobHandler ../support/TileInfo ../support/rasterDatasets/FunctionRaster ../support/rasterDatasets/multidimensionalUtils ../support/rasterFunctions/rasterFunctionHelper ../support/rasterFunctions/vectorFieldUtils ../../renderers/support/rasterRendererHelper ../../renderers/support/RasterSymbolizer ../../views/2d/engine/flow/dataUtils ../../geometry/SpatialReference".split(" "),
function(z,y,k,W,E,F,A,G,l,m,X,Y,Z,H,I,J,K,L,M,B,N,O,P,u,Q,R,t,S,T,U){const C=G.getLogger("esri.layers.mixins.ImageryTileMixin");z.ImageryTileMixin=h=>{function x(f){if(!f.raster||!f.rasterInfo)throw new A("imagery-tile","no raster");}h=function(f){function v(...b){var a=V.call(this,...b);a._isConstructedFromFunctionRaster=!1;a._rasterJobHandler={instance:null,refCount:0,connectionPromise:null};a.bandIds=null;a.copyright=null;a.interpolation="nearest";a.multidimensionalSubset=null;a.raster=null;a.rasterFunction=
null;a.rasterInfo=null;a.sourceJSON=null;a.spatialReference=null;a.symbolizer=null;a._isConstructedFromFunctionRaster="Function"===b[0]?.raster?.datasetFormat;return a}y._inherits(v,f);var V=y._createSuper(v);f=v.prototype;f.convertVectorFieldData=async function(b,a){if(l.isNone(b)||!this.rasterInfo)return null;const c=this._rasterJobHandler.instance,d=this.rasterInfo.dataType;return c?c.convertVectorFieldData({pixelBlock:b,dataType:d},a):R.convertVectorFieldData(b,d)};f.createFlowMesh=async function(b,
a){const c=this._rasterJobHandler.instance;return c?c.createFlowMesh(b,a):T.createFlowMesh(b.meshType,b.simulationSettings,b.flowData,l.isSome(a.signal)?a.signal:(new AbortController).signal)};f.normalizeRasterFetchOptions=function(b){var {multidimensionalInfo:a}=this.rasterInfo??{};if(l.isNone(a))return b;let c=b.multidimensionalDefinition||this.multidimensionalDefinition;if(l.isNone(c)||!c.length)c=u.getDefaultMultidimensionalDefinition(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset});
var d=b.timeExtent||this.timeExtent;if(l.isSome(c)&&l.isSome(d)&&(l.isSome(d.start)||l.isSome(d.end))){c=c.map(e=>e.clone());var g=a.variables.find(({name:e})=>e===c[0].variableName)?.dimensions?.find(({name:e})=>"StdTime"===e);a=c.find(({dimensionName:e})=>"StdTime"===e);if(!g||!a)return{...b,multidimensionalDefinition:null};const {start:q,end:w}=d;d=l.isNone(q)?null:q.getTime();const D=l.isNone(w)?null:w.getTime(),n=d??D,p=D??d;if(l.isSome(g.values))g=g.values.filter(e=>{if(Array.isArray(e)){if(n===
p)return e[0]<=n&&e[1]>=n;const r=e[0]>=n&&e[1]<=p||e[0]<n&&e[1]>p;return e[0]<=n&&e[1]>n||e[0]<p&&e[1]>=p||r}return n===p?e===n:e>=n&&e<=p}),g.length?(g=g.sort((e,r)=>n===p?(e[0]??e)-(r[0]??r):Math.abs((e[1]??e)-p)-Math.abs((r[1]??r)-p))[0],a.values=[g]):c=null;else if(g.hasRegularIntervals&&g.extent){const [e,r]=g.extent;n>r||p<e?c=null:a.values=n===p?[n]:[Math.max(e,n),Math.min(r,p)]}}return l.isSome(c)&&u.hasExcludedVariableOrDimension(c,this.multidimensionalSubset)?{...b,multidimensionalDefinition:null}:
{...b,multidimensionalDefinition:c}};f.updateRasterFunction=async function(){if("imagery-tile"===this.type&&(this.rasterFunction||this._cachedRasterFunctionJson)&&JSON.stringify(this.rasterFunction)!==JSON.stringify(this._cachedRasterFunctionJson))if(this._isConstructedFromFunctionRaster&&"Function"===this.raster.datasetFormat){var b=this.raster.rasterFunction.toJSON();!this.rasterFunction&&b&&this._set("rasterFunction",B.fromJSON(b));this._cachedRasterFunctionJson=this.rasterFunction?.toJSON()}else{var a=
this.raster;b=!1;if("Function"===a.datasetFormat){var c=a.primaryRasters.rasters;a=c[0];b=!0}else c=[a];var {rasterFunction:d}=this;if(d){const q={raster:a};1<c.length&&c.forEach(w=>q[w.url]=w);a=Q.create(d.rasterFunctionDefinition??d.toJSON(),q);a=new P({rasterFunction:a});a.rasterJobHandler=this._rasterJobHandler.instance;await a.open();this._cachedRasterFunctionJson=this.rasterFunction?.toJSON();this.raster=a}else this.raster=a,this._cachedRasterFunctionJson=null;this._cachedRendererJson=null;
if(b||d){({bandIds:b}=this);var {bandCount:g}=this.raster.rasterInfo;d=b?.length?b.some(q=>q>=g):3<=g;b&&(d||"raster-stretch"!==this.renderer.type)&&this._set("bandIds",null);this._configDefaultRenderer("auto")}}};f.updateRenderer=async function(){const {loaded:b,symbolizer:a}=this;if(b&&a){var {rasterInfo:c}=this.raster,d=u.getDefaultVariablInfo(c,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset})?.name,g=t.normalizeRendererJSON({...this.renderer.toJSON(),
variableName:d});if(JSON.stringify(this._cachedRendererJson)!==JSON.stringify(g)){var q=this._rasterJobHandler.instance;q&&(a.rasterInfo=t.getVariableRasterInfo(c,d),a.rendererJSON=g,a.bind(),await q.updateSymbolizer(a),this._cachedRendererJson=g)}}};f.applyRenderer=async function(b,a){var c=b&&b.pixelBlock;if(!(l.isSome(c)&&c.pixels&&0<c.pixels.length))return null;await this.updateRenderer();c=this._rasterJobHandler.instance;const d=this.bandIds??[];return c?await c.symbolize({...b,simpleStretchParams:a,
bandIds:d}):this.symbolizer.symbolize({...b,simpleStretchParams:a,bandIds:d})};f.getTileUrl=function(b,a,c){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${b}/${a}/${c}`:""};f.getCompatibleTileInfo=function(b,a,c=!1){if(!this.loaded||l.isNone(a))return null;if(c&&b.equals(this.spatialReference))return this.tileInfo;c=I.getInfo(b);return O.create({size:256,spatialReference:b,origin:c?{x:c.origin[0],y:c.origin[1]}:{x:a.xmin,y:a.ymax}})};f.getCompatibleFullExtent=function(b){return this.loaded?
this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(b)?this._compatibleFullExtent:this._compatibleFullExtent=this.raster.computeExtent(b):null};f.fetchTile=async function(b,a,c,d={}){x(this);if(d.requestAsImageElement)return b=this.getTileUrl(b,a,c),F(b,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:d.signal}).then(q=>q.data);const {rasterInfo:g}=this;if(l.isSome(g.multidimensionalInfo)&&(d=this.normalizeRasterFetchOptions(d),
l.isNone(d.multidimensionalDefinition)))return{extent:this.raster.getTileExtentFromTileInfo(b,a,c,d.tileInfo||g.storageInfo.tileInfo),pixelBlock:null};await this._initJobHandler();await this.updateRasterFunction();"raster-shaded-relief"===this.renderer.type&&(d={...d,buffer:{cols:1,rows:1}});return this.raster.fetchTile(b,a,c,d)};f.fetchPixels=async function(b,a,c,d={}){if(l.isSome(this.rasterInfo.multidimensionalInfo)&&(d=this.normalizeRasterFetchOptions(d),l.isNone(d.multidimensionalDefinition)))return{extent:b,
pixelBlock:null};await this._initJobHandler();await this.updateRasterFunction();return this.raster.fetchPixels(b,a,c,d)};f.identify=async function(b,a={}){const {raster:c,rasterInfo:d}=this;if(l.isSome(d.multidimensionalInfo)&&(!d.hasMultidimensionalTranspose||!(u.isMultiSliceOrRangeDefinition(a.multidimensionalDefinition)||a.transposedVariableName||a.timeExtent))&&(a=this.normalizeRasterFetchOptions(a),l.isNone(a.multidimensionalDefinition)))return{location:b,value:null};const g=this.multidimensionalSubset?.areaOfInterest;
if(g&&!g.contains(b))throw new A("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return c.identify(b,a)};f.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++};f.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--;0>=this._rasterJobHandler.refCount&&this._shutdownJobHandler()};f.hasStandardTime=function(){const b=this.rasterInfo?.multidimensionalInfo;if(l.isNone(b)||"standard-time"!==
this.rasterInfo?.dataType)return!1;const a=this.multidimensionalDefinition,c=a?.[0]?.variableName;return b.variables.some(d=>d.name===c&&(!a?.[0].dimensionName||d.dimensions.some(g=>"StdTime"===g.name)))};f.getStandardTimeValue=function(b){return(new Date(864E5*(b-25569))).toString()};f.getMultidimensionalSubsetVariables=function(b){return u.getSubsetVariablesFromMdInfo(this.multidimensionalSubset,b??this.rasterInfo?.multidimensionalInfo)};f._configDefaultSettings=function(){this._configDefaultInterpolation();
this.multidimensionalDefinition||(this.multidimensionalDefinition=u.getDefaultMultidimensionalDefinition(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));this._configDefaultRenderer()};f._initJobHandler=function(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const b=new N;this._rasterJobHandler.connectionPromise=b.initialize().then(()=>{x(this);this._rasterJobHandler.instance=b;this.raster.rasterJobHandler=b;this.renderer&&
this.updateRenderer();"Function"===this.raster.datasetFormat&&this.raster.syncJobHandler()}).catch(()=>{});return this._rasterJobHandler.connectionPromise};f._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy();this._rasterJobHandler.instance=null;this._rasterJobHandler.connectionPromise=null;this._rasterJobHandler.refCount=0;this._cachedRendererJson=null;this.raster&&(this.raster.rasterJobHandler=null)};f._configDefaultInterpolation=function(){if(null==
this.interpolation){x(this);var {raster:b}=this;b=t.getDefaultInterpolation(b.rasterInfo,b.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",b)}};f._configDefaultRenderer=function(b="no"){x(this);var {rasterInfo:a}=this.raster;!this.bandIds&&1<a.bandCount&&(this.bandIds=t.getDefaultBandCombination(a));var c=u.getDefaultVariablInfo(a,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset})?.name;if(!this.renderer||"override"===
b){var d=t.createDefaultRenderer(a,{bandIds:this.bandIds,variableName:c});"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===d.type&&(1E24<(a.statistics?.[0].max??0)||-1E24>(a.statistics?.[0].min??0))&&(d.dynamicRangeAdjustment=!0,d.statistics=null,"none"===d.stretchType&&(d.stretchType="min-max"));this.renderer=d}d=t.normalizeRendererJSON({...this.renderer.toJSON(),variableName:c});a=t.getVariableRasterInfo(a,c);this.symbolizer?(this.symbolizer.rendererJSON=d,this.symbolizer.rasterInfo=
a):this.symbolizer=new S({rendererJSON:d,rasterInfo:a});a=this.symbolizer.bind();a.success?"auto"===b&&({colormap:a}=this.raster.rasterInfo,b=this.renderer,l.isSome(a)?"raster-colormap"!==b.type?this._configDefaultRenderer("override"):(a=t.createDefaultRenderer(this.raster.rasterInfo),JSON.stringify(a)!==JSON.stringify(b)&&this._configDefaultRenderer("override")):"raster-stretch"===b.type&&(a=this.bandIds?.length,c=b.statistics?.length,!b.dynamicRangeAdjustment&&c&&a&&c!==a&&this._configDefaultRenderer("override"))):
(C.warn("imagery-tile-mixin",a.error||"The given renderer is not supported by the layer."),"auto"===b&&this._configDefaultRenderer("override"))};y._createClass(v,[{key:"fullExtent",get:function(){return this.rasterInfo?.extent}},{key:"multidimensionalDefinition",set:function(b){this._set("multidimensionalDefinition",b);this.updateRenderer()}},{key:"tileInfo",get:function(){return this.rasterInfo?.storageInfo.tileInfo}},{key:"url",set:function(b){this._set("url",J.sanitizeUrl(b,C))}},{key:"renderer",
set:function(b){this._set("renderer",b);this.updateRenderer()}}]);return v}(h);k.__decorate([m.property()],h.prototype,"_cachedRendererJson",void 0);k.__decorate([m.property()],h.prototype,"_cachedRasterFunctionJson",void 0);k.__decorate([m.property()],h.prototype,"_compatibleFullExtent",void 0);k.__decorate([m.property()],h.prototype,"_isConstructedFromFunctionRaster",void 0);k.__decorate([m.property()],h.prototype,"_rasterJobHandler",void 0);k.__decorate([m.property()],h.prototype,"bandIds",void 0);
k.__decorate([m.property({json:{origins:{service:{read:{source:"copyrightText"}}}}})],h.prototype,"copyright",void 0);k.__decorate([m.property({json:{read:!1}})],h.prototype,"fullExtent",null);k.__decorate([m.property()],h.prototype,"interpolation",void 0);k.__decorate([m.property()],h.prototype,"ioConfig",void 0);k.__decorate([m.property({type:[L],json:{write:!0}})],h.prototype,"multidimensionalDefinition",null);k.__decorate([m.property({type:M,json:{write:!0}})],h.prototype,"multidimensionalSubset",
void 0);k.__decorate([m.property()],h.prototype,"raster",void 0);k.__decorate([m.property({type:B})],h.prototype,"rasterFunction",void 0);k.__decorate([m.property()],h.prototype,"rasterInfo",void 0);k.__decorate([m.property()],h.prototype,"sourceJSON",void 0);k.__decorate([m.property({readOnly:!0,type:U,json:{read:!1}})],h.prototype,"spatialReference",void 0);k.__decorate([m.property({json:{read:!1}})],h.prototype,"tileInfo",null);k.__decorate([m.property(K.url)],h.prototype,"url",null);k.__decorate([m.property({types:E.rasterRendererTypes})],
h.prototype,"renderer",null);k.__decorate([m.property()],h.prototype,"symbolizer",void 0);return h=k.__decorate([H.subclass("esri.layers.ImageryTileMixin")],h)};Object.defineProperty(z,Symbol.toStringTag,{value:"Module"})});