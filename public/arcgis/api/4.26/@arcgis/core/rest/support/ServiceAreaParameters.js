/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../geometry.js";import{ClonableMixin as e}from"../../core/Clonable.js";import o from"../../core/Collection.js";import{JSONSupport as r}from"../../core/JSONSupport.js";import{a as i,i as s}from"../../chunks/maybe.js";import{property as n}from"../../core/accessorSupport/decorators/property.js";import{m as p}from"../../chunks/ensureType.js";import"../../chunks/typedArrayUtil.js";import{e as l}from"../../chunks/enumeration.js";import{r as a}from"../../chunks/reader.js";import{subclass as u}from"../../core/accessorSupport/decorators/subclass.js";import{w as m}from"../../chunks/writer.js";import{a as y}from"../../chunks/commonProperties3.js";import{i as c,r as j,l as h,o as d,A as g,m as v,z as w}from"../../chunks/networkEnums.js";import P from"./TravelMode.js";import k from"../../geometry/SpatialReference.js";import"../../geometry/Extent.js";import"../../chunks/string.js";import"../../chunks/object.js";import"../../core/lang.js";import"../../geometry/Geometry.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/ArrayPool.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/Ellipsoid.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../geometry/Multipoint.js";import"../../chunks/zmUtils.js";import"../../geometry/Polygon.js";import"../../chunks/extentUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../../chunks/vec3.js";import"../../chunks/common.js";import"../../chunks/vec4.js";import"../../geometry/Polyline.js";import"../../chunks/typeUtils.js";import"../../geometry/support/jsonUtils.js";import"../../core/Evented.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";var B;let f=B=class extends(e(r)){constructor(t){super(t),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.defaultBreaks=null,this.excludeSourcesFromPolygons=null,this.facilities=null,this.geometryPrecision=null,this.geometryPrecisionM=null,this.geometryPrecisionZ=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.mergeSimilarPolygonRanges=!1,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines=null,this.outputPolygons=null,this.outSpatialReference=null,this.overlapLines=!1,this.overlapPolygons=!1,this.overrides=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveObjectID=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnFacilities=!1,this.returnPointBarriers=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.splitLinesAtBreaks=!1,this.splitPolygonsAtBreaks=!1,this.timeOfDay=null,this.timeOfDayIsUTC=null,this.travelDirection=null,this.travelMode=null,this.trimOuterPolygon=!1,this.trimPolygonDistance=null,this.trimPolygonDistanceUnits=null,this.useHierarchy=null}static from(t){return p(B,t)}readAccumulateAttributes(t){return i(t)?null:t.map((t=>c.fromJSON(t)))}writeAccumulateAttributes(t,e,o){!i(t)&&t.length&&(e[o]=t.map((t=>c.toJSON(t))))}writeFacilities(t,e,o){A(t,e,o)}writePointBarriers(t,e,o){A(t,e,o)}writePolygonBarrier(t,e,o){A(t,e,o)}writePolylineBarrier(t,e,o){A(t,e,o)}readRestrictionAttributes(t){return i(t)?null:t.map((t=>j.fromJSON(t)))}writeRestrictionAttributes(t,e,o){!i(t)&&t.length&&(e[o]=t.map((t=>j.toJSON(t))))}readTimeOfDay(t,e){const{timeOfDay:o}=e;return i(o)?null:"now"===o?"now":new Date(o)}writeTimeOfDay(t,e){i(t)||(e.timeOfDay="now"===t?"now":t.getTime())}};t([n({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],f.prototype,"accumulateAttributes",void 0),t([a("accumulateAttributes")],f.prototype,"readAccumulateAttributes",null),t([m("accumulateAttributes")],f.prototype,"writeAccumulateAttributes",null),t([n(y)],f.prototype,"apiKey",void 0),t([n({json:{write:!0}})],f.prototype,"attributeParameterValues",void 0),t([n({type:[Number],json:{write:!0}})],f.prototype,"defaultBreaks",void 0),t([n({type:[String],json:{write:!0}})],f.prototype,"excludeSourcesFromPolygons",void 0),t([n({json:{write:!0}})],f.prototype,"facilities",void 0),t([m("facilities")],f.prototype,"writeFacilities",null),t([n({type:Number,json:{write:!0}})],f.prototype,"geometryPrecision",void 0),t([n({type:Number,json:{write:!0}})],f.prototype,"geometryPrecisionM",void 0),t([n({type:Number,json:{write:!0}})],f.prototype,"geometryPrecisionZ",void 0),t([n({type:Boolean,json:{write:!0}})],f.prototype,"ignoreInvalidLocations",void 0),t([l(c,{name:"impedanceAttributeName",ignoreUnknown:!1})],f.prototype,"impedanceAttribute",void 0),t([n({type:Boolean,json:{write:!0}})],f.prototype,"mergeSimilarPolygonRanges",void 0),t([n({type:Number,json:{write:!0}})],f.prototype,"outputGeometryPrecision",void 0),t([l(h)],f.prototype,"outputGeometryPrecisionUnits",void 0),t([l(d)],f.prototype,"outputLines",void 0),t([l(g)],f.prototype,"outputPolygons",void 0),t([n({type:k,json:{name:"outSR",write:!0}})],f.prototype,"outSpatialReference",void 0),t([n({type:Boolean,json:{write:!0}})],f.prototype,"overlapLines",void 0),t([n({type:Boolean,json:{write:!0}})],f.prototype,"overlapPolygons",void 0),t([n({json:{write:!0}})],f.prototype,"overrides",void 0),t([n({json:{name:"barriers",write:!0}})],f.prototype,"pointBarriers",void 0),t([m("pointBarriers")],f.prototype,"writePointBarriers",null),t([n({json:{write:!0}})],f.prototype,"polygonBarriers",void 0),t([m("polygonBarriers")],f.prototype,"writePolygonBarrier",null),t([n({json:{write:!0}})],f.prototype,"polylineBarriers",void 0),t([m("polylineBarriers")],f.prototype,"writePolylineBarrier",null),t([n({type:Boolean,json:{write:!0}})],f.prototype,"preserveObjectID",void 0),t([n({type:[String],json:{name:"restrictionAttributeNames",write:!0}})],f.prototype,"restrictionAttributes",void 0),t([a("restrictionAttributes")],f.prototype,"readRestrictionAttributes",null),t([m("restrictionAttributes")],f.prototype,"writeRestrictionAttributes",null),t([l(v)],f.prototype,"restrictUTurns",void 0),t([n({type:Boolean,json:{write:!0}})],f.prototype,"returnFacilities",void 0),t([n({type:Boolean,json:{name:"returnBarriers",write:!0}})],f.prototype,"returnPointBarriers",void 0),t([n({type:Boolean,json:{write:!0}})],f.prototype,"returnPolygonBarriers",void 0),t([n({type:Boolean,json:{write:!0}})],f.prototype,"returnPolylineBarriers",void 0),t([n({type:Boolean,json:{write:!0}})],f.prototype,"splitLinesAtBreaks",void 0),t([n({type:Boolean,json:{write:!0}})],f.prototype,"splitPolygonsAtBreaks",void 0),t([n({type:Date,json:{type:Number,write:!0}})],f.prototype,"timeOfDay",void 0),t([a("timeOfDay")],f.prototype,"readTimeOfDay",null),t([m("timeOfDay")],f.prototype,"writeTimeOfDay",null),t([n({type:Boolean,json:{write:!0}})],f.prototype,"timeOfDayIsUTC",void 0),t([l(w)],f.prototype,"travelDirection",void 0),t([n({type:P,json:{write:!0}})],f.prototype,"travelMode",void 0),t([n({type:Boolean,json:{write:!0}})],f.prototype,"trimOuterPolygon",void 0),t([n({type:Number,json:{write:!0}})],f.prototype,"trimPolygonDistance",void 0),t([l(h)],f.prototype,"trimPolygonDistanceUnits",void 0),t([n({type:Boolean,json:{write:!0}})],f.prototype,"useHierarchy",void 0),f=B=t([u("esri.rest.support.ServiceAreaParameters")],f);const b=f;function A(t,e,r){s(t)&&(e[r]=o.isCollection(t)?{features:t.toArray().map((t=>t.toJSON()))}:t.toJSON())}export{b as default};
