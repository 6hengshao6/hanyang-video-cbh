/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as s}from"../../chunks/tslib.es6.js";import{JSONSupport as t}from"../../core/JSONSupport.js";import{m as r,l as e,D as o}from"../../chunks/unitUtils.js";import{property as i}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/ensureType.js";import"../../chunks/typedArrayUtil.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../core/lang.js";import"../../chunks/metadata.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/string.js";import"../../chunks/ArrayPool.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../chunks/jsonMap.js";import"../../chunks/Ellipsoid.js";let n=class extends t{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};s([i({type:Number,json:{read:!0,write:!0}})],n.prototype,"value",void 0),s([i({type:String,json:{read:!0,write:!0}})],n.prototype,"displayValue",void 0),s([i({type:Number,json:{read:!0,write:!0}})],n.prototype,"uncertainty",void 0),n=s([p("esri.rest.support.ImageMeasureResultValue")],n);let u=class extends n{constructor(){super(...arguments),this.unit=null}};s([i({type:String,json:{read:r.read,write:r.write}})],u.prototype,"unit",void 0),u=s([p("esri.rest.support.ImageMeasureResultLengthValue")],u);let a=class extends n{constructor(){super(...arguments),this.unit=null}};s([i({type:String,json:{read:e.read,write:e.write}})],a.prototype,"unit",void 0),a=s([p("esri.rest.support.ImageMeasureResultAreaValue")],a);let c=class extends n{constructor(){super(...arguments),this.unit=null}};s([i({type:String,json:{read:o.read,write:o.write}})],c.prototype,"unit",void 0),c=s([p("esri.rest.support.ImageMeasureResultAngleValue")],c);let l=class extends t{constructor(){super(...arguments),this.name=null,this.sensorName=null}};s([i({type:String,json:{read:!0,write:!0}})],l.prototype,"name",void 0),s([i({type:String,json:{read:!0,write:!0}})],l.prototype,"sensorName",void 0),l=s([p("esri.rest.support.BaseImageMeasureResult")],l);export{l as BaseImageMeasureResult,c as ImageMeasureResultAngleValue,a as ImageMeasureResultAreaValue,u as ImageMeasureResultLengthValue};
