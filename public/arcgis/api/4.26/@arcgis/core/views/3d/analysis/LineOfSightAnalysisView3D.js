/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import e from"../../../core/Accessor.js";import i from"../../../core/Collection.js";import s from"../../../core/Evented.js";import{h as o,a as n,i as r,f as a,e as l,q as p,d as u,g as c}from"../../../chunks/maybe.js";import{property as d}from"../../../core/accessorSupport/decorators/property.js";import"../../../chunks/ensureType.js";import{k as h}from"../../../chunks/typedArrayUtil.js";import{subclass as m}from"../../../core/accessorSupport/decorators/subclass.js";import{d as g,k as y,F as v,c as b,n as f,g as _,a as j,D as C,b as k,J as O,p as w,C as T}from"../../../chunks/vec3.js";import{A as S}from"../../../chunks/AnalysisView3D.js";import I from"../../../Color.js";import"../../../geometry.js";import{g as P}from"../../../chunks/featureReferenceUtils.js";import{c as L}from"../../../chunks/asyncUtils.js";import V from"../../../core/Handles.js";import{h as E,m as R}from"../../../chunks/handleUtils.js";import{L as M}from"../../../chunks/Logger.js";import{ignoreAbortErrors as D}from"../../../core/promiseUtils.js";import{initial as A,watch as H,syncAndInitial as U}from"../../../core/reactiveUtils.js";import{W as x}from"../../../chunks/WatchUpdatingTracking.js";import{projectOrLoad as F,projectBoundingRect as z}from"../../../geometry/projection.js";import{e as G,m as N,n as B}from"../../../chunks/aaBoundingRect.js";import{i as W,c as q,j as J,b as $,g as Q}from"../../../chunks/ray.js";import{z as Z,b as K,c as X}from"../../../chunks/elevationInfoUtils.js";import{LineOfSightAnalysisResult as Y}from"./LineOfSightAnalysisResult.js";import{s as tt}from"../../../chunks/screenUtils.js";import{g as et}from"../../../chunks/dehydratedFeatures.js";import{clone as it}from"../../../core/lang.js";import{i as st,t as ot,h as nt,g as rt}from"../../../chunks/intersectorUtilsConversions.js";import{f as at}from"../../../chunks/ray2.js";import{i as lt}from"../../../chunks/Intersector.js";import{a as pt,S as ut,I as ct}from"../../../chunks/Intersector2.js";import{l as dt,L as ht}from"../../../chunks/LineVisualElement.js";import{I as mt,T as gt}from"../../../chunks/Scheduler.js";import yt from"../../../geometry/Point.js";import vt from"../../../analysis/LineOfSightAnalysisObserver.js";import bt from"../../../analysis/LineOfSightAnalysisTarget.js";import{c as ft,f as _t}from"../../../chunks/lineSegment.js";import{E as jt}from"../../../chunks/ElevationInfo.js";import{M as Ct,R as kt,c as Ot}from"../../../chunks/manipulatorUtils.js";import{d as wt}from"../../../chunks/manipulatorUtils2.js";import{a as Tt}from"../../../chunks/GeometryUtil.js";import{M as St}from"../../../chunks/interfaces5.js";import{L as It}from"../../../chunks/LaserlineVisualElement.js";import"../../../chunks/ViewEvents.js";import{A as Pt}from"../../../chunks/AnalysisToolBase.js";import{c as Lt}from"../../../chunks/dragEventPipeline.js";import{c as Vt}from"../../../chunks/screenUtils2.js";import{M as Et}from"../../../chunks/IViewEvents.js";import{c as Rt}from"../../../chunks/mat4f64.js";import{P as Mt}from"../../../chunks/PointVisualElement.js";import{R as Dt}from"../../../chunks/Material.js";import{c as At,r as Ht}from"../../../chunks/analysisViewUtils.js";import"../../../chunks/get.js";import"../../../chunks/utils.js";import"../../../chunks/metadata.js";import"../../../chunks/ArrayPool.js";import"../../../chunks/tracking.js";import"../../../chunks/watch.js";import"../../../core/scheduling.js";import"../../../chunks/nextTick.js";import"../../../core/Error.js";import"../../../chunks/object.js";import"../../../config.js";import"../../../chunks/string.js";import"../../../chunks/shared.js";import"../../../chunks/SimpleObservable.js";import"../../../chunks/common.js";import"../../../core/Promise.js";import"../../../chunks/colorUtils.js";import"../../../chunks/mathUtils.js";import"../../../chunks/vec4.js";import"../../../geometry/Extent.js";import"../../../geometry/Geometry.js";import"../../../core/JSONSupport.js";import"../../../chunks/reader.js";import"../../../geometry/SpatialReference.js";import"../../../chunks/unitUtils.js";import"../../../chunks/jsonMap.js";import"../../../chunks/Ellipsoid.js";import"../../../chunks/writer.js";import"../../../geometry/support/webMercatorUtils.js";import"../../../core/accessorSupport/decorators/cast.js";import"../../../geometry/Multipoint.js";import"../../../chunks/zmUtils.js";import"../../../geometry/Polygon.js";import"../../../chunks/extentUtils.js";import"../../../geometry/Polyline.js";import"../../../chunks/typeUtils.js";import"../../../geometry/support/jsonUtils.js";import"../../../chunks/mat4.js";import"../../../chunks/pe.js";import"../../../chunks/assets.js";import"../../../request.js";import"../../../kernel.js";import"../../../core/urlUtils.js";import"../../../chunks/geodesicConstants.js";import"../../../geometry/support/GeographicTransformation.js";import"../../../geometry/support/GeographicTransformationStep.js";import"../../../chunks/zscale.js";import"../../../chunks/byteSizeEstimations.js";import"../../../chunks/mat3f64.js";import"../../../chunks/quatf64.js";import"../../../chunks/vec2f64.js";import"../../../chunks/vec4f64.js";import"../../../chunks/unitConversionUtils.js";import"../../../chunks/lengthUtils.js";import"../../../chunks/aaBoundingBox.js";import"../../../chunks/quantizationUtils.js";import"../../../layers/support/Field.js";import"../../../chunks/enumeration.js";import"../../../chunks/domains.js";import"../../../layers/support/CodedValueDomain.js";import"../../../layers/support/Domain.js";import"../../../layers/support/InheritedDomain.js";import"../../../layers/support/RangeDomain.js";import"../../../chunks/fieldType.js";import"../../../chunks/sphere.js";import"../../../chunks/vector.js";import"../../../chunks/Intersector3.js";import"../../../chunks/vec2.js";import"../../../chunks/ViewingMode.js";import"../../../chunks/boundedPlane.js";import"../../../chunks/plane.js";import"../../../chunks/mathUtils2.js";import"../../../chunks/verticalOffsetUtils.js";import"../../../chunks/mat3.js";import"../../../chunks/quat.js";import"../../../chunks/vec3f32.js";import"../../../chunks/ElevationProvider.js";import"../../../chunks/VisualElement.js";import"../../../chunks/TriangleMaterial.js";import"../../../chunks/basicInterfaces.js";import"../../../chunks/DefaultBufferWriter.js";import"../../../chunks/Indices.js";import"../../../chunks/Util2.js";import"../../../chunks/triangle.js";import"../../../chunks/VertexAttribute.js";import"../../../chunks/doublePrecisionUtils.js";import"../../../chunks/enums3.js";import"../../../chunks/BufferView.js";import"../../../chunks/Octree.js";import"../../../chunks/frustum.js";import"../../../chunks/InterleavedLayout.js";import"../../../chunks/types.js";import"../../../chunks/ShaderOutput.js";import"../../../chunks/RenderSlot.js";import"../../../chunks/glUtil3D.js";import"../../../chunks/interfaces2.js";import"../../../chunks/ShaderBuilder.js";import"../../../chunks/VertexElementDescriptor.js";import"../../../chunks/FramebufferObject.js";import"../../../chunks/Texture.js";import"../../../chunks/context-util.js";import"../../../chunks/MarkerSizing.glsl.js";import"../../../chunks/VisualVariables.glsl.js";import"../../../chunks/Float3PassUniform.js";import"../../../chunks/Matrix3PassUniform.js";import"../../../chunks/FloatPassUniform.js";import"../../../chunks/sdfPrimitives.js";import"../../../chunks/floatRGBA.js";import"../../../chunks/Texture2.js";import"../../../chunks/compilerUtils.js";import"../../../chunks/requestImageUtils.js";import"../../../chunks/TextureOnly.glsl.js";import"../../../chunks/ScreenSpacePass.glsl.js";import"../../../chunks/Float4PassUniform.js";import"../../../chunks/Texture2DPassUniform.js";import"../../../chunks/ShaderTechniqueConfiguration.js";import"../../../chunks/TransparencyPassType.js";import"../../../chunks/DefaultTechniqueConfiguration.js";import"../../../chunks/RibbonLine.glsl.js";import"../../../chunks/ForwardLinearDepth.glsl.js";import"../../../chunks/View.glsl.js";import"../../../chunks/mat4f32.js";import"../../../chunks/Matrix4PassUniform.js";import"../../../chunks/RgbaFloatEncoding.glsl.js";import"../../../chunks/Slice.glsl.js";import"../../../chunks/ObjectAndLayerIdColor.glsl.js";import"../../../chunks/OutputDepth.glsl.js";import"../../../chunks/LineStipple.glsl.js";import"../../../chunks/MultipassTerrainTest.glsl.js";import"../../../chunks/ReadLinearDepth.glsl.js";import"../../../chunks/PiUtils.glsl.js";import"../../../chunks/AlphaCutoff.js";import"../../../chunks/ColorConversion.glsl.js";import"../../../chunks/Program2.js";import"../../../chunks/OrderIndependentTransparency.js";import"../../../chunks/renderState.js";import"../../../chunks/line.js";import"../../../chunks/DoubleArray.js";import"../../../chunks/Attribute.js";import"../../../chunks/ObservableValue.js";import"../../../chunks/debugFlags.js";import"../../../core/Clonable.js";import"../../../chunks/persistable.js";import"../../../chunks/multiOriginJSONSupportUtils.js";import"../../../chunks/uuid.js";import"../../../chunks/resourceExtension.js";import"../../../chunks/persistableUrlUtils.js";import"../../../layers/support/fieldUtils.js";import"../../../chunks/arcadeOnDemand.js";import"../../../chunks/hydratedFeatures.js";import"../../../Graphic.js";import"../../../PopupTemplate.js";import"../../../popup/content.js";import"../../../popup/content/AttachmentsContent.js";import"../../../popup/content/Content.js";import"../../../popup/content/CustomContent.js";import"../../../popup/content/ExpressionContent.js";import"../../../popup/ElementExpressionInfo.js";import"../../../popup/content/FieldsContent.js";import"../../../popup/FieldInfo.js";import"../../../popup/support/FieldInfoFormat.js";import"../../../chunks/date.js";import"../../../chunks/number.js";import"../../../chunks/locale.js";import"../../../popup/content/MediaContent.js";import"../../../popup/content/BarChartMediaInfo.js";import"../../../popup/content/mixins/ChartMediaInfo.js";import"../../../popup/content/mixins/MediaInfo.js";import"../../../popup/content/support/ChartMediaInfoValue.js";import"../../../popup/content/support/ChartMediaInfoValueSeries.js";import"../../../chunks/chartMediaInfoUtils.js";import"../../../popup/content/ColumnChartMediaInfo.js";import"../../../popup/content/ImageMediaInfo.js";import"../../../popup/content/support/ImageMediaInfoValue.js";import"../../../popup/content/LineChartMediaInfo.js";import"../../../popup/content/PieChartMediaInfo.js";import"../../../popup/content/RelationshipContent.js";import"../../../popup/support/RelatedRecordsInfoFieldOrder.js";import"../../../popup/content/TextContent.js";import"../../../popup/ExpressionInfo.js";import"../../../popup/LayerOptions.js";import"../../../popup/RelatedRecordsInfo.js";import"../../../support/actions/ActionBase.js";import"../../../core/Identifiable.js";import"../../../support/actions/ActionButton.js";import"../../../support/actions/ActionToggle.js";import"../../../symbols.js";import"../../../symbols/CIMSymbol.js";import"../../../symbols/Symbol.js";import"../../../symbols/ExtrudeSymbol3DLayer.js";import"../../../symbols/Symbol3DLayer.js";import"../../../chunks/utils2.js";import"../../../symbols/edges/Edges3D.js";import"../../../chunks/materialUtils.js";import"../../../chunks/opacityUtils.js";import"../../../symbols/edges/SketchEdges3D.js";import"../../../symbols/edges/SolidEdges3D.js";import"../../../chunks/Symbol3DMaterial.js";import"../../../symbols/FillSymbol.js";import"../../../symbols/SimpleLineSymbol.js";import"../../../symbols/LineSymbol.js";import"../../../symbols/LineSymbolMarker.js";import"../../../chunks/lineMarkers.js";import"../../../symbols/FillSymbol3DLayer.js";import"../../../symbols/patterns/LineStylePattern3D.js";import"../../../symbols/patterns/StylePattern3D.js";import"../../../chunks/utils3.js";import"../../../chunks/colors.js";import"../../../chunks/symbolLayerUtils3D.js";import"../../../symbols/Font.js";import"../../../symbols/IconSymbol3DLayer.js";import"../../../chunks/Symbol3DAnchorPosition2D.js";import"../../../symbols/LabelSymbol3D.js";import"../../../symbols/Symbol3D.js";import"../../../chunks/collectionUtils.js";import"../../../portal/Portal.js";import"../../../core/Loadable.js";import"../../../portal/PortalQueryParams.js";import"../../../portal/PortalQueryResult.js";import"../../../portal/PortalUser.js";import"../../../portal/PortalFolder.js";import"../../../portal/PortalGroup.js";import"../../../symbols/LineSymbol3DLayer.js";import"../../../symbols/LineStyleMarker3D.js";import"../../../symbols/ObjectSymbol3DLayer.js";import"../../../symbols/PathSymbol3DLayer.js";import"../../../symbols/TextSymbol3DLayer.js";import"../../../symbols/WaterSymbol3DLayer.js";import"../../../symbols/support/StyleOrigin.js";import"../../../chunks/Thumbnail.js";import"../../../chunks/calloutUtils.js";import"../../../symbols/callouts/Callout3D.js";import"../../../symbols/callouts/LineCallout3D.js";import"../../../symbols/support/Symbol3DVerticalOffset.js";import"../../../symbols/LineSymbol3D.js";import"../../../symbols/MarkerSymbol.js";import"../../../symbols/MeshSymbol3D.js";import"../../../symbols/PictureFillSymbol.js";import"../../../chunks/urlUtils.js";import"../../../symbols/PictureMarkerSymbol.js";import"../../../symbols/PointSymbol3D.js";import"../../../symbols/PolygonSymbol3D.js";import"../../../symbols/SimpleFillSymbol.js";import"../../../symbols/SimpleMarkerSymbol.js";import"../../../symbols/TextSymbol.js";import"../../../symbols/WebStyleSymbol.js";import"../../../chunks/Camera.js";import"../../../chunks/graphicUtils.js";import"../../../chunks/ColorMaterial.js";import"../../../chunks/ColorMaterial.glsl.js";import"../../../chunks/Transform.glsl.js";import"../../../chunks/VertexColor.glsl.js";import"../../../chunks/OutputHighlight.glsl.js";import"../../../chunks/ImageMaterial.js";import"../../../chunks/GLTextureMaterial.js";import"../../../chunks/ImageMaterial.glsl.js";import"../../../chunks/NativeLineMaterial.js";import"../../../chunks/NativeLine.glsl.js";import"../../../chunks/ShadedColorMaterial.glsl.js";import"../../../chunks/glUtil.js";import"../../../chunks/LaserlinePath.glsl.js";import"../../../chunks/Laserline.glsl.js";import"../../../chunks/CameraSpace.glsl.js";import"../../../chunks/Laserlines.glsl.js";import"../../../chunks/InputManager.js";import"../../../chunks/Queue.js";import"../../../chunks/PropertiesPool.js";import"../../../chunks/drawUtils.js";import"../../../chunks/VisualElementResources.js";import"../../../chunks/ElevationContext.js";import"../../../chunks/HUDMaterial.js";import"../../../chunks/AlignPixel.glsl.js";import"../../../chunks/VerticalOffset.glsl.js";import"../../../chunks/HUDMaterial.glsl.js";import"../../../chunks/MultipassGeometryTest.glsl.js";let Ut=class extends e{constructor(t){super(t),this.innerWidth=2,this.outerWidth=8,this.visibleInnerColor=new I([3,252,111,1]),this.visibleOuterColor=new I([3,252,111,.15]),this.occludedInnerColor=new I([252,3,69,1]),this.occludedOuterColor=new I([252,3,69,.1]),this.undefinedInnerColor=new I([255,255,255,1]),this.undefinedOuterColor=new I([127,127,127,.2])}};t([d({type:Number})],Ut.prototype,"innerWidth",void 0),t([d({type:Number})],Ut.prototype,"outerWidth",void 0),t([d({type:I})],Ut.prototype,"visibleInnerColor",void 0),t([d({type:I})],Ut.prototype,"visibleOuterColor",void 0),t([d({type:I})],Ut.prototype,"occludedInnerColor",void 0),t([d({type:I})],Ut.prototype,"occludedOuterColor",void 0),t([d({type:I})],Ut.prototype,"undefinedInnerColor",void 0),t([d({type:I})],Ut.prototype,"undefinedOuterColor",void 0),Ut=t([m("esri.views.3d.analysis.LineOfSight.LineOfSightConfiguration")],Ut);let xt=class extends e{constructor(t){super(t),this.elevationAlignedTargetLocation=null,this.inputPoints={isValid:!1,observer:g(),observerSurfaceNormal:null,observerFeatureId:null,target:g(),targetSurfaceNormal:null,targetFeatureId:null,observerAdjusted:g(),targetAdjusted:g()},this.computationResult={start:g(),end:g(),intersection:g(),isValid:!1,isTargetVisible:!1},this.result=null}notifyResultChanged(){this.notifyChange("computationResult")}notifyInputPointsChanged(){this.notifyChange("inputPoints")}};var Ft;t([d()],xt.prototype,"target",void 0),t([d()],xt.prototype,"elevationAlignedTargetLocation",void 0),t([d()],xt.prototype,"inputPoints",void 0),t([d()],xt.prototype,"computationResult",void 0),t([d()],xt.prototype,"result",void 0),xt=t([m("esri.views.3d.analysis.LineOfSight.LineOfSightComputation")],xt);let zt=Ft=class extends e{constructor(t){super(t)}clone(){return new Ft({type:this.type,id:it(this.id),mapPoint:it(this.mapPoint),renderPoint:y(this.renderPoint),normal:it(this.normal),ray:it(this.ray),graphic:this.graphic})}equals(t){return this.type===t.type&&this.id===t.id&&o(this.mapPoint,t.mapPoint)&&v(this.renderPoint,t.renderPoint)&&h(this.normal,t.normal)&&W(this.ray,t.ray)&&this.graphic===t.graphic}};t([d()],zt.prototype,"type",void 0),t([d({constructOnly:!0})],zt.prototype,"id",void 0),t([d({constructOnly:!0})],zt.prototype,"mapPoint",void 0),t([d({constructOnly:!0})],zt.prototype,"renderPoint",void 0),t([d({constructOnly:!0})],zt.prototype,"normal",void 0),t([d({constructOnly:!0})],zt.prototype,"graphic",void 0),t([d({constructOnly:!0})],zt.prototype,"ray",void 0),zt=Ft=t([m("esri.views.3d.analysis.LineOfSight.LineOfSightIntersectionResult")],zt);let Gt=class extends e{constructor(t){super(t),this._terrainIntersectionOptionsLayerUids=new Set(["terrain"])}initialize(){this.intersector=pt(this.view.state.viewingMode),this.intersector.options.hud=!1,this.intersector.options.store=ut.MIN}getScreenPointIntersection(t){const e=tt(t,J.get()),i=at(this.view.state.camera,e,Jt);return this._getRayIntersection(i)}_getRayIntersection(t,e){if(n(t)||n(this.view.sceneIntersectionHelper))return null;this.intersector.options.store=ut.MIN,this.view.sceneIntersectionHelper.intersectToolIntersectorRay(t,this.intersector,e);const i=this.intersector.results.min,s=g();if(!i.getIntersectionPoint(s))return null;const o=this.view.renderCoordsHelper.fromRenderCoords(s,this.view.spatialReference),a=y(i.normal);if(st(i))return new zt({type:ct.OBJECT,id:`${i.target.layerUid}/${i.target.nodeIndex}/${i.target.componentIndex}`,mapPoint:o,renderPoint:s,normal:a,ray:$(t),graphic:null});if(lt(i))return new zt({type:ct.TERRAIN,id:i.target.lij.slice(),mapPoint:o,renderPoint:s,normal:a,ray:$(t),graphic:null});const l=ot(i,this.view);if(r(l)){const e=l.layer,i=l.sourceLayer;let n;return n=i&&"scene"===i.type?et(l,i.objectIdField):l.uid,new zt({type:ct.OBJECT,id:`${e?.uid}/${n}`,mapPoint:o,renderPoint:s,normal:a,ray:$(t),graphic:l})}return null}updateFromGroundIntersection(t,e,i){const s=Nt,o=Bt,n=Wt,a=qt;b(o,t),this.view.renderCoordsHelper.worldUpAtPosition(o,n),f(n,n);const l=this.view.basemapTerrain.visibleElevationBounds,p=l?Math.abs(l.max-l.min):100,u=e>=0?1:-1;_(a,n,u*(p+Math.abs(e))),j(s,o,a),Q(s,o,Jt);const c=this._getRayIntersection(Jt,{include:this._terrainIntersectionOptionsLayerUids});return r(c)?(_(a,n,u*e),j(i,c.renderPoint,a),y(c.normal)):(b(i,t),null)}};t([d()],Gt.prototype,"view",void 0),t([d()],Gt.prototype,"intersector",void 0),Gt=t([m("esri.views.3d.analysis.LineOfSight.LineOfSightRayIntersector")],Gt);const Nt=g(),Bt=g(),Wt=g(),qt=g(),Jt=q(),$t="esri.views.3d.analysis.LineOfSight.LineOfSightController",Qt=M.getLogger($t);let Zt=class extends(s.EventedMixin(e)){constructor(t){super(t),this.updateOnCameraChange=!0,this._observerGroundOffsetRenderSpace=0,this._effectiveObserverElevationMode="absolute-height",this._observerFeatureId=null,this._updatingHandles=new x,this._frameTask=mt,this._handles=new V,this._computationHandles=new V,this._externalObserverUpdate=!0}initialize(){const t=this.view.resourceController?.scheduler;this._frameTask=t?t.registerTask(gt.LINE_OF_SIGHT_TOOL):mt,this._intersector=new Gt({view:this.view}),this._handles.add([this._connectObserver(),this._connectComputations(),this._connectTargets()])}destroy(){this._handles.destroy(),this._computationHandles.destroy(),this._computations.removeAll(),this._updatingHandles.destroy()}get updating(){return this._frameTask.updating||this._updatingHandles.updating}get priority(){return this._frameTask.priority}set priority(t){this._frameTask.priority=t}get _computations(){return this.analysisViewData.computations}get _elevationAlignedObserverPositionRenderSpace(){return this.analysisViewData.observerEngineLocation}set _elevationAlignedObserverPositionRenderSpace(t){this.analysisViewData.observerEngineLocation=t}get _screenPixelSize(){return this.view.state.camera.computeScreenPixelSizeAt(this._elevationAlignedObserverPositionRenderSpace)}_computeResult(t){const e=t.computation,{inputPoints:i,computationResult:s}=e,{observerAdjusted:o,targetAdjusted:n}=i,{start:r,end:a}=s;b(r,o),b(a,n),this._canCompute(e)?this._computeIntersection(t):this._interpolateIntersection(t),e.notifyResultChanged(),this.emit("result-changed",{target:t.computation.target,result:e.result})}_updateAdjustedPointsFromFeatures(t){const e=this.view,{sceneIntersectionHelper:i}=e,{inputPoints:s}=t,{observerAdjusted:o,observerFeatureId:a,targetFeatureId:l,targetAdjusted:p}=s;if(n(a)&&n(l))return;const u=C(o,p),c=this._intersector.intersector,d=Q(s.observer,s.target,Yt);c.options.store=ut.ALL,i.intersectToolIntersectorRay(d,c);let h=null,m=null,y=null,v=null;for(const t of c.results.all){const i=ot(t,this.view);if(n(i)||n(t.distanceInRenderSpace))continue;const s=P(i);n(s)||(r(a)&&s===a&&(n(h)&&(h=this._getFeatureDistanceThreshold(t,e,u)),t.distanceInRenderSpace<h&&(y=t)),r(l)&&s===l&&(n(m)&&(m=this._getFeatureDistanceThreshold(t,e,u)),n(v)&&t.distanceInRenderSpace<u&&u-t.distanceInRenderSpace<m&&(v=t)))}r(y)&&y.getIntersectionPoint(o)&&(s.observerSurfaceNormal=y.getTransformedNormal(g())),r(v)&&v.getIntersectionPoint(p)&&(s.targetSurfaceNormal=v.getTransformedNormal(g()))}_getFeatureDistanceThreshold(t,e,i){if(nt(t)){const s=rt(t,e);if(r(s))return Math.min(s*ee,i)}return 1e-5*i}_adjustStartEndPositions(t){const e=this._screenPixelSize,i=this.view,{inputPoints:s}=t,{observer:o,observerSurfaceNormal:n,target:a,targetSurfaceNormal:l,observerAdjusted:p,targetAdjusted:u}=s,c=Xt;b(p,o),b(u,a),this._updateAdjustedPointsFromFeatures(t),r(n)?b(c,n):k(c,u,p);const d=e;f(c,c),_(c,c,Math.min(d,1)),j(p,p,c),r(l)?b(c,l):k(c,p,u);const h=i.state.camera.computeScreenPixelSizeAt(u);f(c,c),_(c,c,Math.min(h,1)),j(u,u,c)}_computeIntersection({computation:t,interpolationInfo:e}){const{view:i}=this,{sceneIntersectionHelper:s,renderCoordsHelper:o}=i;if(n(s))return;const a=this._intersector.intersector,{computationResult:l,inputPoints:p}=t,{observer:u,target:c}=p,{start:d,end:h}=l,m=Q(d,h,Yt);a.options.store=ut.MIN,s.intersectToolIntersectorRay(m,a);const g=a.results.min,y=l.intersection,v=Xt;let f=!0;if(r(g)&&g.getIntersectionPoint(y)){b(e.originalIntersection,y),b(e.originalObserver,d),b(e.originalTarget,h),o.fromRenderCoords(y,v,i.spatialReference);const t=1-O(h,c)/O(d,c);f=O(u,y)>=t*O(u,c)}const _=new yt(v,i.spatialReference);{const{result:e,target:s}=t;r(e)?(e.target=s,e.intersectedGraphic=f?null:ot(g,i),e.intersectedLocation=f?null:_,e.visible=f):t.result=new Y({target:s,elevationAlignedTargetLocation:t.elevationAlignedTargetLocation,intersectedGraphic:f?null:ot(g,i),intersectedLocation:f?null:_,visible:f})}l.isValid=p.isValid=!0,l.isTargetVisible=f}_interpolateIntersection({computation:t,interpolationInfo:e}){const{computationResult:i,inputPoints:s}=t,{start:o,end:n,intersection:r}=i,{originalIntersection:a,originalObserver:l,originalTarget:p}=e;if(b(r,a),s.isValid){const t=Xt,e=O(l,a)/O(l,p);w(t,o,l),_(t,t,1-e),j(r,r,t),w(t,n,p),_(t,t,e),j(r,r,t),i.isValid=!0}else t.result=null,i.isValid=!1,i.isTargetVisible=!1}_canCompute(t){const e=this.analysisViewData.elevationAlignedObserver,i=this.view.frustum;if(n(e)||n(t.elevationAlignedTargetLocation)||n(i))return!1;const{observerAdjusted:s,targetAdjusted:o}=t.inputPoints,r=i.intersectsPoint(s),a=i.intersectsPoint(o);return r&&a}_onObserverPositionChange(t,e,i,s,o){if(this._externalObserverUpdate=o,n(t))return this.analysisViewData.elevationAlignedObserver=null,void(this._observerFeatureId=null);if(n(e))return dt(this.analysis,t.spatialReference,Qt),void(this.analysisViewData.elevationAlignedObserver=null);const r=this._getEffectiveElevationInfo(e,i),{absoluteZ:a,elevation:l}=Z(e.x,e.y,e.z,this.view.spatialReference,this.view,r),p=e.clone();p.z=a,this._effectiveObserverElevationMode=r.mode,this.analysisViewData.elevationAlignedObserver=p;const u=g();this.view.renderCoordsHelper.toRenderCoords(p,u),this._elevationAlignedObserverPositionRenderSpace=u,this._observerGroundOffsetRenderSpace=a-l,this._observerFeatureId=P(s),this.priority=gt.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onObserverRenderSpacePositionChangeForComputation(t,e,i,s,o){const{inputPoints:r}=t;switch(b(r.observer,e),r.observerFeatureId=o,r.observerSurfaceNormal=null,s){case"on-the-ground":case"relative-to-ground":{const t=this._intersector.updateFromGroundIntersection(r.observer,i,r.observer);n(r.observerFeatureId)&&(r.observerSurfaceNormal=t)}}this._adjustStartEndPositions(t),t.notifyInputPointsChanged(),this.priority=gt.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onTargetPositionChange(t,e,i,s,o,a=!0){const l=t.inputPoints;if(a&&(l.isValid=!1),n(i))return r(e)&&dt(this.analysis,e.spatialReference,Qt),t.elevationAlignedTargetLocation=null,void t.notifyInputPointsChanged();const p=this._getEffectiveElevationInfo(i,s),{absoluteZ:u,elevation:c}=Z(i.x,i.y,i.z,this.view.spatialReference,this.view,p),d=i.clone();switch(d.z=u,t.elevationAlignedTargetLocation=d,this.view.renderCoordsHelper.toRenderCoords(t.elevationAlignedTargetLocation,l.target),l.targetFeatureId=P(o),l.targetSurfaceNormal=null,p.mode){case"on-the-ground":case"relative-to-ground":{const t=this._intersector.updateFromGroundIntersection(l.target,u-c,l.target);n(l.targetFeatureId)&&(l.targetSurfaceNormal=t)}}this._adjustStartEndPositions(t),t.notifyInputPointsChanged(),this.priority=gt.LINE_OF_SIGHT_TOOL_INTERACTIVE}_connectComputationToTarget(t){return E([this._updatingHandles.add((()=>({computation:t,targetPosition:t.target.position,targetElevationInfo:t.target.elevationInfo,targetFeatureInfo:t.target.feature,projectedTargetPosition:F(t.target.position,this.view.spatialReference)})),(({computation:t,targetPosition:e,targetElevationInfo:i,targetFeatureInfo:s,projectedTargetPosition:o})=>{r(o.pending)?this._updatingHandles.addPromise(o.pending):this._onTargetPositionChange(t,e,o.geometry,i,s)}),A)])}_connectComputationToObserver(t){return this._updatingHandles.add((()=>({computation:t,observer:this.analysisViewData.elevationAlignedObserver})),(({computation:t})=>{this._externalObserverUpdate&&(t.inputPoints.isValid=!1,t.notifyInputPointsChanged())}),A)}_connectComputationToRenderSpaceObserver(t){return this._updatingHandles.add((()=>({computation:t,observer:this._elevationAlignedObserverPositionRenderSpace,observerGroundOffset:this._observerGroundOffsetRenderSpace,observerElevationMode:this._effectiveObserverElevationMode,observerFeatureId:this._observerFeatureId})),(({computation:t,observer:e,observerGroundOffset:i,observerElevationMode:s,observerFeatureId:o})=>{this._onObserverRenderSpacePositionChangeForComputation(t,e,i,s,o)}),A)}_connectComputationToCamera(t){return this._updatingHandles.add((()=>({camera:this.view.state.camera,isDirty:this._isCameraDirty})),(({isDirty:e})=>{!this.updateOnCameraChange||t.inputPoints.isValid&&!e||t.notifyInputPointsChanged()}))}_connectComputationToSlicePlane(t){return this._updatingHandles.add((()=>this.view.slicePlane),(()=>{t.inputPoints.isValid=!1,t.notifyInputPointsChanged()}))}_connectComputationToElevation(t){const e=(i,s)=>{const o=this.analysis.observer,a=t.target;let l=null,p=null,u=null,c=null,d=null,h=null;if(r(o)&&r(o.position)){const t=F(o.position,this.view.spatialReference);if(r(t.pending))return this._updatingHandles.addPromise(t.pending),void t.pending.finally((()=>e(i,s)));l=t.geometry,p=o.elevationInfo,u=o.feature}if(r(a.position)){const t=F(a.position,this.view.spatialReference);if(r(t.pending))return this._updatingHandles.addPromise(t.pending),void t.pending.finally((()=>e(i,s)));c=t.geometry,d=a.elevationInfo,h=a.feature}n(l)&&n(c)||(z(i,s,te,this.view.spatialReference),r(l)&&N(te,l)&&this._onObserverPositionChange(r(o)?o.position:null,l,p,u,!1),r(c)&&N(te,c)&&this._onTargetPositionChange(t,a.position,c,d,h,!1),r(l)&&r(c)&&B(te,l,c)&&t.notifyInputPointsChanged())};return this.view.elevationProvider.on("elevation-change",(t=>e(t.extent,t.spatialReference)))}_connectComputationToTask(t){let e=p;const i={computation:t,interpolationInfo:{originalIntersection:g(),originalObserver:g(),originalTarget:g()}};return E([this._updatingHandles.add((()=>t.inputPoints),(()=>{e=a(e),e=L((async t=>{await D(this._frameTask.schedule((()=>this._computeResult(i)),t))}))}),{initial:!0,equals:()=>!1}),R((()=>e=a(e)))])}_connectComputation(t){const e=this._computationHandles;e.has(t)||e.add([this._connectComputationToTarget(t),this._connectComputationToObserver(t),this._connectComputationToRenderSpaceObserver(t),this._connectComputationToCamera(t),this._connectComputationToSlicePlane(t),this._connectComputationToElevation(t),this._connectComputationToTask(t)],t)}_disconnectComputation(t){this._computationHandles.remove(t)}_onComputationCollectionChange({added:t,removed:e}){for(const t of e)this._disconnectComputation(t);for(const e of t)this._connectComputation(e)}_onTargetCollectionChange({added:t,removed:e}){for(const t of e)this._removeTarget(t);for(const e of t)this._addTarget(e)}_onCursorTargetChange(t,e){r(e)&&this._removeTarget(e),r(t)&&this._addTarget(t)}_addTarget(t){this._computations.some((e=>e.target===t))||this._computations.add(new xt({target:t}))}_removeTarget(t){const e=this._computations.findIndex((e=>e.target===t));this._computations.removeAt(e)}_connectObserver(){return E([this._updatingHandles.add((()=>({observerPosition:r(this.analysis.observer)?this.analysis.observer.position:null,projectedObserverPosition:F(r(this.analysis.observer)?this.analysis.observer.position:null,this.view.spatialReference),observerElevationInfo:r(this.analysis.observer)?this.analysis.observer.elevationInfo:null,observerFeatureInfo:r(this.analysis.observer)?this.analysis.observer.feature:null})),(({observerPosition:t,projectedObserverPosition:e,observerElevationInfo:i,observerFeatureInfo:s})=>{r(e.pending)?this._updatingHandles.addPromise(e.pending):this._onObserverPositionChange(t,e.geometry,i,s,!0)}),A)])}_connectComputations(){return this._updatingHandles.addOnCollectionChange((()=>this._computations),(t=>this._onComputationCollectionChange(t)),{initial:!0,final:!0})}_connectTargets(){return E([this._updatingHandles.addOnCollectionChange((()=>this.analysis.targets),(t=>this._onTargetCollectionChange(t)),{initial:!0,final:!0}),this._updatingHandles.add((()=>this.analysisViewData.cursorTarget),((t,e)=>{this._onCursorTargetChange(t,e)}))])}get _isCameraDirty(){const t=this.analysisViewData.elevationAlignedObserver,{view:e}=this,{renderCoordsHelper:i}=e;if(n(t)||n(i))return!1;const s=Xt;i.toRenderCoords(t,s);const o=e.state.camera.computeScreenPixelSizeAt(s);return Math.abs((o-this._screenPixelSize)/this._screenPixelSize)>Kt}_getEffectiveElevationInfo(t,e){return t.hasZ?l(e,{mode:"absolute-height",offset:0}):{mode:"on-the-ground",offset:0}}};t([d({constructOnly:!0})],Zt.prototype,"analysis",void 0),t([d({constructOnly:!0})],Zt.prototype,"analysisViewData",void 0),t([d({constructOnly:!0})],Zt.prototype,"view",void 0),t([d()],Zt.prototype,"updating",null),t([d()],Zt.prototype,"priority",null),t([d()],Zt.prototype,"updateOnCameraChange",void 0),t([d()],Zt.prototype,"_computations",null),t([d()],Zt.prototype,"_elevationAlignedObserverPositionRenderSpace",null),t([d()],Zt.prototype,"_observerGroundOffsetRenderSpace",void 0),t([d()],Zt.prototype,"_effectiveObserverElevationMode",void 0),t([d()],Zt.prototype,"_observerFeatureId",void 0),t([d()],Zt.prototype,"_screenPixelSize",null),t([d({readOnly:!0})],Zt.prototype,"_updatingHandles",void 0),t([d()],Zt.prototype,"_frameTask",void 0),t([d()],Zt.prototype,"_isCameraDirty",null),Zt=t([m($t)],Zt);const Kt=.1,Xt=g(),Yt=q(),te=G(),ee=.05;let ie=class extends e{constructor(t){super(t),this.enabled=!0,this.glowColor=new I([255,127,0]),this.glowWidth=8,this.innerColor=new I([255,255,255]),this.innerWidth=.75,this.globalAlpha=.75}};t([d({type:Boolean})],ie.prototype,"enabled",void 0),t([d({type:I})],ie.prototype,"glowColor",void 0),t([d({type:Number})],ie.prototype,"glowWidth",void 0),t([d({type:I})],ie.prototype,"innerColor",void 0),t([d({type:Number})],ie.prototype,"innerWidth",void 0),t([d({type:Number})],ie.prototype,"globalAlpha",void 0),ie=t([m("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightLaserLineConfiguration")],ie);let se=class extends e{constructor(t){super(t),this.size=.5,this.color=new I([255,127,0,.75])}};t([d({type:Number})],se.prototype,"size",void 0),t([d({type:I})],se.prototype,"color",void 0),se=t([m("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightObserverConfiguration")],se);let oe=class extends e{constructor(t){super(t),this.size=.5,this.visibleColor=new I([3,252,111,.75]),this.occludedColor=new I([252,3,69,.75]),this.undefinedColor=new I([127,127,127,.75])}};t([d({type:Number})],oe.prototype,"size",void 0),t([d({type:I})],oe.prototype,"visibleColor",void 0),t([d({type:I})],oe.prototype,"occludedColor",void 0),t([d({type:I})],oe.prototype,"undefinedColor",void 0),oe=t([m("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightTargetConfiguration")],oe);class ne extends e{constructor(t){super(t),this.innerWidth=2,this.outerWidth=8,this.visibleInnerColor=new I([3,252,111,1]),this.visibleOuterColor=new I([3,252,111,.15]),this.occludedInnerColor=new I([252,3,69,1]),this.occludedOuterColor=new I([252,3,69,.1]),this.undefinedInnerColor=new I([255,255,255,1]),this.undefinedOuterColor=new I([127,127,127,.2])}}t([d({type:Number})],ne.prototype,"innerWidth",void 0),t([d({type:Number})],ne.prototype,"outerWidth",void 0),t([d({type:I})],ne.prototype,"visibleInnerColor",void 0),t([d({type:I})],ne.prototype,"visibleOuterColor",void 0),t([d({type:I})],ne.prototype,"occludedInnerColor",void 0),t([d({type:I})],ne.prototype,"occludedOuterColor",void 0),t([d({type:I})],ne.prototype,"undefinedInnerColor",void 0),t([d({type:I})],ne.prototype,"undefinedOuterColor",void 0);let re=class extends e{constructor(t){super(t),this.laserLine=new ie,this.observer=new se,this.target=new oe,this.lineOfSight=new ne}};function ae(t,e,i){return new kt(Tt(Ot(I.toUnitRGBA(e)),t,32,32),i)}function le(t){const e=[];return t.customColor1&&e.push(ae(t.size,t.customColor1,St.Custom1)),t.customColor2&&e.push(ae(t.size,t.customColor2,St.Custom2)),t.customColor3&&e.push(ae(t.size,t.customColor3,St.Custom3)),t.color&&e.push(ae(t.size,t.color)),e}var pe;t([d({type:ie})],re.prototype,"laserLine",void 0),t([d({type:se})],re.prototype,"observer",void 0),t([d({type:oe})],re.prototype,"target",void 0),t([d({type:ne})],re.prototype,"lineOfSight",void 0),re=t([m("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightToolConfiguration")],re),function(t){t.Ready="ready",t.Creating="creating",t.Created="created"}(pe||(pe={}));let ue=class extends Pt{constructor(t){super(t),this.removeIncompleteOnCancel=!1,this.configuration=new re,this.analysisViewData=null,this._latestPointerMovePointerType=null,this._laserlineVisualElement=null,this._grabbedManipulator=null,this._analysisHandles=new V,this._handles=new V,this._updatingHandles=new x,this._manipulatorHandles=new V,this._targetTrackerManipulator=null}initialize(){this._intersector=new Gt({view:this.view}),this._handles.add(H((()=>this.state),(t=>{t===pe.Created&&this.finishToolCreation()}),U)),this._observerManipulator=this._createObserverManipulator(),this._handles.add([this._updatingHandles.add((()=>({...this.configuration.observer})),(()=>this._updateObserverManipulatorStyle())),this._updatingHandles.add((()=>this.analysisViewData?.elevationAlignedObserver),(t=>this._onObserverLocationChange(t)),A),this._updatingHandles.add((()=>({...this.configuration.laserLine})),(()=>this._createVisualElements()),A),this._updatingHandles.add((()=>this._laserLineRendererDependencies()),(t=>this._updateLaserLineRenderer(t))),this._connectComputations(),this._updatingHandles.addWhen((()=>!this._shouldRenderTracker),(()=>this._clearCursorTracker()),A)])}destroy(){this._updatingHandles=u(this._updatingHandles),this._handles=u(this._handles),this._manipulatorHandles=u(this._manipulatorHandles),this._analysisHandles=u(this._analysisHandles),this._observerManipulator=null,this._clearCursorTracker(),this._removeVisualElements(),this._intersector=null,this._set("analysis",null)}get state(){return this.active?this.hasGrabbedManipulators?pe.Created:pe.Creating:r(this.analysis.observer)&&r(this.analysis.observer.position)?pe.Created:pe.Ready}get cursor(){return this.active&&this._showTracker?"crosshair":null}get updating(){return r(this.analysisViewData)&&this.analysisViewData.updating||this._updatingHandles.updating}get _showTracker(){return this.active&&"mouse"===this._latestPointerMovePointerType}get _shouldRenderTracker(){return this._showTracker&&r(this.analysis.observer)&&r(this.analysis.observer.position)&&!this.hasGrabbedManipulators}continue(){this.view.activeTool=this}stop(){this.view.activeTool=null}onEditableChange(){this.analysisViewData.editable=this.internallyEditable}onInputEvent(t){switch(t.type){case"immediate-double-click":this._doubleClickHandler(t);break;case"key-down":this._keyDownHandler(t);break;case"pointer-move":this._pointerMoveHandler(t)}}onInputEventAfter(t){"immediate-click"===t.type&&this._clickHandler(t)}onShow(){}onHide(){}onDeactivate(){this._clearCursorTracker()}_connectComputations(){return this._updatingHandles.addOnCollectionChange((()=>this.analysisViewData.computations),(t=>this._onComputationsCollectionChange(t)),{initial:!0,final:!0})}_onComputationsCollectionChange({added:t,removed:e}){for(const t of e)this._disconnectComputation(t);for(const e of t)this._connectComputation(e)}_connectComputation(t){if(this.destroyed)return void M.getLogger(this.declaredClass).warn("Attempting to connect an analysis to a destroyed LineOfSight tool. Ignoring.");const e=this._analysisHandles;if(e.has(t))return;const i=this._createTargetManipulator(t.target);n(this._targetTrackerManipulator)&&i.metadata.target===this.analysisViewData.cursorTarget&&(this._targetTrackerManipulator=i,this._targetTrackerManipulator.available=!1,this._targetTrackerManipulator.interactive=!1,this._updateLaserLineRenderer()),e.add([this._updatingHandles.add((()=>this._getLineOfSightManipulatorStateDependencies(t)),(()=>this._updateManipulatorState(i,t)),A),this._updatingHandles.add((()=>t.elevationAlignedTargetLocation),(t=>this._onTargetLocationChange(t,i)),A)],t)}_disconnectComputation(t){if(this.destroyed)return void M.getLogger(this.declaredClass).warn("Attempting to disconnect an analysis from a destroyed LineOfSight tool. Ignoring.");this._analysisHandles.remove(t);const e=this._getTargetManipulator(t.target);r(e)&&(this.manipulators.remove(e),this._manipulatorHandles.remove(e),r(this._targetTrackerManipulator)&&this._targetTrackerManipulator===e&&(this._targetTrackerManipulator=null))}_clearCursorTracker(){this.analysisViewData.cursorTarget=u(this.analysisViewData.cursorTarget)}_createManipulator(t,e,i){const s=function(t,e){const i=le(e),s=new Ct({view:t,renderObjects:i,elevationInfo:{mode:"absolute-height",offset:0}});return wt(s),s}(this.view,t);return s.metadata=i,this._manipulatorHandles.add([e(s),s.events.on("grab-changed",(t=>this._manipulatorGrabChanged(s,t))),s.events.on("immediate-click",(t=>this._manipulatorClick(s,t)))],s),this.manipulators.add(s),s}_createTargetManipulator(t){const e=this.configuration,i={size:e.target.size,customColor1:e.target.visibleColor,customColor2:e.target.occludedColor,customColor3:e.target.undefinedColor,visible:!0},s={target:t,type:"target"},o=this._createManipulator(i,(t=>this._createTargetManipulatorDragPipeline(t)),s);return r(t.position)?o.elevationAlignedLocation=t.position:o.available=!1,o}_getTargetManipulator(t){let e=null;return this.manipulators.forEach((i=>{const s=i.manipulator;n(e)&&"target"===s.metadata.type&&s.metadata.target===t&&(e=s)})),e}_createObserverManipulator(){const t=this.configuration,e={size:t.observer.size,color:t.observer.color,visible:!0};return this._createManipulator(e,(t=>this._createObserverManipulatorDragPipeline(t)),{type:"observer",intersection:null})}_updateObserverManipulatorStyle(){const t=this._observerManipulator,e=this.configuration.observer,i={size:e.size,color:e.color,visible:t.available};t.renderObjects=le(i)}_screenToIntersection(){return t=>{const e=this._intersector.getScreenPointIntersection(t.screenEnd);return n(e)?null:{...t,intersection:e}}}_createTargetManipulatorDragPipeline(t){return Lt(t,((e,i,s)=>{i.next(this._screenToIntersection()).next(this._updateTargetDragStep(t)).next((()=>this._updateLaserLineRenderer())),s.next(this._cancelTargetDragStep(t.metadata.target)).next((()=>this._updateLaserLineRenderer()))}))}_createObserverManipulatorDragPipeline(t){return Lt(t,((t,e,i)=>{e.next(this._screenToIntersection()).next(this._updateObserverDragStep()).next((()=>this._updateLaserLineRenderer())),i.next(this._cancelObserverDragStep()).next((()=>this._updateLaserLineRenderer()))}))}_updateObserverDragStep(){return t=>(r(t.intersection.mapPoint)?(n(this.analysis.observer)&&(this.analysis.observer=new vt),this._updateFromIntersection(this.analysis.observer,t.intersection)):this.analysis.observer=null,t)}_cancelObserverDragStep(){const t=r(this.analysis.observer)&&r(this.analysis.observer.position)?this.analysis.observer.clone():null;return e=>(this.analysis.observer=t,e)}_updateTargetDragStep(t){return e=>{this._updateFromIntersection(t.metadata.target,e.intersection);const i=e.intersection.mapPoint;return r(i)&&(t.elevationAlignedLocation=i),e}}_cancelTargetDragStep(t){const e=c(t.position,(t=>t.clone()));return i=>(t.position=e,i)}_manipulatorGrabChanged(t,e){switch(e.action){case"start":this._grabbedManipulator=t;break;case"end":this._grabbedManipulator===t&&(this._grabbedManipulator=null)}}_updateManipulatorState(t,e){const{isValid:i,isTargetVisible:s}=e.computationResult;t.state=i?s?St.Custom1:St.Custom2:St.Custom3}_getLineOfSightManipulatorStateDependencies(t){const{isValid:e,isTargetVisible:i}=t.computationResult;return{isValid:e,isTargetVisible:i}}_laserLineRendererDependencies(){return{laserlineVisualElement:this._laserlineVisualElement,grabbedManipulator:this._grabbedManipulator,shouldRenderTracker:this._shouldRenderTracker,observerPosition:r(this.analysis.observer)?this.analysis.observer.position:null,visible:this.visible}}_updateLaserLineRenderer(t=this._laserLineRendererDependencies()){const{laserlineVisualElement:e,grabbedManipulator:i,shouldRenderTracker:s,observerPosition:o,visible:a}=t;if(n(e))return;const l=r(i)?i:s&&r(o)?this._targetTrackerManipulator:null;this.configuration.laserLine.enabled&&r(l)&&a?(e.visible=!0,e.heightManifoldTarget=l.renderLocation,l!==this._observerManipulator?e.lineVerticalPlaneSegment=_t(this._observerManipulator.renderLocation,l.renderLocation,ce):e.lineVerticalPlaneSegment=null):(e.visible=!1,e.heightManifoldTarget=null,e.lineVerticalPlaneSegment=null)}_createVisualElements(){const t=this.configuration.laserLine;this._removeVisualElements(),this._laserlineVisualElement=new It({view:this.view,attached:!0,visible:this.visible,style:{glowColor:I.toUnitRGB(t.glowColor),glowWidth:t.glowWidth,innerColor:I.toUnitRGB(t.innerColor),innerWidth:t.innerWidth,globalAlpha:t.globalAlpha}})}_removeVisualElements(){r(this._laserlineVisualElement)&&(this._laserlineVisualElement.destroy(),this._laserlineVisualElement=null)}_onObserverLocationChange(t){n(t)?this._observerManipulator.available=!1:(this._observerManipulator.metadata.intersection=null,this._observerManipulator.available=!0,this._observerManipulator.elevationAlignedLocation=t)}_onTargetLocationChange(t,e){r(t)?(e.elevationAlignedLocation=t,e!==this._targetTrackerManipulator&&(e.available=!0)):e.available=!1}_addPointFromClickEvent(t){const e=this._intersector.getScreenPointIntersection(t);if(!n(e)&&!n(e.mapPoint))if(r(this.analysis.observer)&&r(this.analysis.observer.position)){this._clearCursorTracker();const t=new bt;this._updateFromIntersection(t,e),this.analysis.targets.add(t)}else{const t=new vt;this._updateFromIntersection(t,e),this.analysis.observer=t}}_clickHandler(t){this.active&&t.button!==Et.Right&&(this._addPointFromClickEvent(Vt(t)),t.stopPropagation())}_doubleClickHandler(t){this.active&&t.button!==Et.Right&&(this.stop(),t.stopPropagation())}_keyDownHandler(t){this.active&&"Escape"===t.key&&(this.stop(),t.stopPropagation())}_pointerMoveHandler(t){if(this.hasGrabbedManipulators)return;if(this._latestPointerMovePointerType=t.pointerType,this._updateLaserLineRenderer(),!this._showTracker||n(this.analysis.observer)||n(this.analysis.observer.position))return;const e=Vt(t),i=this._intersector.getScreenPointIntersection(e);r(i)&&r(i.mapPoint)&&(n(this.analysisViewData.cursorTarget)&&(this.analysisViewData.cursorTarget=new bt),this._updateFromIntersection(this.analysisViewData.cursorTarget,i),this._updateLaserLineRenderer())}_updateFromIntersection(t,e){if(n(e.mapPoint))return t.position=null,t.elevationInfo=null,void(t.feature=null);switch(e.type){case ct.OBJECT:if(r(e.graphic)){const i=e.graphic,s=K(i);"on-the-ground"===s.mode&&(s.mode="relative-to-ground",s.offset=0),t.elevationInfo=new jt(s),t.feature=i}else t.elevationInfo=null,t.feature=null;break;case ct.TERRAIN:case ct.I3S:t.elevationInfo=new jt({mode:"on-the-ground"}),t.feature=null;break;default:t.elevationInfo=null,t.feature=null}const i=e.mapPoint.clone();i.z=X(this.view,i,{mode:"absolute-height",offset:0},t.elevationInfo),t.position=i}_manipulatorClick(t,e){if("observer"===t.metadata.type||t.grabbing||t.dragging||e.button!==Et.Right||this.analysis.targets.length<=1)return;const{target:i}=t.metadata;this.analysis.targets.remove(i),e.stopPropagation()}get testInfo(){return{laserLineVisualElement:this._laserlineVisualElement}}};t([d({constructOnly:!0})],ue.prototype,"view",void 0),t([d({constructOnly:!0})],ue.prototype,"analysis",void 0),t([d({readOnly:!0})],ue.prototype,"state",null),t([d({readOnly:!0})],ue.prototype,"cursor",null),t([d()],ue.prototype,"removeIncompleteOnCancel",void 0),t([d({readOnly:!0})],ue.prototype,"updating",null),t([d({type:re})],ue.prototype,"configuration",void 0),t([d({constructOnly:!0})],ue.prototype,"analysisViewData",void 0),t([d({readOnly:!0})],ue.prototype,"_showTracker",null),t([d()],ue.prototype,"_latestPointerMovePointerType",void 0),t([d()],ue.prototype,"_shouldRenderTracker",null),t([d()],ue.prototype,"_laserlineVisualElement",void 0),t([d()],ue.prototype,"_grabbedManipulator",void 0),ue=t([m("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightTool")],ue);const ce=ft();class de{constructor(t,e,i,s){this.visibleLineVisualElement=t,this.occludedLineVisualElement=e,this.undefinedLineVisualElement=i,this.targetVisualElement=s}destroy(){this.visibleLineVisualElement.destroy(),this.occludedLineVisualElement.destroy(),this.undefinedLineVisualElement.destroy(),this.targetVisualElement.destroy()}}let he=class extends e{constructor(t){super(t),this._lineOfSightVisualElements=new Array,this._computationHandles=new V,this._updatingHandles=new x}initialize(){this.addHandles(this._connectComputations()),this._createObserverVisualization()}destroy(){this._updatingHandles=u(this._updatingHandles),this._computationHandles=u(this._computationHandles),this._observerVisualElement=u(this._observerVisualElement)}get visible(){return this.analysisViewData.visible}get updating(){return this._updatingHandles.updating}get interactiveAndEditable(){return this.analysisViewData.interactive&&this.analysisViewData.editable}get test(){return{disablePartialOcclusion:()=>{for(const t of this._lineOfSightVisualElements)t.visibleLineVisualElement.renderOccluded=Dt.Occlude,t.occludedLineVisualElement.renderOccluded=Dt.Occlude,t.undefinedLineVisualElement.renderOccluded=Dt.Occlude},visualizations:this._lineOfSightVisualElements}}get _configuration(){return this.analysisViewData.configuration}_createLineOfSightVisualization(){const t=this._configuration,e=this.view,i={view:e,attached:!0,width:t.outerWidth,innerWidth:t.innerWidth},s=I.toUnitRGBA(t.visibleOuterColor),o=I.toUnitRGBA(t.visibleInnerColor),n=I.toUnitRGBA(t.occludedOuterColor),r=I.toUnitRGBA(t.occludedInnerColor),a=I.toUnitRGBA(t.undefinedOuterColor),l=I.toUnitRGBA(t.undefinedInnerColor),p=new ht({...i,color:s,innerColor:o}),u=new ht({...i,color:n,innerColor:r}),c=new ht({...i,color:a,innerColor:l}),d=new Mt({view:e,attached:!0,...me,size:8}),h=new de(p,u,c,d);return this._lineOfSightVisualElements.push(h),h}_destroyLineOfSightVisualization(t){t.destroy(),this._lineOfSightVisualElements.splice(this._lineOfSightVisualElements.indexOf(t),1)}_updateLineOfSightVisualization(t,e,i){const s=this._configuration,{computationResult:o,inputPoints:r}=t,{start:a,end:l,intersection:p,isValid:u,isTargetVisible:c}=o,{observer:d}=r,h=be;h[12]=d[0],h[13]=d[1],h[14]=d[2];const m=k(ge,a,d),g=k(ye,l,d),y=k(ve,p,d),{visibleLineVisualElement:v,occludedLineVisualElement:b,undefinedLineVisualElement:f,targetVisualElement:_}=e,j=n(this.analysisViewData.elevationAlignedObserver)||n(t.elevationAlignedTargetLocation),C=this.visible&&!j;v.visible=C,b.visible=C,f.visible=C,_.visible=C,_.attached=!i.interactiveAndEditable,C&&(v.geometry=null,b.geometry=null,f.geometry=null,_.geometry=t.elevationAlignedTargetLocation,u?c?(v.geometry=[[T(m),T(g)]],v.transform=h,v.color=I.toUnitRGBA(s.visibleOuterColor),_.color=I.toUnitRGBA(s.visibleInnerColor)):(v.geometry=[[T(m),T(y)]],v.transform=h,v.color=I.toUnitRGBA(s.occludedOuterColor),b.geometry=[[T(y),T(g)]],b.transform=h,_.color=I.toUnitRGBA(s.occludedInnerColor)):(f.geometry=[[T(m),T(g)]],f.transform=h,_.color=I.toUnitRGBA(s.undefinedInnerColor)))}_getLineOfSightVisualizationDependencies(t){const{computationResult:e}=t,{occludedOuterColor:i,visibleOuterColor:s}=this._configuration;return{computationResult:e,occludedOuterColor:i,visibleOuterColor:s,visible:this.visible,interactiveAndEditable:this.interactiveAndEditable}}_connectComputation(t){const e=this._computationHandles;if(e.has(t))return;const i=this._createLineOfSightVisualization();e.add([this._updatingHandles.add((()=>this._getLineOfSightVisualizationDependencies(t)),(e=>this._updateLineOfSightVisualization(t,i,e)),{initial:!0,equals:()=>!1}),R((()=>this._destroyLineOfSightVisualization(i)))],t)}_disconnectComputation(t){this._computationHandles.remove(t)}_connectComputations(){return this._updatingHandles.addOnCollectionChange((()=>this.analysisViewData.computations),(t=>this._onComputationsCollectionChange(t)),{initial:!0,final:!0})}_onComputationsCollectionChange({added:t,removed:e}){for(const t of e)this._disconnectComputation(t);for(const e of t)this._connectComputation(e)}_createObserverVisualization(){const t=I.toUnitRGBA(this._configuration.visibleInnerColor),e=new Mt({view:this.view,attached:!1,color:t,...me});this._observerVisualElement=e,this.addHandles(this._updatingHandles.add((()=>({observer:this.analysisViewData.elevationAlignedObserver,interactiveAndEditable:this.interactiveAndEditable,visible:this.visible})),(({observer:t,interactiveAndEditable:i,visible:s})=>{n(t)||i||!s?e.attached=!1:(e.geometry=t,this._observerVisualElement.attached=!0)}),A))}};t([d({constructOnly:!0})],he.prototype,"analysis",void 0),t([d({constructOnly:!0})],he.prototype,"analysisViewData",void 0),t([d({constructOnly:!0})],he.prototype,"view",void 0),t([d({readOnly:!0})],he.prototype,"visible",null),t([d()],he.prototype,"updating",null),t([d()],he.prototype,"interactiveAndEditable",null),t([d()],he.prototype,"test",null),t([d()],he.prototype,"_configuration",null),he=t([m("esri.views.3d.analysis.LineOfSight.LineOfSightVisualization")],he);const me={size:6,pixelSnappingEnabled:!1,primitive:"circle",elevationInfo:{mode:"absolute-height",offset:0},outlineSize:0},ge=g(),ye=g(),ve=g(),be=Rt();let fe=class extends(S(s.EventedMixin(e))){constructor(t){super(t),this.type="line-of-sight-view-3d",this.analysis=null,this.tool=null,this.computations=new i,this.elevationAlignedObserver=null,this.configuration=new Ut,this.observerEngineLocation=g(),this.cursorTarget=null,this.editable=!0}initialize(){const t=this.view,e=this.analysis;this._analysisController=new Zt({analysis:e,analysisViewData:this,view:t}),this._analysisVisualization=new he({analysis:e,analysisViewData:this,view:t}),this.addHandles([this._analysisController.on("result-changed",(t=>{t.target!==this.cursorTarget&&this.emit("result-changed",t)})),At(this,ue)])}destroy(){Ht(this),this._analysisController=u(this._analysisController),this._analysisVisualization=u(this._analysisVisualization)}get results(){return this.computations.map((t=>t.result))}get priority(){return this._analysisController.priority}set priority(t){this._analysisController.priority=t}get updating(){return r(this._analysisController)&&this._analysisController.updating||r(this._analysisVisualization)&&this._analysisVisualization.updating}getResultForTarget(t){const e=this.computations.find((e=>e.target===t));return c(e,(t=>t.result))}get testInfo(){return{visualization:this._analysisVisualization,controller:this._analysisController}}};t([d({readOnly:!0})],fe.prototype,"type",void 0),t([d({constructOnly:!0,nonNullable:!0})],fe.prototype,"analysis",void 0),t([d()],fe.prototype,"tool",void 0),t([d({readOnly:!0})],fe.prototype,"results",null),t([d()],fe.prototype,"priority",null),t([d()],fe.prototype,"computations",void 0),t([d()],fe.prototype,"elevationAlignedObserver",void 0),t([d()],fe.prototype,"configuration",void 0),t([d()],fe.prototype,"observerEngineLocation",void 0),t([d()],fe.prototype,"cursorTarget",void 0),t([d()],fe.prototype,"updating",null),t([d()],fe.prototype,"editable",void 0),t([d()],fe.prototype,"_analysisController",void 0),t([d()],fe.prototype,"_analysisVisualization",void 0),fe=t([m("esri.views.3d.analysis.LineOfSightAnalysisView3D")],fe);const _e=fe;export{_e as default};
