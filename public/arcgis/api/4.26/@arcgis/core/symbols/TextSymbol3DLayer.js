/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import{clone as o}from"../core/lang.js";import{i as e}from"../chunks/maybe.js";import{property as s}from"../core/accessorSupport/decorators/property.js";import"../chunks/ensureType.js";import{e as r}from"../chunks/enumeration.js";import{subclass as i}from"../core/accessorSupport/decorators/subclass.js";import{w as n}from"../chunks/writer.js";import l,{h as c,l as p,v as a}from"./Font.js";import h from"./Symbol3DLayer.js";import{c as m,s as u}from"../chunks/materialUtils.js";import j from"../Color.js";import{JSONSupport as y}from"../core/JSONSupport.js";import{S as f}from"../chunks/Symbol3DMaterial.js";import{ClonableMixin as d}from"../core/Clonable.js";import"../chunks/typedArrayUtil.js";import"../chunks/Logger.js";import"../config.js";import"../chunks/object.js";import"../chunks/string.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/metadata.js";import"../core/Error.js";import"../chunks/jsonMap.js";import"../chunks/tracking.js";import"../chunks/screenUtils.js";import"../core/accessorSupport/decorators/cast.js";import"../chunks/mathUtils.js";import"../chunks/vec3.js";import"../chunks/common.js";import"../chunks/vec4.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/ArrayPool.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../core/promiseUtils.js";import"../chunks/opacityUtils.js";import"../chunks/colorUtils.js";var g;let k=g=class extends y{constructor(){super(...arguments),this.color=new j([0,0,0,1]),this.size=0}clone(){const t={color:o(this.color),size:this.size};return new g(t)}};t([s(m)],k.prototype,"color",void 0),t([s(u)],k.prototype,"size",void 0),k=g=t([i("esri.symbols.support.Symbol3DHalo")],k);let z=class extends(d(y)){constructor(t){super(t),this.color=null}};var b;t([s(m)],z.prototype,"color",void 0),z=t([i("esri.symbols.support.Symbol3DTextBackground")],z);let v=b=class extends h{constructor(t){super(t),this._userSize=void 0,this.halo=null,this.horizontalAlignment="center",this.lineHeight=1,this.material=null,this.background=null,this.text=null,this.type="text",this.verticalAlignment="baseline"}get font(){return this._get("font")||null}set font(t){e(t)&&e(this._userSize)&&(t.size=this._userSize),this._set("font",t)}writeFont(t,o,e,s){const r={...s,textSymbol3D:!0};o.font=t.write({},r),delete o.font.size}get size(){return e(this._userSize)?this._userSize:e(this.font)&&null!=this.font.size?this.font.size:9}set size(t){this._userSize=t,e(this.font)&&(this.font.size=this._userSize),this.notifyChange("size")}clone(){const t=new b({enabled:this.enabled,font:this.font&&o(this.font),halo:this.halo&&o(this.halo),horizontalAlignment:this.horizontalAlignment,lineHeight:this.lineHeight,material:e(this.material)?this.material.clone():null,text:this.text,verticalAlignment:this.verticalAlignment,background:o(this.background)});return t._userSize=this._userSize,t}static fromTextSymbol(t){return new b({font:e(t.font)?t.font.clone():new l,halo:(s=t.haloColor,r=t.haloSize,s&&null!=r&&r>0?new k({color:o(s),size:r}):null),horizontalAlignment:t.horizontalAlignment,lineHeight:t.lineHeight,material:t.color?new f({color:t.color.clone()}):null,text:t.text,verticalAlignment:t.verticalAlignment,background:t.backgroundColor?new z({color:t.backgroundColor.clone()}):null});var s,r}};t([s({type:l,json:{write:!0}})],v.prototype,"font",null),t([n("font")],v.prototype,"writeFont",null),t([s({type:k,json:{write:!0}})],v.prototype,"halo",void 0),t([s({...c,json:{default:"center",write:!0}})],v.prototype,"horizontalAlignment",void 0),t([s({...p,json:{default:1,write:!0}})],v.prototype,"lineHeight",void 0),t([s({type:f,json:{write:!0}})],v.prototype,"material",void 0),t([s({type:z,json:{write:!0}})],v.prototype,"background",void 0),t([s(u)],v.prototype,"size",null),t([s({type:String,json:{write:!0}})],v.prototype,"text",void 0),t([r({Text:"text"},{readOnly:!0})],v.prototype,"type",void 0),t([s({...a,json:{default:"baseline",write:!0}})],v.prototype,"verticalAlignment",void 0),v=b=t([i("esri.symbols.TextSymbol3DLayer")],v);const S=v;export{S as default};
