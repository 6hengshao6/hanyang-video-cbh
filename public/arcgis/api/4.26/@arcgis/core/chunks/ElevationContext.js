/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{e,a as t,i as n}from"./maybe.js";import{j as r}from"./mat4.js";import{c as s}from"./mat4f64.js";import{d as o}from"./vec3.js";import{projectBuffer as i,computeTranslationToOriginAndRotation as a}from"../geometry/projection.js";import{i as u,a as l,g as f}from"./ElevationProvider.js";import{u as c}from"./graphicUtils.js";import{g as d,a as m}from"./unitConversionUtils.js";import{L as p}from"./Logger.js";import{throwIfAborted as h}from"../core/promiseUtils.js";import{a as g}from"./hydratedFeatures.js";import{l as E}from"./arcadeOnDemand.js";function v(e,t,n,r,s,o,a,u,l,f,c){const d=j[c.mode];let m,p,h=0;if(i(e,t,n,r,l.spatialReference,s,u))return d.requiresAlignment(c)?(h=d.applyElevationAlignmentBuffer(r,s,o,a,u,l,f,c),m=o,p=a):(m=r,p=s),i(m,l.spatialReference,p,o,f.spatialReference,a,u)?h:void 0}function x(t,n,r,s,o){const i=(u(t)?t.z:l(t)?t.array[t.offset+2]:t[2])||0;switch(r.mode){case"on-the-ground":{const r=e(f(n,t,"ground"),0);return o.verticalDistanceToGround=0,o.sampledElevation=r,void(o.z=r)}case"relative-to-ground":{const a=e(f(n,t,"ground"),0),u=r.geometryZWithOffset(i,s);return o.verticalDistanceToGround=u,o.sampledElevation=a,void(o.z=u+a)}case"relative-to-scene":{const a=e(f(n,t,"scene"),0),u=r.geometryZWithOffset(i,s);return o.verticalDistanceToGround=u,o.sampledElevation=a,void(o.z=u+a)}case"absolute-height":{const a=r.geometryZWithOffset(i,s),u=e(f(n,t,"ground"),0);return o.verticalDistanceToGround=a-u,o.sampledElevation=u,void(o.z=a)}default:return void(o.z=0)}}function U(e,t,n,r){return x(e,t,n,r,T),T.z}function I(e,t,n){return null==t||null==n?e.definedChanged:"on-the-ground"===t&&"on-the-ground"===n?e.staysOnTheGround:t===n||"on-the-ground"!==t&&"on-the-ground"!==n?C.UPDATE:e.onTheGroundChanged}function O(e){return"relative-to-ground"===e||"relative-to-scene"===e}function R(e){return"absolute-height"!==e}function _(e,t,n,s,o){x(t,n,o,s,T),c(e,T.verticalDistanceToGround);const i=T.sampledElevation,u=r(A,e.transformation);return b[0]=t.x,b[1]=t.y,b[2]=T.z,a(t.spatialReference,b,u,s.spatialReference)?e.transformation=u:console.warn("Could not locate symbol object properly, it might be misplaced"),i}class y{constructor(){this.verticalDistanceToGround=0,this.sampledElevation=0,this.z=0}}var C;!function(e){e[e.NONE=0]="NONE",e[e.UPDATE=1]="UPDATE",e[e.RECREATE=2]="RECREATE"}(C||(C={}));const j={"absolute-height":{applyElevationAlignmentBuffer:function(e,t,n,r,s,o,i,a){const u=a.calculateOffsetRenderUnits(i),l=a.featureExpressionInfoContext;t*=3,r*=3;for(let o=0;o<s;++o){const s=e[t],o=e[t+1],i=e[t+2];n[r]=s,n[r+1]=o,n[r+2]=null==l?i+u:u,t+=3,r+=3}return 0},requiresAlignment:function(e){const t=e.meterUnitOffset,n=e.featureExpressionInfoContext;return 0!==t||null!=n}},"on-the-ground":{applyElevationAlignmentBuffer:function(t,n,r,s,o,i){let a=0;const u=i.spatialReference;n*=3,s*=3;for(let l=0;l<o;++l){const o=t[n],l=t[n+1],f=t[n+2],c=e(i.getElevation(o,l,f,u,"ground"),0);a+=c,r[s]=o,r[s+1]=l,r[s+2]=c,n+=3,s+=3}return a/o},requiresAlignment:()=>!0},"relative-to-ground":{applyElevationAlignmentBuffer:function(t,n,r,s,o,i,a,u){let l=0;const f=u.calculateOffsetRenderUnits(a),c=u.featureExpressionInfoContext,d=i.spatialReference;n*=3,s*=3;for(let a=0;a<o;++a){const o=t[n],a=t[n+1],u=t[n+2],m=e(i.getElevation(o,a,u,d,"ground"),0);l+=m,r[s]=o,r[s+1]=a,r[s+2]=null==c?u+m+f:m+f,n+=3,s+=3}return l/o},requiresAlignment:()=>!0},"relative-to-scene":{applyElevationAlignmentBuffer:function(t,n,r,s,o,i,a,u){let l=0;const f=u.calculateOffsetRenderUnits(a),c=u.featureExpressionInfoContext,d=i.spatialReference;n*=3,s*=3;for(let a=0;a<o;++a){const o=t[n],a=t[n+1],u=t[n+2],m=e(i.getElevation(o,a,u,d,"scene"),0);l+=m,r[s]=o,r[s+1]=a,r[s+2]=null==c?u+m+f:m+f,n+=3,s+=3}return l/o},requiresAlignment:()=>!0}},A=s(),T=new y,b=o(),z=p.getLogger("esri.views.3d.layers.graphics.featureExpressionInfoUtils");function D(e){const t=e&&e.expression;if("string"==typeof t){const e=N(t);if(null!=e)return{cachedResult:e}}return null}async function P(e,t,n,r){const s=e&&e.expression;if("string"!=typeof s)return null;const o=N(s);if(null!=o)return{cachedResult:o};const i=await E();h(n);const a=i.arcadeUtils,u=a.createSyntaxTree(s);return a.dependsOnView(u)?(null!=r&&r.error("Expressions containing '$view' are not supported on ElevationInfo"),{cachedResult:0}):{arcade:{func:a.createFunction(u),context:a.createExecContext(null,{sr:t}),modules:i}}}function w(e,t,n){return e.arcadeUtils.createFeature(t.attributes,t.geometry,n)}function G(e,t){if(null!=e&&!B(e)){if(!t||!e.arcade)return void z.errorOncePerTick("Arcade support required but not provided");const n=t;n._geometry&&(n._geometry=g(n._geometry)),e.arcade.modules.arcadeUtils.updateExecContext(e.arcade.context,t)}}function q(e,t=!1){let n=e&&e.featureExpressionInfo;const r=n&&n.expression;return t||"0"===r||(n=null),n??null}const F={cachedResult:0};function B(e){return null!=e.cachedResult}function N(e){return"0"===e?0:null}class S{constructor(){this._meterUnitOffset=0,this._renderUnitOffset=0,this._unit="meters",this._metersPerElevationInfoUnit=1,this._featureExpressionInfoContext=null,this.centerPointInElevationSR=null,this.mode=null}get featureExpressionInfoContext(){return this._featureExpressionInfoContext}get meterUnitOffset(){return this._meterUnitOffset}get unit(){return this._unit}set unit(e){this._unit=e,this._metersPerElevationInfoUnit=d(e)}get requiresSampledElevationInfo(){return"absolute-height"!==this.mode}reset(){this.mode=null,this._meterUnitOffset=0,this._renderUnitOffset=0,this._featureExpressionInfoContext=null,this.unit="meters"}set offsetMeters(e){this._meterUnitOffset=e,this._renderUnitOffset=0}set offsetElevationInfoUnits(e){this._meterUnitOffset=e*this._metersPerElevationInfoUnit,this._renderUnitOffset=0}addOffsetRenderUnits(e){this._renderUnitOffset+=e}geometryZWithOffset(e,t){const n=this.calculateOffsetRenderUnits(t);return null!=this.featureExpressionInfoContext?n:e+n}calculateOffsetRenderUnits(e){let t=this._meterUnitOffset;const n=this.featureExpressionInfoContext;return null!=n&&(t+=function(e){if(null!=e){if(B(e))return e.cachedResult;const t=e.arcade;let n=t?.modules.arcadeUtils.executeFunction(t.func,t.context);return"number"!=typeof n&&(e.cachedResult=0,n=0),n}return 0}(n)*this._metersPerElevationInfoUnit),t/e.unitInMeters+this._renderUnitOffset}setFromElevationInfo(t){this.mode=t.mode,this.unit=m(t.unit)?t.unit:"meters",this.offsetElevationInfoUnits=e(t.offset,0)}updateFeatureExpressionInfoContext(e,r,s){if(t(e))return void(this._featureExpressionInfoContext=null);const o=e&&e.arcade;var i;o&&n(r)&&n(s)?(this._featureExpressionInfoContext={cachedResult:(i=e).cachedResult,arcade:i.arcade?{func:i.arcade.func,context:i.arcade.modules.arcadeUtils.createExecContext(null,{sr:i.arcade.context.spatialReference}),modules:i.arcade.modules}:null},G(this._featureExpressionInfoContext,w(o.modules,r,s))):this._featureExpressionInfoContext=e}static fromElevationInfo(e){const t=new S;return n(e)&&t.setFromElevationInfo(e),t}}export{S as E,y as S,x as a,C as b,_ as c,I as d,U as e,w as f,v as g,R as h,q as i,P as j,D as k,O as n,G as s,F as z};
