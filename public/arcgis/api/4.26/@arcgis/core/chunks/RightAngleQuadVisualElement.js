/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{t as e,u as t}from"./maybe.js";import{watch as r}from"../core/reactiveUtils.js";import{f as s,g as i,j as a}from"./mat4.js";import{c as o}from"./mat4f64.js";import{d as u,D as n,n as c,b as l,c as d,j as h,Z as m,a as _}from"./vec3.js";import{c as p}from"./vec4.js";import{f}from"./vec4f64.js";import{s as R}from"./ray.js";import{m as M}from"./dehydratedFeatures.js";import{E as O}from"./EngineVisualElement.js";import{R as j,D as g}from"./RenderGeometry.js";import{A as y}from"./Attribute.js";import{a as D}from"./DefaultBufferWriter.js";import{c as z}from"./GeometryUtil.js";import{R as P}from"./Material.js";import{V as b}from"./VertexAttribute.js";import{C as S}from"./ColorMaterial.js";import{R as v}from"./TriangleMaterial.js";class x extends O{constructor(e){super(e),this._maxSize=0,this._position=u(),this._up=u(),this._right=u(),this._renderOccluded=P.OccludeAndTransparent,this._color=f(1,0,0,1),this._outlineColor=f(0,0,0,1),this._outlineSize=0,this._size=32,this._outlineRenderOccluded=P.Opaque,this.applyProps(e)}createObject3DResourceFactory(e){return{view:e,createResources:e=>this._createObject3DResources(e),destroyResources:e=>this._destroyObject3DResources(e),cameraChanged:()=>this._updateTransformObject3D()}}createDrapedResourceFactory(e){return{view:e,createResources:()=>this._createDrapedResources(),destroyResources:e=>this._destroyDrapedResources(e)}}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateQuadMaterial())}get color(){return this._color}set color(e){p(this._color,e),this._updateQuadMaterial()}get outlineColor(){return this._outlineColor}set outlineColor(e){p(this._outlineColor,e),this._updateOutlineMaterial()}get outlineSize(){return this._outlineSize}set outlineSize(e){const t=0===this._outlineSize!=(0===e);this._outlineSize=e,t?this.recreateGeometry():this._updateOutlineMaterial()}get size(){return this._size}set size(e){e!==this._size&&(this._size=e,this._updateTransform())}get outlineRenderOccluded(){return this._outlineRenderOccluded}set outlineRenderOccluded(e){this._outlineRenderOccluded=e,this._updateOutlineMaterial()}set geometry({previous:e,center:t,next:r}){this._maxSize=Math.min(n(t,e),n(t,r))/3,c(this._up,l(this._up,e,t)),c(this._right,l(this._right,r,t)),d(this._position,t),this.recreateGeometry()}_createObject3DResources(e){const t=new S(this._quadMaterialParameters),r=0===this._outlineSize?void 0:new v(this._outlineMaterialParameters);return this._createObject3DGeometries(e,t,r),{quadMaterial:t,outlineMaterial:r,forEach:e=>{e(t),r&&e(r)}}}_destroyObject3DResources(e){e.quadMaterial.dispose(),e.outlineMaterial?.dispose()}_createObject3DGeometries(e,t,r){if(h(this._up,m)&&h(this._right,m))return;const s=this._createGeometries(t,r);for(const t of s)e.addGeometry(t);this._updateTransformObject3D(e)}_createDrapedResources(){const e=new S(this._quadMaterialParameters),t=0===this._outlineSize?void 0:new v(this._outlineMaterialParameters),s=this._createGeometries(e,t).map((e=>new j(e)));return this._setTransformDraped(s),{quadMaterial:e,outlineMaterial:t,geometries:s,pixelRatioHandle:r((()=>this.view.state.contentPixelRatio),(()=>{this.drapedResources.recreateGeometry()}))}}_destroyDrapedResources(e){e.pixelRatioHandle.remove(),e.geometries=[],e.outlineMaterial?.dispose(),e.quadMaterial.dispose()}_createGeometries(e,t){const{up:r,right:s,corner:i}=this._getVertices(),a=this._quadGeometryData(r,s,i,e);return t?[a,z(t,[r,i,s])]:[a]}_getVertices(){let e=this._up,t=this._right;const r=_(R.get(),e,t);return this.isDraped&&(e=d(R.get(),e),t=d(R.get(),t),e[2]=0,t[2]=0,r[2]=0),{up:e,right:t,corner:r}}_updateTransform(){this.isDraped?this.drapedResources.recreateGeometry():this._updateTransformObject3D()}_updateTransformObject3D(t=e(this.object3dResources.object)){if(!t)return;const r=this.view.state.camera,a=this._size*r.computeScreenPixelSizeAt(this._position),o=Math.min(this._maxSize,a);s(q,this._position),i(q,q,[o,o,o]),t.transformation=q}_setTransformDraped(e){if(0===e.length)return;const{view:{basemapTerrain:{overlayManager:r},state:{contentPixelRatio:o}}}=this,{_position:u,_size:n}=this,c=d(R.get(),u);c[2]=g;const l=w;l.spatialReference=t(r.renderer.spatialReference),l.x=c[0],l.y=c[1];const h=n*(r.overlayPixelSizeInMapUnits(l)*o),m=Math.min(this._maxSize,h);s(q,c),i(q,q,[m,m,1]);for(const t of e)t.updateTransformation((e=>{a(e,q)}))}_quadGeometryData(e,t,r,s){return new D(s,[[b.POSITION,new y([0,0,0,...t,...e,...r],3,!0)]],[[b.POSITION,[0,1,2,1,2,3]]])}get _quadMaterialParameters(){return{color:this._color,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:this._renderOccluded}}_updateQuadMaterial(){e(this.object3dResources.resources)?.quadMaterial.setParameters(this._quadMaterialParameters),e(this.drapedResources.resources)?.quadMaterial.setParameters(this._quadMaterialParameters)}get _outlineMaterialParameters(){return{color:this._outlineColor,width:this._outlineSize,renderOccluded:this._outlineRenderOccluded}}_updateOutlineMaterial(){e(this.object3dResources.resources)?.outlineMaterial?.setParameters(this._outlineMaterialParameters),e(this.drapedResources.resources)?.outlineMaterial?.setParameters(this._outlineMaterialParameters)}}const q=o(),w=M(0,0,void 0,null);export{x as R};
