/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{c as t,b as e}from"./dom.js";import{n}from"./key.js";import{c as i}from"./observers.js";
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 * v1.0.8-next.4
 */const r=new RegExp("-","g"),s=new RegExp("\\.?0+$");class a{constructor(t){if(this.add=t=>a.fromBigInt(this.value+new a(t).value),this.subtract=t=>a.fromBigInt(this.value-new a(t).value),this.multiply=t=>a._divRound(this.value*new a(t).value,a.SHIFT),this.divide=t=>a._divRound(this.value*a.SHIFT,new a(t).value),t instanceof a)return t;const[e,n]=String(t).split(".").concat("");this.value=BigInt(e+n.padEnd(a.DECIMALS,"0").slice(0,a.DECIMALS))+BigInt(a.ROUNDED&&n[a.DECIMALS]>="5"),this.isNegative="-"===t.charAt(0)}getIntegersAndDecimals(){const t=this.value.toString().replace(r,"").padStart(a.DECIMALS+1,"0");return{integers:t.slice(0,-a.DECIMALS),decimals:t.slice(-a.DECIMALS).replace(s,"")}}toString(){const{integers:t,decimals:e}=this.getIntegersAndDecimals();return`${this.isNegative?"-":""}${t}${e.length?"."+e:""}`}formatToParts(t){const{integers:e,decimals:n}=this.getIntegersAndDecimals(),i=t.numberFormatter.formatToParts(BigInt(e));return this.isNegative&&i.unshift({type:"minusSign",value:t.minusSign}),n.length&&(i.push({type:"decimal",value:t.decimal}),n.split("").forEach((t=>i.push({type:"fraction",value:t})))),i}format(t){const{integers:e,decimals:n}=this.getIntegersAndDecimals();return`${this.isNegative?t.minusSign:""}${t.numberFormatter.format(BigInt(e))}${n.length?`${t.decimal}${n.split("").map((e=>t.numberFormatter.format(Number(e)))).join("")}`:""}`}}function o(t){return!(!t||isNaN(Number(t)))}function l(t){return t&&(e=t,n.some((t=>e.includes(t))))?p(t,(t=>{let e=!1;const i=t.split("").filter(((t,i)=>t.match(/\./g)&&!e?(e=!0,!0):!(!t.match(/\-/g)||0!==i)||n.includes(t))).reduce(((t,e)=>t+e));return o(i)?new a(i).toString():""})):"";var e}a.DECIMALS=100,a.ROUNDED=!0,a.SHIFT=BigInt("1"+"0".repeat(a.DECIMALS)),a._divRound=(t,e)=>a.fromBigInt(t/e+(a.ROUNDED?t*BigInt(2)/e%BigInt(2):BigInt(0))),a.fromBigInt=t=>Object.assign(Object.create(a.prototype),{value:t});const u=/^([-0])0+(?=\d)/,c=/(?!^\.)\.$/,m=/(?!^-)-/g,g=/^-\b0\b\.?0*$/,h=t=>p(t,(t=>{const e=t.replace(m,"").replace(c,"").replace(u,"$1");return o(e)?g.test(e)?e:new a(e).toString():t}));function p(t,e){if(!t)return t;const n=t.toLowerCase().indexOf("e")+1;return n?t.replace(/[eE]*$/g,"").substring(0,n).concat(t.slice(n).replace(/[eE]/g,"")).split(/[eE]/).map(((t,n)=>e(1===n?t.replace(/\./g,""):t))).join("e").replace(/^e/,"1e"):e(t)}const d="en",b=["ar","bg","bs","ca","cs","da","de","el",d,"es","et","fi","fr","he","hr","hu","id","it","ja","ko","lt","lv","no","nl","pl","pt-BR","pt-PT","ro","ru","sk","sl","sr","sv","th","tr","uk","vi","zh-CN","zh-HK","zh-TW"],f=["ar","bg","bs","ca","cs","da","de","de-CH","el",d,"en-AU","en-CA","en-GB","es","es-MX","et","fi","fr","fr-CH","he","hi","hr","hu","id","it","it-CH","ja","ko","lt","lv","mk","no","nl","pl","pt","pt-PT","ro","ru","sk","sl","sr","sv","th","tr","uk","vi","zh-CN","zh-HK","zh-TW"],v=["arab","arabext","bali","beng","deva","fullwide","gujr","guru","hanidec","khmr","knda","laoo","latn","limb","mlym","mong","mymr","orya","tamldec","telu","thai","tibt"],_=t=>v.includes(t),S=(new Intl.NumberFormat).resolvedOptions().numberingSystem,I="arab"!==S&&_(S)?S:"latn",w=t=>_(t)?t:I;function E(t,e="cldr"){const n="cldr"===e?f:b;return t?n.includes(t)?t:"nb"===(t=t.toLowerCase())?"no":"t9n"===e&&"pt"===t?"pt-BR":(t.includes("-")&&(t=t.replace(/(\w+)-(\w+)/,((t,e,n)=>`${e}-${n.toUpperCase()}`)),n.includes(t)||(t=t.split("-")[0])),"zh"===t?"zh-CN":n.includes(t)?t:(console.warn(`Translations for the "${t}" locale are not available and will fall back to the default, English (en).`),d)):d}const F=new Set;function O(t){!function(t){t.effectiveLocale=function(t){return t.el.lang||e(t.el,"[lang]")?.lang||document.documentElement.lang||d}(t)}(t),0===F.size&&$?.observe(document.documentElement,{attributes:!0,attributeFilter:["lang"],subtree:!0}),F.add(t)}function y(t){F.delete(t),0===F.size&&$.disconnect()}const $=i("mutation",(n=>{n.forEach((n=>{const i=n.target;F.forEach((n=>{if(!t(i,n.el))return;const r=e(n.el,"[lang]");if(!r)return void(n.effectiveLocale=d);const s=r.lang;n.effectiveLocale=r.hasAttribute("lang")&&""===s?d:s}))}))})),D=new class{constructor(){this.delocalize=t=>this._numberFormatOptions?p(t,(t=>t.trim().replace(new RegExp(`[${this._minusSign}]`,"g"),"-").replace(new RegExp(`[${this._group}]`,"g"),"").replace(new RegExp(`[${this._decimal}]`,"g"),".").replace(new RegExp(`[${this._digits.join("")}]`,"g"),this._getDigitIndex))):t,this.localize=t=>this._numberFormatOptions?p(t,(t=>o(t.trim())?new a(t.trim()).format(this).replace(new RegExp(`[${this._actualGroup}]`,"g"),this._group):t)):t}get group(){return this._group}get decimal(){return this._decimal}get minusSign(){return this._minusSign}get digits(){return this._digits}get numberFormatter(){return this._numberFormatter}get numberFormatOptions(){return this._numberFormatOptions}set numberFormatOptions(t){if(t.locale=E(t?.locale),t.numberingSystem=w(t?.numberingSystem),!this._numberFormatOptions&&t.locale===d&&t.numberingSystem===I&&2===Object.keys(t).length||JSON.stringify(this._numberFormatOptions)===JSON.stringify(t))return;this._numberFormatOptions=t,this._numberFormatter=new Intl.NumberFormat(this._numberFormatOptions.locale,this._numberFormatOptions),this._digits=[...new Intl.NumberFormat(this._numberFormatOptions.locale,{useGrouping:!1,numberingSystem:this._numberFormatOptions.numberingSystem}).format(9876543210)].reverse();const e=new Map(this._digits.map(((t,e)=>[t,e]))),n=new Intl.NumberFormat(this._numberFormatOptions.locale).formatToParts(-12345678.9);this._actualGroup=n.find((t=>"group"===t.type)).value,this._group=0===this._actualGroup.trim().length?" ":this._actualGroup,this._decimal=n.find((t=>"decimal"===t.type)).value,this._minusSign=n.find((t=>"minusSign"===t.type)).value,this._getDigitIndex=t=>e.get(t)}};export{I as a,w as b,O as c,y as d,E as g,o as i,D as n,l as p,h as s};
