/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import{h as t}from"./typedArrayUtil.js";import{i as s,a as r,g as i,c as n,d as o,e as a}from"./maybe.js";import{createResolver as h,isAbortError as u}from"../core/promiseUtils.js";import"./Logger.js";import"./ensureType.js";import"../core/Error.js";import{subclass as d}from"../core/accessorSupport/decorators/subclass.js";import{c as f}from"./aaBoundingRect.js";import{C as l}from"./CircularArray.js";import{c}from"./mat2df32.js";import{a as _,W as p}from"./enums4.js";import{x as m}from"./color.js";import{D as g,W as y}from"./AttributeStoreView.js";import{L as b,T as x,F as w}from"./BufferPool.js";import{B as j,V as v}from"./FramebufferObject.js";import{U as C}from"./enums3.js";import{a as E}from"./rendererUtils.js";import{B as S}from"./BaseTileRenderer.js";import{k as T}from"./visualVariablesUtils.js";import{b as B}from"./WGLContainer.js";import{F as V}from"./FeatureContainer.js";import"../core/lang.js";import"./object.js";import"../config.js";import"./string.js";import"./metadata.js";import"./utils.js";import"./handleUtils.js";import"./tracking.js";import"./mathUtils.js";import"./vec3.js";import"./common.js";import"./vec4.js";import"../geometry/Extent.js";import"../core/accessorSupport/decorators/property.js";import"./get.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./ArrayPool.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./unitUtils.js";import"./jsonMap.js";import"./Ellipsoid.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./enums.js";import"./VertexElementDescriptor.js";import"./number2.js";import"./mat2d.js";import"./mat3.js";import"./mat3f32.js";import"./definitions.js";import"./TiledDisplayObject.js";import"./DisplayObject.js";import"../core/Evented.js";import"./TileKey2.js";import"./Texture.js";import"./context-util.js";import"./screenUtils.js";import"./capabilities2.js";import"../core/HandleOwner.js";import"./WatchUpdatingTracking.js";import"../core/reactiveUtils.js";import"./visualVariablesUtils2.js";import"./WGLBrushVTLSymbol.js";import"./vec4f32.js";import"./StyleDefinition.js";import"./vec2f32.js";import"./config.js";import"./GeometryUtils2.js";import"./ShaderCompiler.js";import"./ProgramTemplate.js";import"./Program.js";import"./MaterialKey.js";import"./alignmentUtils.js";import"./utils19.js";import"./heatmapUtils.js";import"./vec4f64.js";import"../Color.js";import"./colorUtils.js";import"./heatmapTextureUtils.js";import"./DefaultVertexAttributeLayouts.js";import"./Container.js";import"./EffectView.js";import"./parser.js";import"./mat4f32.js";import"./mat4.js";import"./_commonjsHelpers.js";import"./earcut.js";import"./vec2.js";import"./vec2f64.js";import"./featureConversionUtils.js";import"./aaBoundingBox.js";import"../geometry/support/jsonUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./OptimizedFeature.js";import"./OptimizedFeatureSet.js";import"./Queue.js";import"./TileContainer.js";import"./lengthUtils.js";const U=4294967296;class k{constructor(e){this._savedCursor=null,this._savedOffset=null,this._head=e,this._cursor=e}static from(e){const t=R.from(new Float32Array(e));return new k(t)}get id(){return this._cursor.id}get baseZoom(){return this._cursor.baseZoom}get anchorX(){return this._cursor.anchorX}get anchorY(){return this._cursor.anchorY}get directionX(){return this._cursor.directionX}get directionY(){return this._cursor.directionY}get size(){return this._cursor.size}get materialKey(){return this._cursor.materialKey}get boundsCount(){return this._cursor.boundsCount}computedMinZoom(){return this._cursor.computedMinZoom()}setComputedMinZoom(e){return this._cursor.setComputedMinZoom(e)}boundsComputedAnchorX(e){return this._cursor.boundsComputedAnchorX(e)}boundsComputedAnchorY(e){return this._cursor.boundsComputedAnchorY(e)}setBoundsComputedAnchorX(e,t){return this._cursor.setBoundsComputedAnchorX(e,t)}setBoundsComputedAnchorY(e,t){return this._cursor.setBoundsComputedAnchorY(e,t)}boundsX(e){return this._cursor.boundsX(e)}boundsY(e){return this._cursor.boundsY(e)}boundsWidth(e){return this._cursor.boundsWidth(e)}boundsHeight(e){return this._cursor.boundsHeight(e)}link(e){if(s(e._head))return this._cursor.link(e._head)}getCursor(){return this.copy()}copy(){const e=new k(this._head?.copy());if(!e._head)return e;let t=e._head,s=e._head._link;for(;s;)t._link=s.copy(),t=s,s=t._link;return e}peekId(){return this._cursor.peekId()??this._cursor._link.peekId()}nextId(){const e=this.id;for(;e===this.id;)if(!this.next())return!1;return!0}save(){this._savedCursor=this._cursor,this._savedOffset=this._cursor._offset}restore(){this._savedCursor&&(this._cursor=this._savedCursor),null!=this._savedOffset&&(this._cursor._offset=this._savedOffset)}next(){if(!this._cursor)return!1;if(!this._cursor.next()){if(!this._cursor._link)return!1;this._cursor=this._cursor._link,this._cursor._offset=0}return!0}lookup(e){for(this._cursor=this._head;this._cursor&&!this._cursor.lookup(e);){if(!this._cursor._link)return!1;this._cursor=this._cursor._link}return!!this._cursor}delete(e){let t=this._head,r=null;for(;t;){if(t.delete(e))return t.isEmpty()&&s(r)&&(r._link=t._link),!0;r=t,t=t._link}return!1}}class R{constructor(e){this._offset=-1,this._link=null,this._count=0,this._deletedCount=0,this._offsets={instance:null},this._buffer=e}static from(e){return new R(new Float32Array(e))}isEmpty(){return this._deletedCount===this.count}get count(){return this._count||(this._count=this._computeCount()),this._count}get id(){return this._buffer[this._offset]}set id(e){this._buffer[this._offset]=e}get baseZoom(){return this._buffer[this._offset+1]}get anchorX(){return this._buffer[this._offset+2]}get anchorY(){return this._buffer[this._offset+3]}get directionX(){return this._buffer[this._offset+4]}get directionY(){return this._buffer[this._offset+5]}get size(){return this._buffer[this._offset+6]}get materialKey(){return this._buffer[this._offset+7]}computedMinZoom(){return this._buffer[this._offset+8]}setComputedMinZoom(e){this._buffer[this._offset+8]=e}get boundsCount(){return this._buffer[this._offset+9]}boundsComputedAnchorX(e){return this._buffer[this._offset+10+6*e]}boundsComputedAnchorY(e){return this._buffer[this._offset+10+6*e+1]}setBoundsComputedAnchorX(e,t){this._buffer[this._offset+10+6*e]=t}setBoundsComputedAnchorY(e,t){this._buffer[this._offset+10+6*e+1]=t}boundsX(e){return this._buffer[this._offset+10+6*e+2]}boundsY(e){return this._buffer[this._offset+10+6*e+3]}boundsWidth(e){return this._buffer[this._offset+10+6*e+4]}boundsHeight(e){return this._buffer[this._offset+10+6*e+5]}link(e){let t=this;for(;t._link;)t=t._link;t._link=e}getCursor(){return this.copy()}copy(){const e=new R(this._buffer);return e._link=this._link,e._offset=this._offset,e._deletedCount=this._deletedCount,e._offsets=this._offsets,e._count=this._count,e}peekId(){const e=this._offset+10+6*this.boundsCount+0;return e>=this._buffer.length?0:this._buffer[e]}next(){let e=0;for(;this._offset<this._buffer.length&&e++<100&&(-1===this._offset?this._offset=0:this._offset+=10+6*this.boundsCount,this.id===U););return this.id!==U&&this._offset<this._buffer.length}delete(e){const t=this._offset,s=this.lookup(e);if(s)for(this.id=4294967295,++this._deletedCount;this.next()&&this.id===e;)this.id=4294967295,++this._deletedCount;return this._offset=t,s}lookup(e){const t=this._offset;if(r(this._offsets.instance)){this._offsets.instance=new Map;const e=this.copy();e._offset=-1;let t=0;for(;e.next();)e.id!==t&&(this._offsets.instance.set(e.id,e._offset),t=e.id)}return!!this._offsets.instance.has(e)&&(this._offset=this._offsets.instance.get(e),this.id!==U||(this._offset=t,!1))}_computeCount(){const e=this._offset;let t=0;for(this._offset=-1;this.next();)t++;return this._offset=e,t}}class L{constructor(e,t,s,r,i){this.target=e,this.geometryType=t,this.materialKey=s,this.indexFrom=r,this.indexCount=i}get indexEnd(){return this.indexFrom+this.indexCount}extend(e){this.indexCount+=e}}class A{constructor(e,t){this.geometryType=0,this._target=e,this.geometryType=t}static from(e,t,r,i){const n=new A(e,t);if(s(i))for(const e of i)r.seekIndex(e),n.addRecord(r);else for(;r.next();)n.addRecord(r);return n}addRecord(e){const t=this._target,s=this.geometryType,i=e.materialKey;let n=e.indexFrom,o=e.indexCount;const a=e.vertexFrom,h=e.vertexCount;if(o||(n=a,o=h),r(this._head)){const e=new L(t,s,i,n,o);return void(this._head=new b(e))}let u=null,d=this._head;for(;d;){if(n<d.data.indexFrom)return this._insert(i,n,o,u,d);u=d,d=d.next}this._insert(i,n,o,u,null)}forEach(e){s(this._head)&&this._head.forEach(e)}*infos(){if(s(this._head))for(const e of this._head.values())yield e}_insert(e,t,i,n,o){if(r(n)&&r(o)){const s=new L(this._target,this.geometryType,e,t,i);this._head=new b(s)}return r(n)&&s(o)?this._insertAtHead(e,t,i,o):s(n)&&r(o)?this._insertAtEnd(e,t,i,n):s(n)&&s(o)?this._insertAtMiddle(e,t,i,n,o):void 0}_insertAtHead(e,t,s,r){const i=t+s;if(e===r.data.materialKey&&i===r.data.indexFrom)r.data.indexFrom=t,r.data.indexCount+=s;else{const i=new L(this._target,this.geometryType,e,t,s);this._head=new b(i),this._head.next=r}}_insertAtEnd(e,t,s,r){if(r.data.materialKey===e&&r.data.indexEnd===t)r.data.indexCount+=s;else{const i=new L(this._target,this.geometryType,e,t,s),n=new b(i);r.next=n}}_insertAtMiddle(e,t,s,r,i){const n=t+s;if(r.data.materialKey===e&&r.data.indexEnd===t)r.data.indexCount+=s,r.data.materialKey===i.data.materialKey&&r.data.indexEnd===i.data.indexFrom&&(r.data.indexCount+=i.data.indexCount,r.next=i.next);else if(e===i.data.materialKey&&n===i.data.indexFrom)i.data.indexFrom=t,i.data.indexCount+=s;else{const n=new L(this._target,this.geometryType,e,t,s),o=new b(n);r.next=o,o.next=i}}}class I{constructor(e,t,s,r){const i=x.create(t*s*Uint32Array.BYTES_PER_ELEMENT,r);this.size=t,this.strideInt=s,this.bufferType=e,this.dirty={start:1/0,end:0},this._gpu=null,this._cpu=i,this.clear()}get elementSize(){return this._cpu.length/this.strideInt}get invalidated(){return this.bufferSize>0&&!this._gpu}get invalidatedComputeBuffer(){return this.bufferSize>0&&!this._gpuComputeTriangles}invalidate(){this._invalidateTriangleBuffer(),i(this._gpu,(e=>e.dispose())),this._gpu=null}_invalidateTriangleBuffer(){i(this._gpuComputeTriangles,(e=>e.dispose())),this._gpuComputeTriangles=null}destroy(){i(this._gpu,(e=>e.dispose())),i(this._gpuComputeTriangles,(e=>e.dispose())),i(this._cpu,(e=>e.destroy())),i(this._cpu2,(e=>e.destroy()))}clear(){this.dirty.start=1/0,this.dirty.end=0,this.freeList=new w({start:0,end:this._cpu.length/this.strideInt}),this.fillPointer=0}ensure(e){if(!(this.maxAvailableSpace()>=e)&&e*this.strideInt>this._cpu.length-this.fillPointer){this.invalidate();const t=this._cpu.length/this.strideInt,s=Math.round(1.25*(t+e)),r=s*this.strideInt;this._cpu.expand(r*Uint32Array.BYTES_PER_ELEMENT),this.freeList.free(t,s-t)}}set(e,t){this._cpu.array[e]!==t&&(this._cpu.array[e]=t,this.dirty.start=Math.min(e,this.dirty.start),this.dirty.end=Math.max(e,this.dirty.end))}getGPUBuffer(e,t=!1){if(!this.bufferSize)return null;if(t){if("index"!==this.bufferType)throw new Error("Tired to get triangle buffer, but target is not an index buffer");return r(this._gpuComputeTriangles)&&(this._gpuComputeTriangles=this._createComputeBuffer(e)),this._gpuComputeTriangles}return r(this._gpu)&&(this._gpu=this._createBuffer(e)),this._gpu}getCPUBuffer(){if(!this._cpu2){const e=this._cpu.slice();this._cpu2=e}return this._cpu2.length!==this._cpu.length&&this._cpu2.expand(this._cpu.length*this._cpu.array.BYTES_PER_ELEMENT),this._cpu2.set(this._cpu),this._cpu2}get bufferSize(){return this._cpu.length/this.strideInt}maxAvailableSpace(){return this.freeList.maxAvailableSpace()}insert(e,t,s,r){const i=s*this.strideInt;if(!i)return 0;const o=t*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,a=new Uint32Array(e,o,i),h=n(this.freeList.firstFit(s),"First fit region must be defined")*this.strideInt,u=i,d=h/this.strideInt-t;if(0!==r)for(let e=0;e<a.length;e++)a[e]+=r;return this._cpu.array.set(a,h),this.dirty.start=Math.min(this.dirty.start,h),this.dirty.end=Math.max(this.dirty.end,h+u),this.fillPointer=Math.max(this.fillPointer,h+u),d}free(e,t,s){const r=e*this.strideInt,i=(e+t)*this.strideInt;if(!0===s)for(let s=e;s!==e+t;s++)this._cpu.array[s*this.strideInt]=2147450879;this.dirty.start=Math.min(this.dirty.start,r),this.dirty.end=Math.max(this.dirty.end,i),this.freeList.free(e,t)}upload(){if(this.dirty.end){if(this._invalidateTriangleBuffer(),r(this._gpu))return this.dirty.start=1/0,void(this.dirty.end=0);this._gpu.setSubData(this._cpu.array,this.dirty.start,this.dirty.start,this.dirty.end),this.dirty.start=1/0,this.dirty.end=0}}_createBuffer(e){const t=C.DYNAMIC_DRAW;return"index"===this.bufferType?j.createIndex(e,t,this._cpu.array):j.createVertex(e,t,this._cpu.array)}_createComputeBuffer(e){const t=C.DYNAMIC_DRAW,s=new Uint32Array(this.fillPointer/3);for(let e=0;e<this.fillPointer;e+=3)s[e/3]=this._cpu.array[e];return j.createIndex(e,t,s)}}class M{constructor(e,t){this._vaos=new Map,this._indicesInvalid=!1,this.geometryType=e,this._stage=t}destroy(){for(const[e,t]of this._vaos)s(t)&&t.dispose(!1);this._indexBuffer=o(this._indexBuffer),this._vertexBuffer=o(this._vertexBuffer)}insert(e,t,s){if(!e.records.byteLength)return;const r=e.stride;if(this._vertexBuffer&&this._indexBuffer){const s=e.indices.byteLength/4,i=e.vertices.byteLength/r;this._indexBuffer.ensure(s),this._vertexBuffer.ensure(i);const{vertices:o,indices:a}=e,h=g.from(e.records),u=this._vertexBuffer.insert(o,0,o.byteLength/r,0),d=this._indexBuffer.insert(a,0,a.byteLength/4,u);if(h.forEach((e=>{e.indexFrom+=d,e.vertexFrom+=u})),n(this._records,"Expected records to be defined").link(h),t)this._indicesInvalid=!0;else if(this._displayList){const e=h.getCursor();for(;e.next();)this._displayList.addRecord(e)}}else{const s=e.indices.byteLength/4,i=e.vertices.byteLength/r,n=r/Uint32Array.BYTES_PER_ELEMENT,o=this._stage.bufferPool;this._records=g.from(e.records),this._indexBuffer=new I("index",s,1,o),this._vertexBuffer=new I("vertex",i,n,o),this._indexBuffer.insert(e.indices,0,e.indices.byteLength/4,0),this._vertexBuffer.insert(e.vertices,0,e.vertices.byteLength/r,0),t&&(this._indicesInvalid=!0)}}remove(e){if(!r(this._records))for(const t of e){const e=this._records.getCursor();if(!e.lookup(t))continue;const s=e.indexFrom,r=e.vertexFrom;let i=e.indexCount,n=e.vertexCount;for(;e.next()&&e.id===t;)i+=e.indexCount,n+=e.vertexCount;this._indexBuffer.free(s,i),this._vertexBuffer.free(r,n,!0),this._records.delete(t)}}getVAO(e,t,s,n){if(!this._vertexBuffer||!this._indexBuffer||r(this._records)||!this._vertexBuffer.bufferSize)return null;const o=n?1:0;let a=this._vaos.get(o);(this._vertexBuffer.invalidated||this._indexBuffer.invalidated||n&&this._indexBuffer.invalidatedComputeBuffer)&&(i(a,(e=>e.dispose(!1))),a=null),this._vertexBuffer.upload(),this._indexBuffer.upload();const h=this._indexBuffer.getGPUBuffer(e,1===o),u=this._vertexBuffer.getGPUBuffer(e);return a||(a=new v(e,s,t,{geometry:u},h),this._vaos.set(o,a)),a}forEachCommand(e){if(!r(this._records)){if(this._sortIndices(this._records),!this._displayList){const e=this._cursorIndexOrder;this._displayList=A.from(this,this.geometryType,this._records.getCursor(),e)}this._displayList.forEach(e)}}_sortIndices(e){const t=!!this._indexBuffer.bufferSize;if(!this._indicesInvalid)return;this._indicesInvalid=!1;let s=0;const r=e.getCursor(),i=[],n=[],o=[];for(;r.next();)n.push(r.index),o.push(r.sortKey),i.push(r.id);n.sort(((e,t)=>{const s=o[t],r=o[e];return r===s?i[t]-i[e]:s-r}));const a=e.getCursor(),h=t?this._indexBuffer.getCPUBuffer():this._vertexBuffer.getCPUBuffer();for(const e of n){if(!a.seekIndex(e))throw new Error("Expected to find index");if(t){const{indexFrom:e,indexCount:t}=a;a.indexFrom=s;for(let r=0;r<t;r++)this._indexBuffer.set(s++,h.array[e+r])}else{const{vertexFrom:e,vertexCount:t}=a,r=this._vertexBuffer.strideInt,i=e*r,n=i+t*r;a.vertexFrom=s/r;for(let e=i;e<n;e++)this._vertexBuffer.set(s++,h.array[e])}}this._cursorIndexOrder=n,this._displayList=null}}let P=0;class F extends y{constructor(e,t,s,r,i,n){super(e,t,s,r),this.instanceId=P++,this.patchCount=0,this._renderState={current:{geometry:new Map,metrics:null},next:null,swap:!1,swapFrames:0,locked:!1},this._patches=new l(100),this._bufferPatches=new l(100),this._lastCommitTime=0,this.transforms.labelMat2d=c(),this._store=i,this._requestLabelUpdate=n}destroy(){super.destroy(),this._renderState.current.geometry.forEach((e=>e.destroy())),s(this._renderState.next)&&this._renderState.next.geometry.forEach((e=>e.destroy())),this._renderState.current=null,this._renderState.next=null}get labelMetrics(){return this._renderState.current.metrics}get hasData(){return!!this._renderState.current.geometry.size}get updateStatus(){return`renderState:${!!this._renderState.current}, ${!!this._renderState.next}, hasData:${this.hasData}, queue:${this._patches.size}`}getGeometry(e){return this._renderState.current.geometry.get(e)}patch(e,t){this.patchCount++,e.clear&&this._patches.size>=50&&this._dropPatches();const s=e,r=s.addOrUpdate&&this.key.id!==s.addOrUpdate.tileKeyOrigin;t&&r?this._bufferPatches.enqueue(s):(s.sort=s.sort&&!t,this._patches.enqueue(s)),this.requestRender()}commit(e){if(this._lastCommitTime!==e.time){this._lastCommitTime=e.time;for(let e=0;e<4;e++)this._updateMesh(),this.isReady&&this._updateBufferMesh();this._renderState.swap&&(this._swapRenderStates(),this.requestRender())}}lock(){this._renderState.locked=!0}unlock(){this._renderState.locked=!1,this._flushUpdates(),this._swap()}_swapRenderStates(){if(this._renderState.next){if(this._renderState.locked)return this._renderState.swap=!0,void this.requestRender();this._renderState.swap=!0,this._swap()}}_swap(){this._renderState.swap&&(this._renderState.swap=!1,s(this._renderState.next)&&(this._renderState.current.geometry.forEach((e=>e.destroy())),this._renderState.current=this._renderState.next,this._renderState.next=null,this._requestLabelUpdate()))}_flushUpdates(){let e=this._patches.maxSize;for(;this._patches.size&&e--;)this._updateMesh(),this._swap()}_updateBufferMesh(){const e=this._bufferPatches.peek();if(!s(e)||!e.clear||null===this._renderState.next)for(;this._bufferPatches.size;){const e=this._bufferPatches.dequeue();s(e)&&this._patchBuffer(e)}}_updateMesh(){const e=this._patches.dequeue();if(s(e)){if(t("esri-2d-update-debug")){const t=e,s=t.addOrUpdate?.tileKeyOrigin,r=this.key.id===s?"SELF":s;let i="";for(let e=0;e<5;e++)i+=t.addOrUpdate?.data[e]?.records?.byteLength?1:0;console.debug(this.key.id,"FeatureTile:patch",`[clear: ${t.clear} origin: ${r}, end:${t.end} data:${i}]`)}!0===e.clear&&(s(this._renderState.next)&&(this._renderState.next.geometry.forEach((e=>e.destroy())),this._renderState.next=null),this._renderState.next={geometry:new Map,metrics:null},t("esri-2d-update-debug")&&console.debug(this.key.id,"FeatureTile:_updateMesh - Creating new renderState")),this.requestRender(),this._patch(e),e.end&&(t("esri-2d-update-debug")&&console.debug(this.key.id,"FeatureTile:_updateMesh - Encountered end message"),this.ready(),this._swapRenderStates())}}_patch(e){m((t=>{this._remove(t,e.remove),this._insert(t,e,!1)}))}_patchBuffer(e){m((t=>{this._insert(t,e,!0)}))}_insert(e,s,i){try{const n=a(this._renderState.next,this._renderState.current),o=s.addOrUpdate?.data[e],h=n.geometry;if(r(o))return;h.has(e)||(t("esri-2d-update-debug")&&console.debug(this.key.id,`FeatureTile:_insert - Creating geometry buffer ${e}`),h.set(e,new M(e,this.stage))),t("esri-2d-update-debug")&&console.debug(this.key.id,`FeatureTile:_insert - Inserting into ${e}, version=${s.addOrUpdate?.version} stride=${o.stride}`),h.get(e).insert(o,s.sort,i),e===_.LABEL&&this._insertLabelMetrics(s.type,o.metrics,s.clear)}catch(e){}}_insertLabelMetrics(e,t,s){const i=a(this._renderState.next,this._renderState.current);if(r(t))return;const n=k.from(t);if(r(i.metrics))i.metrics=n;else{if("update"===e){const e=n.getCursor();for(;e.next();)i.metrics.delete(e.id)}i.metrics.link(n)}}_remove(e,t){const s=a(this._renderState.next,this._renderState.current).geometry.get(e);t&&t.length&&s&&(s.remove(t),this._removeLabelMetrics(t))}_removeLabelMetrics(e){const{metrics:t}=a(this._renderState.next,this._renderState.current);if(!r(t)&&e.length)for(const s of e)for(;t.delete(s););}_dropPatches(){const e=new Array;let t=!1;for(;this._patches.size;){const s=this._patches.dequeue();if(r(s))break;if(s.clear){if(t)break;t=!0}e.push(s)}this._patches.clear(),e.forEach((e=>this._patches.enqueue(e)))}}const q=t("featurelayer-order-by-server-enabled");class z extends V{constructor(e,t,s,r){super(e),this._hitTestsRequests=[],this._layer=s,this._layerView=t,this._onUpdate=r}renderChildren(e){this.attributeView.update(),this.hasAnimation&&e.painter.effects.integrate.draw(e,e.attributeView),super.renderChildren(e)}hasEmptyAttributeView(){return this.attributeView.isEmpty()}isUpdating(){return this.attributeView.isUpdating()}hitTest(e){let t=this._hitTestsRequests.find((({x:t,y:s})=>t===e.x&&s===e.y));const s=h();return t?t.resolvers.push(s):(t={x:e.x,y:e.y,resolvers:[s]},this._hitTestsRequests.push(t)),this.requestRender(),s.promise}onTileData(e,t){const s=q&&"orderBy"in this._layer&&this._layer.orderBy,r=s&&s?.length&&!s[0].valueExpression&&s[0].field,i=!!s&&this._layerView.orderByFields===r;e.patch(t,i),this.contains(e)||this.addChild(e),this.requestRender()}onTileError(e){this.contains(e)||this.addChild(e)}updateTransitionProperties(e,t){super.updateTransitionProperties(e,t),this._layerView.featureEffectView.transitionStep(e,t),this._layerView.featureEffectView.transitioning&&this.requestRender()}doRender(e){const{minScale:t,maxScale:s}=this._layer.effectiveScaleRange,r=e.state.scale;r<=(t||1/0)&&r>=s&&super.doRender(e)}afterRender(e){super.afterRender(e),this._hitTestsRequests.length&&this.requestRender()}onAttributeStoreUpdate(){this.hasLabels&&this._layerView.view.labelManager.requestUpdate(),this._onUpdate()}get hasAnimation(){return this.hasLabels}setStencilReference(e){const{rendererSchema:t}=e.rendererInfo;if("dot-density"===t?.type&&t?.dotSize>1||"heatmap"===t?.type){const e=1;for(const t of this.children)t.stencilRef=t.key.level+e}else super.setStencilReference(e)}get hasLabels(){if("sublayers"in this._layer)return this._layer.sublayers.some((e=>!!e.labelingInfo?.length&&e.labelsVisible));const e=this._layer.featureReduction,t=e&&"labelingInfo"in e&&e.labelsVisible&&e.labelingInfo&&e.labelingInfo.length;return this._layer.labelingInfo&&this._layer.labelingInfo.length&&this._layer.labelsVisible||!!t}prepareRenderPasses(e){const t=e.registerRenderPass({name:"label",brushes:[B.label],target:()=>this.hasLabels?this.children:null,drawPhase:p.LABEL|p.LABEL_ALPHA}),s=e.registerRenderPass({name:"geometry",brushes:[B.fill,B.dotDensity,B.line,B.marker,B.heatmap,B.pieChart,B.text],target:()=>this.children,enableDefaultDraw:()=>!this._layerView.featureEffectView.hasEffects,effects:[{apply:e.effects.outsideEffect,enable:()=>this._layerView.featureEffectView.hasEffects,args:()=>this._layerView.featureEffectView.excludedEffects},{apply:e.effects.insideEffect,enable:()=>this._layerView.featureEffectView.hasEffects,args:()=>this._layerView.featureEffectView.includedEffects},{apply:e.effects.hittest,enable:()=>!!this._hitTestsRequests.length,args:()=>this._hitTestsRequests}]}),r=e.registerRenderPass({name:"highlight",brushes:[B.fill,B.dotDensity,B.line,B.marker,B.pieChart,B.text],target:()=>this.children,drawPhase:p.HIGHLIGHT,enableDefaultDraw:()=>!1,effects:[{apply:e.effects.highlight,enable:()=>!!this._layerView.hasHighlight()}]});return[...super.prepareRenderPasses(e),s,r,t]}}let D=class extends S{constructor(){super(...arguments),this.type="symbol"}install(e){const t=new z(this.tileInfoView,this.layerView,this.layer,(()=>this.notifyChange("updating")));this.featuresView=t,e.addChild(t)}uninstall(e){e.removeChild(this.featuresView),this.featuresView=o(this.featuresView)}fetchResource(e,t){const{url:s}=e,r=this.featuresView.stage;try{return r.resourceManager.fetchResource(s,{signal:t.signal})}catch(e){return u(e)?Promise.resolve({width:0,height:0}):Promise.reject(e)}}isUpdating(){const e=super.isUpdating(),s=!this.featuresView||this.featuresView.isUpdating(),r=this.featuresView?.hasEmptyAttributeView(),i=e||s||e&&r;return t("esri-2d-log-updating")&&console.log(`Updating SymbolTileRenderer ${i}\n  -> updatingTiles ${e}\n  -> hasFeaturesView ${!!this.featuresView}\n  -> updatingFeaturesView ${s}`),i}hitTest(e){return this.featuresView.hitTest(e)}supportsRenderer(e){return null!=e&&["simple","class-breaks","unique-value","dot-density","dictionary","heatmap","pie-chart"].includes(e.type)}onConfigUpdate(e){let t=null;if(e&&"visualVariables"in e){const s=(E(e).visualVariables||[]).map((e=>{const t=e.clone();return"normalizationField"in e&&(t.normalizationField=null),e.valueExpression&&"$view.scale"!==e.valueExpression&&(t.valueExpression=null,t.field="nop"),t}));t=T(s)}this.featuresView.setRendererInfo(e,t,this.layerView.featureEffect)}onTileData(e){const t=this.tiles.get(e.tileKey);t&&e.data&&this.featuresView.onTileData(t,e.data),this.layerView.view.labelManager.requestUpdate()}onTileError(e){const t=this.tiles.get(e.tileKey);t&&this.featuresView.onTileError(t)}forceAttributeTextureUpload(){this.featuresView.attributeView.forceTextureUpload()}lockGPUUploads(){this.featuresView.attributeView.lockTextureUpload(),this.tiles.forEach((e=>e.lock()))}unlockGPUUploads(){this.featuresView.attributeView.unlockTextureUpload(),this.tiles.forEach((e=>e.unlock()))}async getMaterialItems(e){return this.featuresView.getMaterialItems(e)}invalidateLabels(){this.featuresView.hasLabels&&this.layerView.view.labelManager.requestUpdate()}createTile(e){const t=this.tileInfoView.getTileBounds(f(),e),s=this.tileInfoView.getTileResolution(e.level),r=this.featuresView.attributeView;return new F(e,s,t[0],t[3],r,(()=>this.layerView.view.labelManager.requestUpdate()))}disposeTile(e){this.featuresView.removeChild(e),e.destroy(),this.layerView.view.labelManager.requestUpdate()}};D=e([d("esri.views.2d.layers.features.tileRenderers.SymbolTileRenderer")],D);const O=D;export{O as default};
