/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as s}from"./tslib.es6.js";import{c as i}from"./asyncUtils.js";import t from"../core/Handles.js";import{i as e,g as n,f as a,a as r,d as o}from"./maybe.js";import{throwIfAborted as l,isAbortError as h,isAborted as c}from"../core/promiseUtils.js";import{watch as y,sync as w,syncAndInitial as p,whenOnce as _}from"../core/reactiveUtils.js";import{property as V}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import"./typedArrayUtil.js";import{subclass as d}from"../core/accessorSupport/decorators/subclass.js";import{I as u}from"./InteractiveToolViewModel.js";var m;!function(s){s[s.PENDING=0]="PENDING",s[s.WAIT_FOR_VIEW_READY=1]="WAIT_FOR_VIEW_READY",s[s.RUNNING=2]="RUNNING"}(m||(m={}));let v=class extends u{constructor(s={}){super(s),this.analysisView=null,this._reconnectViewTask=null,this._analysisBaseHandles=new t,this._parentChangeFromReconnect=!1,this._startUserOperation=null;const i=s?.analysis;e(i)?this.analysis=i:(this._set("analysis",this.constructAnalysis()),this._set("isAnalysisOwner",!0))}normalizeCtorArgs(s){const{analysis:i,...t}=s;return t}initialize(){this._analysisBaseHandles.add([y((()=>n(this.analysis,(({parent:s})=>s))),(s=>{this._parentChangeFromReconnect||s===this.view||this._set("isAnalysisOwner",!1);const i=!this._parentChangeFromReconnect;this._parentChangeFromReconnect=!1,i&&this._scheduleViewReconnect()}),w),y((()=>({view:this.view,ready:e(this.view)&&this.view.ready,supported:this.supported})),(({view:s},i)=>{const t=i?.view;s!==t&&(this._startUserOperation=a(this._startUserOperation),this._disconnectFromView(t)),this._scheduleViewReconnect()}),p),y((()=>this.analysis.isEditable),((s,i)=>{r(this.analysisView)||(s&&!i&&r(this.tool)?this.createTool():!s&&i&&e(this.tool)&&!this.tool.active&&this.removeTool())}))])}destroy(){this._analysisBaseHandles=o(this._analysisBaseHandles),this._reconnectViewTask=a(this._reconnectViewTask),this._startUserOperation=a(this._startUserOperation),e(this.analysisView)&&(this.analysisView.visible=void 0),this._disconnectFromView(this.view),e(this.analysis)&&this.isAnalysisOwner&&(this.analysis.destroy(),this._set("analysis",null))}set analysis(s){s!==this._get("analysis")&&(this._startUserOperation=a(this._startUserOperation),this._disconnectFromView(this.view),this._setExternalAnalysis(s),this._scheduleViewReconnect())}get ready(){return e(this.analysisView)&&!this.connectingToView}get connectingToView(){return e(this._reconnectViewTask)}get isAnalysisOwner(){return this._get("isAnalysisOwner")}set visible(s){this._set("visible",s),e(this.analysisView)&&(this.analysisView.visible=s)}async start(){this.clear();const s={task:null,abort:null,state:m.PENDING},t=i((async i=>{s.state=m.WAIT_FOR_VIEW_READY,await _((()=>this.ready),i),s.state=m.RUNNING,this.createTool({interactive:!0})}));return s.task=t,s.abort=()=>t.abort(),this._startUserOperation=s,t.promise}clear(){this._startUserOperation=a(this._startUserOperation),this.removeTool(),this.analysis.clear()}onConnectToAnalysisView(s){}onDisconnectFromAnalysisView(){}_scheduleViewReconnect(){this._reconnectViewTask=a(this._reconnectViewTask);const s=i((async i=>{try{await this._reconnectView(i)}catch(s){if(l(i),!h(s))return void this.logger.warn("Failed to use analysis in view model",s);throw s}finally{s===this._reconnectViewTask&&(this._reconnectViewTask=null)}}));this._reconnectViewTask=s}async _reconnectView(s){const{view:i}=this,t=e(i)&&i.ready&&this.supported,n=this.analysis;if(this._startUserOperation=O(this._startUserOperation),this._disconnectFromView(i),t&&!r(i)&&!r(n)){if(this.isAnalysisOwner){if(e(n.parent))return void this.logError("expected owned analysis to have null parent when connecting to view");this._parentChangeFromReconnect=!0,i.analyses.add(n)}this.analysisView=await i.whenAnalysisView(n),c(s)?this._startUserOperation=O(this._startUserOperation):(this.analysisView.visible=this.visible,this.onConnectToAnalysisView(this.analysisView),this.createTool())}}_disconnectFromView(s){this.removeTool(),e(s)&&this.isAnalysisOwner&&(this._parentChangeFromReconnect=!0,s.analyses.remove(this.analysis),this.analysis.clear()),this.analysisView=null,this.onDisconnectFromAnalysisView()}_setExternalAnalysis(s){e(this.analysisView)&&!this.isAnalysisOwner&&(this.analysisView.visible=!0),this.analysisView=null,this._set("isAnalysisOwner",!1),this._set("analysis",s),this._parentChangeFromReconnect=!1}get testInfo(){return{analysisView:this.analysisView}}};function O(s){return e(s)&&s.state>=m.RUNNING?(s.abort(),null):s}s([V({nonNullable:!0})],v.prototype,"analysis",null),s([V()],v.prototype,"analysisView",void 0),s([V()],v.prototype,"ready",null),s([V()],v.prototype,"connectingToView",null),s([V({readOnly:!0})],v.prototype,"isAnalysisOwner",null),s([V({type:Boolean,value:!0})],v.prototype,"visible",null),s([V()],v.prototype,"_reconnectViewTask",void 0),v=s([d("esri.widgets.support.InteractiveAnalysisViewModel")],v);export{v as I};
