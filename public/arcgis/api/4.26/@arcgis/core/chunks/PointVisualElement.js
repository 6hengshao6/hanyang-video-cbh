/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{c as e,n as t}from"./mathUtils.js";import{i as r,a as s}from"./maybe.js";import{s as i,d as o}from"./vec3.js";import{e as a,c as n}from"./vec4.js";import{f as l}from"./vec4f64.js";import{projectVectorToVector as u}from"../geometry/projection.js";import{n as c}from"./aaBoundingBox.js";import{s as h}from"./ray.js";import{V as m}from"./VisualElementResources.js";import{e as _,E as p}from"./ElevationContext.js";import{c as d,D as g}from"./sdfPrimitives.js";import{b as f}from"./GeometryUtil.js";import{V as y}from"./VertexAttribute.js";import{H as v}from"./HUDMaterial.js";class S{constructor(e){this.view=null,this._geometry=null,this._size=3,this._color=l(1,0,1,1),this._pixelSnappingEnabled=!0,this._primitive="square",this._outlineSize=1,this._outlineColor=l(1,1,1,1),this._elevationInfo=null,this._resources=new m({view:e.view,createResources:e=>this._createResources(e),destroyResources:e=>this._destroyResources(e),recreateGeometry:(e,t)=>{e.geometry=this._recreateGeometry(t,e.material)}});let t=!0;for(const r in e)r in this?"attached"===r?t=e[r]??!1:this[r]=e[r]:console.error("Cannot set unknown property",r);this.attached=t}destroy(){this._resources.destroy()}get visible(){return this._resources.visible}set visible(e){this._resources.visible=e}get attached(){return this._resources.attached}set attached(e){this._resources.attached=e}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._resources.recreateGeometry()}get size(){return this._size}set size(e){if(e!==this._size){const t=this._preferredTextureSize;this._size=e,t<this._preferredTextureSize?r(this._resources)&&this._resources.recreate():this._updateSizeAttribute()}}get color(){return this._color}set color(e){a(e,this._color)||(n(this._color,e),this._updateMaterial())}get pixelSnappingEnabled(){return this._pixelSnappingEnabled}set pixelSnappingEnabled(e){this._pixelSnappingEnabled!==e&&(this._pixelSnappingEnabled=e,this._updateMaterial())}get primitive(){return this._primitive}set primitive(e){this._primitive!==e&&(this._primitive=e,r(this._resources)&&this._resources.recreate())}get outlineSize(){return this._outlineSize}set outlineSize(e){e!==this._outlineSize&&(this._outlineSize=e,this._updateMaterial())}get outlineColor(){return this._outlineColor}set outlineColor(e){a(e,this._outlineColor)||(n(this._outlineColor,e),this._updateMaterial())}get elevationInfo(){return this._elevationInfo}set elevationInfo(e){this._elevationInfo=e,this._resources&&this._resources.recreateGeometry()}_updateMaterial(){const e=this._resources.resources;s(e)||e.material.setParameters(this._materialParameters(e.texture.id))}_updateSizeAttribute(){const e=this._resources.resources,t=this._resources.object;if(s(e)||s(t))return;const r=e.geometry;if(s(r))return;const i=r.getMutableAttribute(y.SIZE).data,o=this._geometrySize;i[0]=o,i[1]=o,t.geometryVertexAttrsUpdated(t.geometries[0])}_materialParameters(e){return{color:this._color,textureIsSignedDistanceField:!0,distanceFieldBoundingBox:z,occlusionTest:!1,outlineColor:this._outlineColor,outlineSize:this._outlineSize,textureId:e,polygonOffset:!1,shaderPolygonOffset:0,drawInSecondSlot:!0,depthEnabled:!1,pixelSnappingEnabled:this.pixelSnappingEnabled}}get _geometrySize(){return this._size/x}_recreateGeometry(e,t){const s=this._createRenderGeometry(t);return r(s)&&e.addGeometry(s),s}_createResources(e){const t=d(this._primitive,this._preferredTextureSize),s=new v(this._materialParameters(t.id)),i=this._recreateGeometry(e,s);return{material:s,texture:t,geometry:i,forEach(e){e(t),e(s),r(this.geometry)&&e(this.geometry)}}}_destroyResources(e){e.geometry=null,e.material.dispose(),e.texture.dispose()}get _preferredTextureSize(){return e(t(2*this._geometrySize),16,128)}calculateMapBounds(e){if(s(this._resources.resources)||s(this._resources.resources.geometry))return!1;const t=this._resources.resources.geometry.vertexAttributes.get(y.POSITION);return u(t.data,this.view.renderCoordsHelper.spatialReference,b,this.view.spatialReference),c(e,b),!0}_createRenderGeometry(e){const t=this.geometry;if(s(t))return null;const{renderCoordsHelper:r,elevationProvider:o}=this.view,a=_(t,o,p.fromElevationInfo(this.elevationInfo),r),n=i(h.get(),t.x,t.y,a),l=h.get();u(n,t.spatialReference,l,r.spatialReference);const c=this._geometrySize;return f(e,null,l,null,[c,c],[0,0,0,1])}}const x=g,z=[x/2,x/2,1-x/2,1-x/2],b=o();export{S as P};
