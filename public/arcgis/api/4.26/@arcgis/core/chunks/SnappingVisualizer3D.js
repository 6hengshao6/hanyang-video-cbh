/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import e from"../Color.js";import"./typedArrayUtil.js";import{d as t}from"./handleUtils.js";import{t as r,u as i,a as s,i as a}from"./maybe.js";import{d as n,f as o,j as c,c as d,n as l,b as p,a as h,A as m}from"./vec3.js";import{projectVectorToVector as u}from"../geometry/projection.js";import{o as _,f}from"./elevationInfoUtils.js";import{E as g,a as j}from"./ExtendedLineVisualElement.js";import{watch as R}from"../core/reactiveUtils.js";import{h as y,e as v}from"./screenUtils.js";import{n as D,b as O,h as E,s as b,j as w}from"./vec2.js";import{a as G}from"./vec2f64.js";import{e as S,c as x}from"./vec4.js";import{f as A}from"./vec4f32.js";import{m as P}from"./dehydratedFeatures.js";import{E as V}from"./EngineVisualElement.js";import{R as H,D as T,b as U}from"./RenderGeometry.js";import{c as I}from"./GeometryUtil.js";import{R as z}from"./Material.js";import{V as F}from"./VertexAttribute.js";import{R as L}from"./TriangleMaterial.js";import{P as M}from"./PointVisualElement.js";import{R as B}from"./RightAngleQuadVisualElement.js";import{d as C}from"./Settings2.js";import{L as N,a as Z}from"./LineSnappingHint.js";import{a as q,L as W,c as k}from"./snappingUtils.js";import{a as Q}from"./SnappingContext.js";import{v as X}from"./viewUtils.js";class J extends V{constructor(e){super(e),this._location=n(),this._direction=o(1,0,0),this._width=1,this._offset=1,this._length=18,this._color=A(1,0,1,1),this._renderOccluded=z.OccludeAndTransparent,this.applyProps(e)}createObject3DResourceFactory(e){return{view:e,createResources:e=>this._createObject3DResources(e),destroyResources:e=>this._destroyObject3DResources(e),recreateGeometry:(e,t)=>this._recreateObject3DGeometry(e,t),cameraChanged:()=>this._updateGeometry()}}createDrapedResourceFactory(e){return{view:e,createResources:()=>this._createDrapedResources(),destroyResources:e=>this._destroyDrapedResources(e),recreateGeometry:e=>this._recreateDrapedGeometry(e)}}get location(){return this._location}set location(e){c(this._location,e)||(d(this._location,e),this._updateGeometry())}get direction(){return this._direction}set direction(e){c(this._direction,e)||(d(this._direction,e),this._updateGeometry())}setDirectionFromPoints(e,t){l(this._direction,p(this._direction,t,e)),this._updateGeometry()}get width(){return this._width}set width(e){e!==this._width&&(this._width=e,this._updateMaterial())}get offset(){return this._offset}set offset(e){e!==this._offset&&(this._offset=e,this._updateGeometry())}get length(){return this._length}set length(e){e!==this._length&&(this._length=e,this._updateGeometry())}get color(){return this._color}set color(e){S(e,this._color)||(x(this._color,e),this._updateMaterial())}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}_createObject3DResources(e){const t=new L(this.materialParameters),r=new Array;return this._createObject3DGeometry(t,e,r),{material:t,geometries:r,forEach:e=>{e(t),r.forEach(e)}}}_destroyObject3DResources(e){e.geometries.length=0,e.material.dispose()}_recreateObject3DGeometry(e,t){e.geometries.length=0,this._createObject3DGeometry(e.material,t,e.geometries)}_createObject3DGeometry(e,t,r){const[i,s]=this._createGeometries(e);t.addGeometry(i),t.addGeometry(s),r.push(i),r.push(s),this._updateVerticesObject3D(t)}_createDrapedResources(){const e=new L(this.materialParameters),t=R((()=>this.view.state.contentPixelRatio),(()=>{this.drapedResources.recreateGeometry()}));return{material:e,geometries:this._createDrapedGeometry(e),pixelRatioHandle:t}}_destroyDrapedResources(e){e.pixelRatioHandle.remove(),e.geometries=[],e.material.dispose()}_recreateDrapedGeometry(e){e.geometries=this._createDrapedGeometry(e.material)}_createDrapedGeometry(e){const t=this._createGeometries(e);return this._updateVerticesDraped(t),t.map((e=>new H(e)))}_createGeometries(e){return[I(e,[n(),n()]),I(e,[n(),n()])]}_updateMaterial(){const{materialParameters:e}=this;r(this.object3dResources.resources)?.material.setParameters(e),r(this.drapedResources.resources)?.material.setParameters(e)}get materialParameters(){return{width:this._width,color:this._color,renderOccluded:this._renderOccluded}}_updateGeometry(){if(this.isDraped)this.drapedResources.recreateGeometry();else{const e=r(this.object3dResources.object);e&&this._updateVerticesObject3D(e)}}_updateVerticesObject3D(e){const t=this.view.state.camera;t.projectToScreen(this.location,te),h(K,this.location,this.direction),t.projectToScreen(K,re),D(re,O(re,re,te)),this._updateVertexAttributesObject3D(t,e,0,te,re,1),this._updateVertexAttributesObject3D(t,e,1,te,re,-1)}_updateVertexAttributesObject3D(e,t,r,i,s,a){const n=t.geometries[r],o=n.getMutableAttribute(F.POSITION)?.data;if(!o)return;const{start:c,end:d}=this._computeStartEnd(s,i,a,this.offset,this.width,this.length);e.unprojectFromScreen(y(c),K),o[0]=K[0],o[1]=K[1],o[2]=K[2],e.unprojectFromScreen(y(d),K),o[3]=K[0],o[4]=K[1],o[5]=K[2],t.geometryVertexAttrsUpdated(n)}_updateVerticesDraped(e){const{view:{basemapTerrain:{overlayManager:t},state:{contentPixelRatio:r}}}=this,{location:s,width:a,length:n,offset:o}=this,c=ie;c.spatialReference=i(t.renderer.spatialReference),c.x=s[0],c.y=s[1];const d=t.overlayPixelSizeInMapUnits(c)*r,l=a*d,p=n*d,h=o*d;this._updateVertexAttributesDraped(e[0],l,p,h,-1),this._updateVertexAttributesDraped(e[1],l,p,h,1)}_updateVertexAttributesDraped(e,t,r,i,s){const a=e.getMutableAttribute(F.POSITION)?.data;if(!a)return;const{location:n,direction:o}=this,{start:c,end:d}=this._computeStartEnd(o,n,s,i,t,r);a[0]=c[0],a[1]=c[1],a[2]=T,a[3]=d[0],a[4]=d[1],a[5]=T,e.invalidateBoundingInfo()}_computeStartEnd(e,t,r,i,s,a){const n=E(Y,b(Y,e[1]*r,e[0]*-r),i+s/2),o=w($,w($,w($,t,E($,e,a/2)),n),n);return{start:o,end:w(ee,o,E(ee,e,-a))}}}const K=n(),Y=G(),$=G(),ee=G(),te=v(),re=v(),ie=P(0,0,void 0,null);class se extends Q{sortUniqueHints(e){return e.sort(((e,t)=>(t instanceof N?t.length:0)-(e instanceof N?e.length:0)))}visualizeIntersectionPoint(r,i){const{spatialReference:s,view:a}=i;return t(new M({view:a,primitive:"circle",geometry:q(r.intersectionPoint,s),elevationInfo:r.isDraped?_:f,size:20,outlineSize:2,color:[0,0,0,0],outlineColor:e.toUnitRGBA(C.orange),pixelSnappingEnabled:!1}))}visualizePoint(r,i){const{view:s,spatialReference:a}=i,n=this._alignPoint(r.point,r.domain,i);return t(new M({view:s,primitive:"circle",geometry:q(n,a),elevationInfo:this._hintElevationInfo(r,i),size:20,outlineSize:2,color:[0,0,0,0],outlineColor:e.toUnitRGBA(C.orange),pixelSnappingEnabled:!1}))}visualizeLine(e,r){const{view:i,spatialReference:s}=r,a=this._alignPoint(e.lineStart,e.domain,r),n=this._alignPoint(e.lineEnd,e.domain,r);return t(this._createLineSegmentHint(e.type,a,n,s,this._hintElevationInfo(e,r),i,e.isDraped,e.fadeLeft,e.fadeRight))}visualizeParallelSign(r,i){const{view:s,spatialReference:a}=i,{isDraped:n}=r,o=this._hintElevationInfo(r,i),c=this._alignPoint(r.lineStart,r.domain,i),d=this._alignPoint(r.lineEnd,r.domain,i),l=ae(c,a,o,s,n),p=ae(d,a,o,s,n),h=m(p,l,p,.5),u=new J({view:s,attached:!1,offset:C.parallelLineHintOffset,length:C.parallelLineHintLength,width:C.parallelLineHintWidth,color:e.toUnitRGBA(C.orange),location:h,renderOccluded:n?z.OccludeAndTransparent:z.Opaque,isDraped:n,renderGroup:U.SnappingHint});return u.setDirectionFromPoints(l,h),u.attached=!0,t(u)}visualizeRightAngleQuad(r,i){const{view:s,spatialReference:a}=i,n=this._hintElevationInfo(r,i),{isDraped:o}=r,c=this._alignPoint(r.previousVertex,r.domain,i),d=this._alignPoint(r.centerVertex,r.domain,i),l=this._alignPoint(r.nextVertex,r.domain,i),p=ae(c,a,n,s,o),h=ae(d,a,n,s,o),m=ae(l,a,n,s,o);return t(new B({view:s,attached:!0,color:o?e.toUnitRGBA(C.orangeTransparent):e.toUnitRGBA(C.orange),renderOccluded:o?z.OccludeAndTransparent:z.Transparent,outlineRenderOccluded:o?z.OccludeAndTransparent:z.Opaque,outlineColor:e.toUnitRGBA(C.orange),outlineSize:C.rightAngleHintOutlineSize,size:C.rightAngleHintSize,isDraped:o,geometry:{previous:p,center:h,next:m},renderGroup:U.SnappingHint}))}_createLineSegmentHint(t,r,i,s,a,n,o=!1,c=!0,d=!0){const l=ae(r,s,a,n,o),p=ae(i,s,a,n,o),h=new g({view:n,extensionType:j.FADED,start:l,end:p,isDraped:o,color:e.toUnitRGBA(C.orange),renderOccluded:o?z.OccludeAndTransparent:z.Opaque,renderGroup:U.SnappingHint});switch(t){case W.TARGET:h.width=C.lineHintWidthTarget,h.fadedExtensions={start:0,end:C.lineHintFadedExtensions};break;case W.REFERENCE_EXTENSION:h.width=C.lineHintWidthReference,h.fadedExtensions={start:0,end:0};break;case W.REFERENCE:h.width=C.lineHintWidthReference,h.fadedExtensions={start:c?C.lineHintFadedExtensions:0,end:d?C.lineHintFadedExtensions:0}}return h.attached=!0,h}_alignPoint(e,t,r){const i=this._getSelfSnappingZ(t,r);return s(i)?e:k(e[0],e[1],i)}_hintElevationInfo(e,t){return a(this._getSelfSnappingZ(e.domain,t))?i(t.selfSnappingZ).elevationInfo:e.isDraped?_:f}_getSelfSnappingZ(e,{selfSnappingZ:t}){return e===Z.SELF&&a(t)?t.value:null}}function ae(e,t,r,i,s,a=n()){if(s){const r=i.basemapTerrain.overlayManager.renderer.spatialReference;u(e,t,a,r)}else X(e,t,r,i,a);return a}export{se as S};
