/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{d as t,m as e}from"./mat2d.js";import{c as s}from"./mat2df32.js";import{s as i,m as r}from"./mat3.js";import{c as n}from"./mat3f32.js";import{l as a,y as h,A as o,d,e as _,f as u,g as c,h as l,i as E,$ as x,a0 as p,q as f,p as R,a1 as T}from"./definitions.js";import{T as g}from"./TiledDisplayObject.js";import{i as m,a as y,w as k,g as b,u as S,v as C,m as D,e as w}from"./maybe.js";import M from"../core/Error.js";import{h as O}from"./typedArrayUtil.js";import{L as z}from"./Logger.js";import{createResolver as N}from"../core/promiseUtils.js";import{f as P,h as L,g as A}from"./visualVariablesUtils.js";import{g as F,E as U}from"./color.js";import{b as v,P as j,a as B,c as I,T as K,g as Y,h as V}from"./enums3.js";import{F as G}from"./FramebufferObject.js";import{T as q}from"./Texture.js";class $ extends g{constructor(t,e,s,i){super(t,e,s,i,a,a)}destroy(){super.destroy(),this._transforms&&$.TransformCache.release(this.key.hash)}setTransform(n){const a=this.resolution/n.resolution,h=this.transforms.tileMat3,[o,d]=n.toScreenNoRotation([0,0],[this.x,this.y]),_=this.width/this.rangeX*a,u=this.height/this.rangeY*a;i(h,_,0,0,0,u,0,o,d,1),r(this.transforms.dvs,n.displayViewMat3,h);const c=this.transforms.labelMat2d,l=window.devicePixelRatio,E=t(s(),_*l,0,0,u*l,o*l,d*l);e(c,n.viewMat2d,E)}_createTransforms(){return $.TransformCache.acquire(this.key.hash)}}$.TransformCache=new class{acquire(t){return{refCount:1,version:-1,labelMat2d:s(),tileMat3:n(),dvs:n()}}release(t){}};const X=2147483647;class Z{constructor(t){this._head=t,this._cursor=t}static from(t,e=0,s=t.byteLength/W.BYTES_PER_RECORD-e){const i=new W(new Int32Array(t,e*W.BYTES_PER_RECORD,s*W.ELEMENTS_PER_RECORD));return new Z(i)}size(){let t=this._cursor,e=0;for(;t;)e+=t.size(),t=t._link;return e}get id(){return this._cursor.id}set id(t){this._cursor.id=t}get materialKey(){return this._cursor.materialKey}set materialKey(t){this._cursor.materialKey=t}get insertAfter(){return this._cursor.insertAfter}get indexFrom(){return this._cursor.indexFrom}set indexFrom(t){this._cursor.indexFrom=t}get indexCount(){return this._cursor.indexCount}set indexCount(t){this._cursor.indexCount=t}get vertexFrom(){return this._cursor.vertexFrom}set vertexFrom(t){this._cursor.vertexFrom=t}get vertexCount(){return this._cursor.vertexCount}set vertexCount(t){this._cursor.vertexCount=t}get sortKey(){return this._cursor.sortKey}set sortKey(t){this._cursor.sortKey=t}get index(){return this._cursor._indexStart+this._cursor._index}seekIndex(t){let e=t;for(this._cursor=this._head;this._cursor;){const t=this._cursor.size();if(e<t)return this._cursor._index=e,!0;e-=t,this._cursor=this._cursor._link}return!1}forEach(t){const e=this.getCursor();for(;e.next();)t(e)}link(t){if(!this._head)return void(this._head=t._head);let e=this._head;for(;e._link;)e=e._link;e._link=t._head,e._link._indexStart=e._indexStart+e.size()}getCursor(){return this.copy()}lookup(t){for(this._cursor=this._head;this._cursor&&!this._cursor.lookup(t);){if(!this._cursor._link)return!1;this._cursor=this._cursor._link}return!!this._cursor}copy(){const t=new Z(this._head?.copy());if(!t._head)return t;let e=t._head,s=t._head._link;for(;s;)e._link=s.copy(),e=s,s=e._link;return t}next(){return!!this._cursor&&(!!this._cursor.next()||!!this._cursor._link&&(this._cursor=this._cursor._link,this.next()))}peekId(){return this._cursor.peekId()??this._cursor._link.peekId()}delete(t){let e=this._head,s=null;for(;e;){if(e.delete(t))return e.isEmpty()&&(m(s)&&(s._link=e._link),e===this._head&&(this._head=e._link),e===this._cursor&&(this._cursor=e._link)),!0;s=e,e=e._link}return!1}}Z.ELEMENTS_PER_RECORD=h,Z.BYTES_PER_RECORD=Z.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT;class W{constructor(t){this._link=null,this._index=-1,this._indexStart=0,this._packedRecordsF32=null,this._deletedCount=0,this._offsets={instance:null},this._packedRecords=t}static from(t,e=0,s=t.byteLength/this.BYTES_PER_RECORD-e){return new W(new Int32Array(t,e*this.BYTES_PER_RECORD,s*this.ELEMENTS_PER_RECORD))}delete(t){const e=this._index,s=this.lookup(t);if(s)for(this.id=X,++this._deletedCount;this.next()&&this.id===t;)this.id=X,++this._deletedCount;return this._index=e,s}isEmpty(){return this._deletedCount===this.size()}link(t){this._link?this._link.link(t):this._link=t}lookup(t){if(y(this._offsets.instance)){this._offsets.instance=new Map;const t=this.copy();t._index=-1;let e=0;for(;t.next();)t.id!==e&&(this._offsets.instance.set(t.id,t._index),e=t.id)}if(!this._offsets.instance.has(t))return!1;const e=this._index;return this._index=this._offsets.instance.get(t),this.id!==X||(this._index=e,!1)}get id(){return this._packedRecords[this._index*W.ELEMENTS_PER_RECORD]}set id(t){this._packedRecords[this._index*W.ELEMENTS_PER_RECORD]=t}get materialKey(){return this._packedRecords[this._index*W.ELEMENTS_PER_RECORD+1]}set materialKey(t){this._packedRecords[this._index*W.ELEMENTS_PER_RECORD+1]=t}get insertAfter(){return this._packedRecords[this._index*W.ELEMENTS_PER_RECORD+2]}get indexFrom(){return this._packedRecords[this._index*W.ELEMENTS_PER_RECORD+3]}set indexFrom(t){this._packedRecords[this._index*W.ELEMENTS_PER_RECORD+3]=t}get indexCount(){return this._packedRecords[this._index*W.ELEMENTS_PER_RECORD+4]}set indexCount(t){this._packedRecords[this._index*W.ELEMENTS_PER_RECORD+4]=t}get vertexFrom(){return this._packedRecords[this._index*W.ELEMENTS_PER_RECORD+5]}set vertexFrom(t){this._packedRecords[this._index*W.ELEMENTS_PER_RECORD+5]=t}get vertexCount(){return this._packedRecords[this._index*W.ELEMENTS_PER_RECORD+6]}set vertexCount(t){this._packedRecords[this._index*W.ELEMENTS_PER_RECORD+6]=t}get sortKey(){return this._packedRecordsF32||(this._packedRecordsF32=new Float32Array(this._packedRecords.buffer)),this._packedRecordsF32[this._index*W.ELEMENTS_PER_RECORD+7]}set sortKey(t){this._packedRecordsF32||(this._packedRecordsF32=new Float32Array(this._packedRecords.buffer)),this._packedRecordsF32[this._index*W.ELEMENTS_PER_RECORD+7]=t}get index(){return this._index}size(){return this._packedRecords.length/W.ELEMENTS_PER_RECORD}next(){for(;++this._index<this.size()&&this.id===X;);return this._index<this.size()}peekId(){const t=(this._index+1)*W.ELEMENTS_PER_RECORD;return t>=this._packedRecords.length?0:this._packedRecords[t]}getCursor(){return this.copy()}copy(){const t=new W(this._packedRecords);return t._indexStart=this._indexStart,t._link=this._link,t._index=this._index,t._offsets=this._offsets,t._deletedCount=this._deletedCount,t}}W.ELEMENTS_PER_RECORD=h,W.BYTES_PER_RECORD=W.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT;const H=z.getLogger("esri.views.2d.engine.webgl.AttributeStoreView"),J=P(L,H);class Q{constructor(t,e,s){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:i,pixelType:r,textureOnly:n}=t,a=F(r);this.shared=s,this.pixelType=r,this.size=e,this.textureOnly=n,n||(this.data=new a(S(i))),this._resetRange()}destroy(){b(this._texture,(t=>t.dispose()));for(const t in this._fbos)b(this._fbos[t],(e=>{"0"===t&&e.detachColorTexture(),e.dispose()})),this._fbos[t]=null;this._texture=null}get _textureDesc(){return{target:K.TEXTURE_2D,wrapMode:v.CLAMP_TO_EDGE,pixelFormat:j.RGBA,dataType:this.pixelType,samplingMode:I.NEAREST,width:this.size,height:this.size}}setData(t,e,s){const i=A(t),r=S(this.data),n=i*this.texelSize+e;!r||n>=r.length||(r[n]=s,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i))}getData(t,e){if(y(this.data))return null;const s=A(t)*this.texelSize+e;return!this.data||s>=this.data.length?null:this.data[s]}getTexture(t){return w(this._texture,(()=>this._initTexture(t)))}getFBO(t,e=0){if(y(this._fbos[e])){const s={colorTarget:Y.TEXTURE,depthStencilTarget:V.NONE},i=0===e?this.getTexture(t):this._textureDesc;this._fbos[e]=new G(t,s,i)}return this._fbos[e]}get locked(){return!(this.pixelType!==B.UNSIGNED_BYTE||!this.shared||this.textureOnly||!O("esri-atomics")||!this.data)&&1===Atomics.load(this.data,0)}get hasDirty(){const t=this.dirtyStart;return this.dirtyEnd>=t}updateTexture(t,e){if(!this.locked){try{const e=this.dirtyStart,s=this.dirtyEnd;if(!this.hasDirty)return;this._resetRange();const i=S(this.data).buffer,r=this.getTexture(t),n=4,a=(e-e%this.size)/this.size,h=(s-s%this.size)/this.size,o=a,d=this.size,_=h,u=a*this.size*n,c=(d+_*this.size)*n-u,l=F(this.pixelType),E=new l(i,u*l.BYTES_PER_ELEMENT,c),x=this.size,p=_-o+1;if(p>this.size)return void H.error(new M("mapview-webgl","Out-of-bounds index when updating AttributeData"));r.updateData(0,0,o,x,p,E)}catch(t){}e()}}update(t){const{data:e,start:s,end:i}=t;if(m(e)&&m(this.data)){const i=this.data,r=s*this.texelSize;for(let s=0;s<e.length;s++){const n=1<<s%this.texelSize;t.layout&n&&(i[r+s]=e[s])}}this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,i)}resize(t,e){const s=this.size;if(this.size=e,this.textureOnly)return void(s!==this.size&&(this._lastTexture=this._texture,this._texture=null));const i=F(this.pixelType);this.destroy(),this.data=new i(S(t.buffer))}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(t){const e=new q(t,this._textureDesc,w(this.data,void 0));if(m(this._lastTexture)&&this._fbos[0]){const s=this._lastTexture.descriptor.width,i=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,n=this._lastTexture.descriptor.pixelFormat,a=this.getFBO(t),h=U(r),o=new(F(r))(new ArrayBuffer(s*i*h*this.texelSize)),d=t.getBoundFramebufferObject(),{x:_,y:u,width:c,height:l}=t.getViewport();t.bindFramebuffer(a),a.readPixels(0,0,s,i,n,r,o),e.updateData(0,0,0,2*s,i/2,o),t.setViewport(_,u,c,l),t.bindFramebuffer(d)}return this.destroy(),this._texture=e,this._texture}}class tt{constructor(t){this._onUpdate=t,this._initialized=!1,this._forceNextUpload=!1,this._locked=!1}initialize(t){const{blocks:e,shared:s,size:i}=t;if(this.shared=s,this.size=i,J("Initializing AttributeStoreView",t),y(this._data))this._data=k(e,(t=>new Q(t,i,s)));else for(let t=0;t<this._data.length;t++){const r=this._data[t],n=e[t];m(n)&&(y(r)?this._data[t]=new Q(n,i,s):r.resize(n,i))}this._initialized=!0}destroy(){b(this._data,(t=>k(t,(t=>t.destroy())))),b(this._defaultTexture,(t=>t.dispose()))}isEmpty(){const t=this._data;return y(t)}isUpdating(){const t=m(this._pendingAttributeUpdate),e=t;return O("esri-2d-log-updating")&&console.log(`Updating AttributeStoreView ${e}\n  -> hasPendingUpdate ${t}`),e}getBlock(t){return y(this._data)?null:this._data[t]}setLabelMinZoom(t,e){this.setData(t,0,1,e)}getLabelMinZoom(t){return this.getData(t,0,1,255)}getFilterFlags(t){return this.getData(t,0,0,0)}getVVSize(t){return this.getData(t,o,0,0)}getData(t,e,s,i){if(!this._data)return 0;const r=S(this._data)[e];if(y(r))return 0;const n=r.getData(t,s);return m(n)?n:i}setData(t,e,s,i){const r=S(this._data)[e];S(r).setData(t,s,i)}lockTextureUpload(){this._locked=!0}unlockTextureUpload(){this._locked=!1}forceTextureUpload(){this._forceNextUpload=!0}async requestUpdate(t){if(this._pendingAttributeUpdate)return void H.error(new M("mapview-webgl","Tried to update attribute data with a pending update"));const e=N();return J("AttributeStoreView Update Requested",t),this._pendingAttributeUpdate={data:t,resolver:e},this._onUpdate(),e.promise}update(){if(this._initialized&&m(this._pendingAttributeUpdate)){O("esri-2d-update-debug")&&console.debug("AttributeStoreView::update");const{data:t,resolver:e}=this._pendingAttributeUpdate,s=S(this._data);for(let e=0;e<t.blocks.length;e++){const i=t.blocks[e],r=s[e];b(r,(t=>b(i,(s=>{J(`Updating block ${e}`,s),t.update(s)}))))}this._pendingAttributeUpdate=null,e(),this._onUpdate()}}bindTextures(t,e=!0){const s=this._getDefaultTexture(t);if(!this._initialized)return t.bindTexture(s,d),void(e&&(t.bindTexture(s,_),t.bindTexture(s,u),t.bindTexture(s,c),t.bindTexture(s,l),t.bindTexture(s,E),t.bindTexture(s,x)));const i=S(this._data);this._locked&&!this._forceNextUpload||(C(i,(e=>e.updateTexture(t,(()=>this._onUpdate())))),this._forceNextUpload=!1),t.bindTexture(D(i[p],s,(e=>e.getTexture(t))),d),e&&(t.bindTexture(D(i[f],s,(e=>e.getTexture(t))),x),t.bindTexture(D(i[R],s,(e=>e.getTexture(t))),_),t.bindTexture(D(i[o],s,(e=>e.getTexture(t))),u),t.bindTexture(D(i[T],s,(e=>e.getTexture(t))),c),t.bindTexture(D(i[l],s,(e=>e.getTexture(t))),l),t.bindTexture(D(i[E],s,(e=>e.getTexture(t))),E))}_getDefaultTexture(t){if(y(this._defaultTexture)){const e={wrapMode:v.CLAMP_TO_EDGE,pixelFormat:j.RGBA,dataType:B.UNSIGNED_BYTE,samplingMode:I.NEAREST,width:1,height:1};this._defaultTexture=new q(t,e,new Uint8Array(4))}return this._defaultTexture}}export{tt as A,Z as D,$ as W};
