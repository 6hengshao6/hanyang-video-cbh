/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{c as t}from"./colorUtils2.js";import e from"../core/Error.js";import{clone as s}from"../core/lang.js";import{_ as n}from"./tslib.es6.js";import{i as r,a as o}from"./maybe.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import"./typedArrayUtil.js";import{subclass as a}from"../core/accessorSupport/decorators/subclass.js";import"./Logger.js";import{JSONSupport as u}from"../core/JSONSupport.js";import{cast as l}from"../core/accessorSupport/decorators/cast.js";import c from"../layers/support/PixelBlock.js";import p from"../layers/support/RasterInfo.js";import{k as m,s as h}from"./RasterSymbolizer.js";import{e as f}from"./enumeration.js";import{J as d}from"./jsonMap.js";import{i as g,o as y,M as w,N as b,p as x,q as v,t as A,v as F,l as I,w as P,x as R}from"./vectorFieldUtils.js";import{r as N}from"./reader.js";import{b as T,d as B,e as k,c as j,f as S}from"./colorRampUtils.js";import{f as C,t as M}from"./colorRamps.js";import{w as _}from"./writer.js";import{convolutionKernel as E,localTrigonometricOperation as D,localLogicalOperation as G,localConditionalOperation as z,localOperators as O}from"../layers/support/rasterFunctionConstants.js";import{g as V}from"./pixelRangeUtils.js";import{N as U}from"./mathUtils.js";import{g as L,c as W,s as q,f as H}from"./stretchUtils.js";let $=class extends u{constructor(){super(...arguments),this.raster=void 0}};n([i({json:{write:!0}})],$.prototype,"raster",void 0),$=n([a("esri.layers.support.rasterFunctions.AspectFunctionArguments")],$);const J=$;var K;let Z=K=class extends J{clone(){return new K({raster:this.raster})}};Z=K=n([a("esri.layers.support.rasterFunctions.AspectFunctionArguments")],Z);const X=Z;let Q=class extends u{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:s}=t;let n=s.rasters||s.raster&&[s.raster];for(;n?.length;){e.unshift(...n);const t=[];for(let e=0;e<n.length;e++){const{parameters:s}=n[e],r=s.rasters||s.raster&&[s.raster];r?.length&&t.push(...r)}n=t}for(let t=e.length-1;t>=0;t--)e[t].isNoopProcess&&e.splice(t,1);let r=!1;for(let t=0;t<e.length;t++){const s=e[t];s.id=e.length-t-1;const{rasters:n}=s.parameters;r=r||null!=n&&n.length>1}const o=e.some((({name:t})=>"Slope"===t||"Aspect"===t));return{functions:e,hasBranches:r,hasSurfaceFunction:o}}bind(t,e=!1,s=-1){this.id=s+1;const n=this._getRasterValues();let o=!0;for(let s=0;s<n.length;s++){const i=n[s];if(r(i)&&this._isRasterFunctionValue(i)){const n=i.bind(t,e,this.id+s);if(!n.success)return this._bindingResult=n,n;o=o&&n.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.supportsGPU=o&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),s=0===e.length?t.pixelBlocks??t.primaryPixelBlocks:e.map((e=>this._readRasterValue(e,t)));return this._processPixels({...t,pixelBlocks:s})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const e=t.map((t=>t.processInputBandIds()[0]));this.rawInputBandIds=e,this.isInputBandIdsSwizzled=this.rawInputBandIds.some(((t,e)=>t!==e));const s=t.filter((t=>"ExtractBand"===t.functionName));return s.length&&s.forEach(((t,e)=>{t.isInputBandIdsSwizzled=!0,t.swizzledBandSelection=[e,e,e]})),this.rawInputBandIds}const s=t[0];if(s){if(e=s.processInputBandIds(),s.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:t}=this.sourceRasterInfos[0];for(let s=0;s<t;s++)e.push(s)}const n=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=n.some(((t,e)=>t!==e)),this.rawInputBandIds=n,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:s}=this.functionArguments;return s&&Array.isArray(s)&&s.length?(t.rasters=s.map((t=>this._isRasterFunctionValue(t)?t.getWebGLProcessorDefinition():"number"==typeof t?{name:"Constant",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:t},pixelType:"f32",id:-1,isNoopProcess:!1})),t.rasters.some((t=>null!=t))||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}_getOutputPixelType(t){return"unknown"===this.outputPixelType?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_isOutputRoundingNeeded(){const{outputPixelType:t}=this;return(t?.startsWith("u")||t?.startsWith("s"))??!1}_getRasterValues(){const{rasterArgumentNames:t}=this;return"rasters"===t[0]?this.functionArguments.rasters??[]:t.map((t=>this.functionArguments[t]))}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:s,rasterIds:n}=t;if(0===e.length)return s;const r=e.map((t=>t&&"object"==typeof t&&"bind"in t&&t.rasterInfo?t.rasterInfo:"string"==typeof t&&n.includes(t)?s[n.indexOf(t)]:"number"!=typeof t?s[0]:void 0)),o=r.find((t=>t))??s[0];return r.forEach(((t,e)=>{void 0===t&&(r[e]=o)})),r}_getPrimaryRasterId(t){return t?.url}_getPrimaryRasters(t,e=[],s=[]){for(let n=0;n<t.sourceRasters.length;n++){const r=t.sourceRasters[n];if("number"!=typeof r)if("bind"in r)this._getPrimaryRasters(r,e,s);else{const t=r,n=this._getPrimaryRasterId(t);if(null==n)continue;s.includes(n)||(this.mainPrimaryRasterId===n?(e.unshift(t),s.unshift(n)):(e.push(t),s.push(n)))}}}_isRasterFunctionValue(t){return null!=t&&"object"==typeof t&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:s}=e;if(o(t)||"$$"===t){const t=s[0];return o(t)?null:t.clone()}if("string"==typeof t){const n=e.primaryRasterIds.indexOf(t);return-1===n?null:s[n]}if("number"==typeof t){const e=s[0];if(o(e))return null;const{width:n,height:r,pixelType:i,mask:a}=e,u=a?new Uint8Array(a):null,l=new Float32Array(n*r);l.fill(t);const p=this.sourceRasterInfos[0].bandCount,m=new Array(p).fill(l);return new c({width:n,height:r,pixelType:i,pixels:m,mask:u})}return t.process(e)}};n([i({json:{write:!0}})],Q.prototype,"functionName",void 0),n([i({json:{write:!0}})],Q.prototype,"functionArguments",void 0),n([i()],Q.prototype,"rasterArgumentNames",void 0),n([i({json:{write:!0}}),l((t=>t?.toLowerCase()))],Q.prototype,"outputPixelType",void 0),n([i({json:{write:!0}})],Q.prototype,"mainPrimaryRasterId",void 0),n([i()],Q.prototype,"sourceRasters",void 0),n([i({type:[p],json:{write:!0}})],Q.prototype,"sourceRasterInfos",void 0),n([i({json:{write:!0}})],Q.prototype,"rasterInfo",void 0),n([i({json:{write:!0}})],Q.prototype,"readingBufferSize",void 0),n([i({json:{write:!0}})],Q.prototype,"id",void 0),n([i()],Q.prototype,"isNoopProcess",void 0),n([i()],Q.prototype,"supportsGPU",null),n([i()],Q.prototype,"rawInputBandIds",void 0),n([i()],Q.prototype,"isInputBandIdsSwizzled",void 0),n([i()],Q.prototype,"swizzledBandSelection",void 0),n([i()],Q.prototype,"isBranch",void 0),n([i()],Q.prototype,"flatWebGLFunctionChain",null),n([i()],Q.prototype,"_bindingResult",void 0),Q=n([a("esri.layers.support.rasterFunctions.BaseRasterFunction")],Q);const Y=Q;let tt=class extends Y{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.histograms=null,e.colormap=null,e.attributeTable=null,e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(o(e))return null;const{extent:s,primaryPixelSizes:n}=t,r=n?.[0],i=o(r)?s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1}:r;return m(e,{resolution:i})}};n([i({json:{write:!0,name:"rasterFunction"}})],tt.prototype,"functionName",void 0),n([i({type:X,json:{write:!0,name:"rasterFunctionArguments"}})],tt.prototype,"functionArguments",void 0),n([i()],tt.prototype,"rasterArgumentNames",void 0),n([i({json:{write:!0}})],tt.prototype,"isGCS",void 0),tt=n([a("esri.layers.support.rasterFunctions.AspectFunction")],tt);const et=tt,st=new Set(["+","-","*","/","(",")"]);function nt(t,e,s,n){if("number"==typeof s&&"number"==typeof n)return s+n;let r;if("number"==typeof s){r=n.length;const t=s;(s=new Float32Array(r)).fill(t)}else if(r=s.length,n.constructor===Number){const t=n;(n=new Float32Array(r)).fill(t)}const o=new Float32Array(r);switch(e){case"+":for(let e=0;e<r;e++)(null==t||t[e])&&(o[e]=s[e]+n[e]);break;case"-":for(let e=0;e<r;e++)(null==t||t[e])&&(o[e]=s[e]-n[e]);break;case"*":for(let e=0;e<r;e++)(null==t||t[e])&&(o[e]=s[e]*n[e]);break;case"/":for(let e=0;e<r;e++)(null==t||t[e])&&n[e]&&(o[e]=s[e]/n[e]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return o}function rt(t,e){t.splice(e,1);let s=0,n=0;do{s=0,n=0;for(let e=0;e<t.length;e++)if("("===t[e])s=e;else if(")"===t[e]){n=e;break}n===s+1&&t.splice(s,2)}while(n===s+1);return t}function ot(t){if(1===t.length)return{opIndex:0,numIndex:0};let e=0,s=0;for(let n=0;n<t.length;n++)if("("===t[n])e=n;else if(")"===t[n]){s=n;break}const n=0===s?t:t.slice(e+1,s);let r=-1;for(let t=0;t<n.length;t++)if("*"===n[t]||"/"===n[t]){r=t;break}if(r>-1)s>0&&(r+=e+1);else{for(let t=0;t<n.length;t++)if("+"===n[t]||"-"===n[t]){r=t;break}s>0&&(r+=e+1)}let o=0;for(let e=0;e<r;e++)"("===t[e]&&o++;return{opIndex:r,numIndex:r-o}}const it=new d({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function at(t){const e=new Float32Array(9);return e[3*t[0]]=1,e[3*t[1]+1]=1,e[3*t[2]+2]=1,e}function ut(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=e[o],n=s[o],i=t+n;i&&(r[o]=(t-n)/i)}return[r]}var lt;let ct=lt=class extends J{constructor(){super(...arguments),this.method="custom"}clone(){return new lt({method:this.method,bandIndexes:this.bandIndexes,raster:s(this.raster)})}};n([i({json:{type:String,write:!0}})],ct.prototype,"bandIndexes",void 0),n([f(it)],ct.prototype,"method",void 0),ct=lt=n([a("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],ct);const pt=ct,mt=new Set(["vari","mtvi2","rtvi-core","evi"]);let ht=class extends Y{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0],e=t.clone();return e.pixelType=this.outputPixelType,e.statistics=null,e.histograms=null,e.bandCount="sultan"===this.functionArguments.method?t.bandCount:1,this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(o(e))return e;const{method:s,bandIndexes:n}=this.functionArguments;return function(t,e){if(!g(t))return t;const{equation:s,method:n}=e,o=e.bandIndexes.map((t=>t-1)),{pixels:i,mask:a}=t;let u;switch(n){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":u=ut(a,i[o[0]],i[o[1]]);break;case"ndwi":u=ut(a,i[o[1]],i[o[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":u=function(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=e[o],n=s[o];n&&(r[o]=t/n)}return[r]}(a,i[o[0]],i[o[1]]);break;case"ci-g":case"ci-re":u=function(t,e,s){const n=e.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=e[o],n=s[o];n&&(r[o]=t/n-1)}return[r]}(a,i[o[0]],i[o[1]]);break;case"savi":u=function(t,e,s,n){const r=s.length,o=new Float32Array(r);for(let i=0;i<r;i++)if(null==t||t[i]){const t=s[i],r=e[i],a=r+t+n;a&&(o[i]=(r-t)/a*(1+n))}return[o]}(a,i[o[0]],i[o[1]],o[2]+1);break;case"tsavi":u=function(t,e,s,n,r,o){const i=s.length,a=new Float32Array(i),u=-r*n+o*(1+n*n);for(let o=0;o<i;o++)if(null==t||t[o]){const t=s[o],i=e[o],l=r*i+t+u;l&&(a[o]=n*(i-n*t-r)/l)}return[a]}(a,i[o[0]],i[o[1]],o[2]+1,o[3]+1,o[4]+1);break;case"msavi":u=function(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=s[o],n=e[o];r[o]=.5*(2*(n+1)-Math.sqrt((2*n+1)**2-8*(n-t)))}return[r]}(a,i[o[0]],i[o[1]]);break;case"gemi":u=function(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o]){const t=s[o],n=e[o];if(1!==t){const e=(2*(n*n-t*t)+1.5*n+.5*t)/(n+t+.5);r[o]=e*(1-.25*e)-(t-.125)/(1-t)}}return[r]}(a,i[o[0]],i[o[1]]);break;case"pvi":u=function(t,e,s,n,r){const o=s.length,i=new Float32Array(o),a=Math.sqrt(1+n*n);for(let u=0;u<o;u++)if(null==t||t[u]){const t=s[u],o=e[u];i[u]=(o-n*t-r)/a}return[i]}(a,i[o[0]],i[o[1]],o[2]+1,o[3]+1);break;case"gvitm":u=function(t,e){const[s,n,r,o,i,a]=e,u=s.length,l=new Float32Array(u);for(let e=0;e<u;e++)(null==t||t[e])&&(l[e]=-.2848*s[e]-.2435*n[e]-.5436*r[e]+.7243*o[e]+.084*i[e]-1.18*a[e]);return[l]}(a,[i[o[0]],i[o[1]],i[o[2]],i[o[3]],i[o[4]],i[o[5]]]);break;case"sultan":u=function(t,e){const[s,,n,r,o,i]=e,a=s.length,u=new Float32Array(a),l=new Float32Array(a),c=new Float32Array(a);for(let e=0;e<a;e++)(null==t||t[e])&&(u[e]=i[e]?o[e]/i[e]*100:0,l[e]=s[e]?o[e]/s[e]*100:0,c[e]=r[e]?n[e]/r[e]*(o[e]/r[e])*100:0);return[u,l,c]}(a,[i[o[0]],i[o[1]],i[o[2]],i[o[3]],i[o[4]],i[o[5]]]);break;case"vari":u=function(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=s[e],o=n[e],a=o+t-r[e];a&&(i[e]=(o-t)/a)}return[i]}(a,[i[o[0]],i[o[1]],i[o[2]]]);break;case"mtvi2":u=function(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=s[e],o=n[e],a=r[e],u=Math.sqrt((2*t+1)**2-6*t-5*Math.sqrt(o)-.5);i[e]=1.5*(1.2*(t-a)-2.5*(o-a))*u}return[i]}(a,[i[o[0]],i[o[1]],i[o[2]]]);break;case"rtvi-core":u=function(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=s[e],o=n[e],a=r[e];i[e]=100*(t-o)-10*(t-a)}return[i]}(a,[i[o[0]],i[o[1]],i[o[2]]]);break;case"evi":u=function(t,e){const[s,n,r]=e,o=s.length,i=new Float32Array(o);for(let e=0;e<o;e++)if(null==t||t[e])for(e=0;e<o;e++){const t=s[e],o=n[e],a=t+6*o-7.5*r[e]+1;a&&(i[e]=2.5*(t-o)/a)}return[i]}(a,[i[o[0]],i[o[1]],i[o[2]]]);break;case"wndwi":u=function(t,e,s=.5){const[n,r,o]=e,i=r.length,a=new Float32Array(i);for(let e=0;e<i;e++)if(null==t||t[e])for(e=0;e<i;e++){const t=n[e],i=r[e],u=o[e],l=t+s*i+(1-s)*u;l&&(a[e]=(t-s*i-(1-s)*u)/l)}return[a]}(a,[i[o[0]],i[o[1]],i[o[2]]],o[3]?o[3]+1:.5);break;case"bai":u=function(t,e,s){const n=s.length,r=new Float32Array(n);for(let o=0;o<n;o++)if(null==t||t[o])for(o=0;o<n;o++){const t=(.1-e[o])**2+(.06-s[o])**2;t&&(r[o]=1/t)}return[r]}(a,i[o[0]],i[o[1]]);break;case"custom":u=function(t,e,s){let n,{ops:r,nums:o}=function(t,e){(t=t.replace(/ /g,"")).startsWith("-")&&(t="0"+t),t.startsWith("+")&&(t=t.slice(1,t.length));const s=t.split(""),n=[],r=[];let o="";for(let t=0;t<s.length;t++){const i=s[t];if(st.has(i))""!==o&&r.push(parseFloat(o)),n.push(i),o="";else{if("b"===i.toLowerCase()){t++,o=i.concat(s[t]),r.push(e[parseInt(o[1],10)-1]),o="";continue}o=o.concat(i),t===s.length-1&&r.push(parseFloat(o))}}return{ops:n,nums:r}}(s,e);if(0===r.length){const t=1===o.length?o[0]:e[0];if(t instanceof Float32Array)return[t];const s=new Float32Array(e[0].length);return"number"==typeof t?s.fill(t):s.set(t),[s]}for(;r.length>0;){const{numIndex:e,opIndex:s}=ot(r);if(n=nt(t,r[s],o[e],o[e+1]),1===r.length)break;r=rt(r,s),o.splice(e,2,n)}return[n]}(a,i,s);break;default:return t}const l=r(a)?new Uint8Array(a.length):null;r(a)&&r(l)&&l.set(a);const p=new c({width:t.width,height:t.height,pixelType:"f32",pixels:u,mask:l});return p.updateStatistics(),p}(e,{method:s,bandIndexes:n.split(" ").map((t=>parseFloat(t))),equation:n})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1));2===t.length&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let s,n;const r=new Float32Array(3),{method:o}=this.functionArguments;switch(o){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=at([e[0],e[1],0]),n="ndxi";break;case"ndwi":s=at([e[1],e[0],0]),n="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=at([e[0],e[1],0]),n="sr";break;case"ci-g":case"ci-re":s=at([e[0],e[1],0]),n="ci";break;case"savi":s=at([e[0],e[1],0]),n="savi",r[0]=t[2]+1;break;case"tsavi":s=at([e[0],e[1],0]),n="tsavi",r[0]=t[2]+1,r[1]=t[3]+1,r[2]=t[4]+1;break;case"msavi":s=at([e[0],e[1],0]),n="msavi";break;case"gemi":s=at([e[0],e[1],0]),n="gemi";break;case"pvi":s=at([e[0],e[1],0]),n="tsavi",r[0]=t[2]+1,r[1]=t[3]+1;break;case"vari":s=at([e[0],e[1],e[2]]),n="vari";break;case"mtvi2":s=at([e[0],e[1],e[2]]),n="mtvi2";break;case"rtvi-core":s=at([e[0],e[1],e[2]]),n="rtvicore";break;case"evi":s=at([e[0],e[1],e[2]]),n="evi";break;case"wndwi":s=at([e[0],e[1],0]),n="wndwi",r[0]=t[3]?t[3]+1:.5;break;case"bai":s=at([e[1],e[0],0]),n="bai";break;default:s=at([0,1,2]),n="custom"}return{bandIndexMat3:s,indexType:n,adjustments:r}}_getInputBandIds(t){if("custom"===this.functionArguments.method)return t;const e=this.functionArguments.bandIndexes.split(" ").map((t=>parseFloat(t)-1)),s=t.length,n=e.map((t=>t>=s?s-1:t)),r=mt.has(this.functionArguments.method)?3:2,o=n.slice(0,r).map((e=>t[e]));return 2===o.length&&o.push(0),o}};n([i({json:{write:!0,name:"rasterFunction"}})],ht.prototype,"functionName",void 0),n([i({type:pt,json:{write:!0,name:"rasterFunctionArguments"}})],ht.prototype,"functionArguments",void 0),n([i()],ht.prototype,"rasterArgumentNames",void 0),ht=n([a("esri.layers.support.rasterFunctions.BandArithmeticFunction")],ht);const ft=ht;var dt;let gt=dt=class extends J{castColormapName(t){if(!t)return null;const e=t.toLowerCase();return B.includes(e)?e:null}readColorRamp(t){return C(t)}readColorRampName(t,e){if(!t)return null;const s=T.jsonValues.find((e=>e.toLowerCase()===t.toLowerCase()));return s?T.fromJSON(s):null}clone(){return new dt({colormap:s(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};n([i({type:[[Number]],json:{write:!0}})],gt.prototype,"colormap",void 0),n([i({type:String,json:{write:!0}})],gt.prototype,"colormapName",void 0),n([l("colormapName")],gt.prototype,"castColormapName",null),n([i({types:M,json:{write:!0}})],gt.prototype,"colorRamp",void 0),n([N("colorRamp")],gt.prototype,"readColorRamp",null),n([i({type:T.apiValues,json:{type:T.jsonValues,write:T.write}})],gt.prototype,"colorRampName",void 0),n([N("colorRampName")],gt.prototype,"readColorRampName",null),gt=dt=n([a("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],gt);const yt=gt,wt=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],bt=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function xt(t,e){const s=[],n=[];for(let e=0;e<t.length-1;e++)s.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:t[e].slice(1),toColor:t[e+1].slice(1)}),n.push(t[e+1][0]-t[e][0]);const r=t[t.length-1][0];return k({type:"multipart",colorRamps:s},{numColors:r,weights:e=e??n})}let vt=class extends Y{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:s,colorRamp:n,colorRampName:r}=this.functionArguments;if(!e?.length)if(n)e=j(n,{interpolateAlpha:!0});else if(r){const t=S(r);t&&(e=j(t))}else s&&(e=function(t){let e;switch(t){case"elevation":e=xt([[0,0,191,191],[51,0,255,0],[102,255,255,0],[153,255,127,0],[204,191,127,63],[256,20,20,20]]);break;case"gray":e=k({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]});break;case"hillshade":e=xt([[0,38,54,41],[69,79,90,82],[131,156,156,156],[256,253,241,253]],[.268,.238,.495]);break;case"ndvi":e=wt;break;case"ndvi2":e=function(){const t=xt([[0,255,255,255],[70,0,0,255],[80,205,193,173],[100,150,150,150],[110,120,100,51],[130,120,200,100],[140,28,144,3],[160,6,55,0],[180,10,30,25],[201,6,27,7]]);for(let e=t.length;e<256;e++)t.push([6,27,7]);return t}();break;case"ndvi3":e=bt;break;case"random":e=function(){const t=[];for(let e=0;e<256;e++){const e=[];for(let t=0;t<3;t++)e.push(Math.round(255*Math.random()));t.push(e)}return t}()}return e?(e=e.map(((t,e)=>[e,...t])),e):null}(s));if(!e?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};this.outputPixelType=this._getOutputPixelType("u8");const o=t.clone();return o.pixelType=this.outputPixelType,o.colormap=e,o.bandCount=1,this.rasterInfo=o,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};n([i({json:{write:!0,name:"rasterFunction"}})],vt.prototype,"functionName",void 0),n([i({type:yt,json:{write:!0,name:"rasterFunctionArguments"}})],vt.prototype,"functionArguments",void 0),n([i()],vt.prototype,"rasterArgumentNames",void 0),n([i()],vt.prototype,"isNoopProcess",void 0),n([i({json:{write:!0}})],vt.prototype,"indexedColormap",void 0),vt=n([a("esri.layers.support.rasterFunctions.ColormapFunction")],vt);const At=vt;var Ft;let It=Ft=class extends J{constructor(){super(...arguments),this.rasters=[]}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new Ft({rasters:s(this.rasters)})}};n([i({json:{write:!0}})],It.prototype,"rasters",void 0),n([_("rasters")],It.prototype,"writeRasters",null),It=Ft=n([a("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],It);const Pt=It;let Rt=class extends Y{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();if(s.attributeTable=null,s.colormap=null,s.pixelType=this.outputPixelType,s.bandCount=t.map((({bandCount:t})=>t)).reduce(((t,e)=>t+e)),t.every((({statistics:t})=>r(t)&&t.length))){const e=[];t.forEach((({statistics:t})=>r(t)&&e.push(...t))),s.statistics=e}if(t.every((({histograms:t})=>r(t)&&t.length))){const e=[];t.forEach((({histograms:t})=>r(t)&&e.push(...t))),s.histograms=e}return s.bandCount>1&&(s.colormap=null,s.attributeTable=null),this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;if(!e)return null;const s=e?.[0];return o(s)?null:y(e)}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};n([i({json:{write:!0,name:"rasterFunction"}})],Rt.prototype,"functionName",void 0),n([i({type:Pt,json:{write:!0,name:"rasterFunctionArguments"}})],Rt.prototype,"functionArguments",void 0),n([i()],Rt.prototype,"rasterArgumentNames",void 0),Rt=n([a("esri.layers.support.rasterFunctions.CompositeBandFunction")],Rt);const Nt=Rt,Tt=new Map;function Bt(t,e,s,n,r,o,i){const a=new Float32Array(e*s),u=o.length,l=i?0:n,c=i?n:0,p=i?1:e;for(let i=l;i<s-l;i++){const s=i*e;for(let i=c;i<e-c;i++){if(r&&!r[s+i])continue;let e=0;for(let r=0;r<u;r++)e+=t[s+i+(r-n)*p]*o[r];a[s+i]=e}}return a}function kt(t,e,s,n,r,o,i){const a=new Float32Array(e*s),u=Math.floor(n/2),l=Math.floor(r/2);for(let c=u;c<s-u;c++){const s=c*e;for(let c=l;c<e-l;c++){if(o&&!o[s+c])continue;let p=0;for(let o=0;o<n;o++)for(let n=0;n<r;n++)p+=t[s+c+(o-u)*e+n-l]*i[o*r+n];a[s+c]=p}}return a}function jt(t,e,s,n,r){const o=Math.floor(n/2);for(let n=0;n<o;n++)for(let o=0;o<e;o++)t[n*e+o]=t[(r-1-n)*e+o],t[(s-1-n)*e+o]=t[(s-r+n)*e+o];const i=Math.floor(r/2);for(let n=0;n<s;n++){const s=n*e;for(let n=0;n<i;n++)t[s+n]=t[s+r-1-n],t[s+e-n-1]=t[s+e+n-r]}}var St;Tt.set(E.none,[0,0,0,0,1,0,0,0,0]),Tt.set(E.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),Tt.set(E.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),Tt.set(E.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),Tt.set(E.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),Tt.set(E.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),Tt.set(E.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),Tt.set(E.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),Tt.set(E.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),Tt.set(E.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),Tt.set(E.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),Tt.set(E.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),Tt.set(E.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),Tt.set(E.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),Tt.set(E.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),Tt.set(E.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),Tt.set(E.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),Tt.set(E.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),Tt.set(E.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),Tt.set(E.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),Tt.set(E.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),Tt.set(E.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),Tt.set(E.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);let Ct=St=class extends J{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(t){this._set("convolutionType",t);const e=Tt.get(t);if(!e||t===E.userDefined||t===E.none)return;const s=Math.sqrt(e.length);this._set("kernel",e),this._set("cols",s),this._set("rows",s)}clone(){return new St({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:s(this.raster)})}};n([i({json:{type:Number,write:!0}})],Ct.prototype,"rows",void 0),n([i({json:{type:Number,write:!0}})],Ct.prototype,"cols",void 0),n([i({json:{name:"type",type:Number,write:!0}})],Ct.prototype,"convolutionType",null),n([i({json:{type:[Number],write:!0}})],Ct.prototype,"kernel",void 0),Ct=St=n([a("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],Ct);const Mt=Ct;let _t=class extends Y{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:s,kernel:n}=this.functionArguments;if(!Object.values(E).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==E.none&&e*s!==n.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const r=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(r.pixelType);const o=r.clone();o.pixelType=this.outputPixelType;const i=[E.none,E.sharpen,E.sharpen2,E.sharpening3x3,E.sharpening5x5];return"u8"===this.outputPixelType||i.includes(t)||(o.statistics=null,o.histograms=null),o.colormap=null,o.attributeTable=null,this.rasterInfo=o,{success:!0,supportsGPU:n.length<=25}}_processPixels(t){const e=t.pixelBlocks?.[0];if(o(e)||this.functionArguments.convolutionType===E.none)return e;let{kernel:s,rows:n,cols:r}=this.functionArguments;const i=s.reduce(((t,e)=>t+e));return 0!==i&&1!==i&&(s=s.map((t=>t/i))),function(t,e){const s=function(t){const e=Math.sqrt(t.length),s=t.slice(0,e),n=[1];for(let s=1;s<e;s++){let r=null;for(let n=0;n<e;n++){const o=t[n+s*e],i=t[n];if(null==r)if(0===i){if(o)return{separable:!1,row:null,col:null}}else r=o/i;else if(o/i!==r)return{separable:!1,row:null,col:null}}if(null==r)return{separable:!1,row:null,col:null};n.push(r)}return{separable:!0,row:s,col:n}}(e.kernel),n=!1!==e.mirrorEdges,r=s.separable?function(t,e,s,n=!0){const{pixels:r,width:o,height:i,pixelType:a,mask:u}=t,l=r.length,p=[],m=e.length,h=s.length,f=Math.floor(m/2),d=Math.floor(h/2);for(let t=0;t<l;t++){let a=Bt(r[t],o,i,f,u,e,!0);a=Bt(a,o,i,d,u,s,!1),n&&jt(a,o,i,m,h),p.push(a)}return new c({width:o,height:i,pixelType:a,pixels:p,mask:u})}(t,s.row,s.col,n):function(t,e,s=!0){const{pixels:n,width:r,height:o,pixelType:i,mask:a}=t,u=n.length,l=[],{kernel:p,rows:m,cols:h}=e;for(let t=0;t<u;t++){const e=kt(n[t],r,o,m,h,a,p);s&&jt(e,r,o,m,h),l.push(e)}return new c({width:r,height:o,pixelType:i,pixels:l,mask:a})}(t,e,n),{outputPixelType:o}=e;return o&&r.clamp(o),r}(e,{kernel:s,rows:n,cols:r,outputPixelType:this.outputPixelType})}_getWebGLParameters(){let{kernel:t}=this.functionArguments;const e=t.reduce(((t,e)=>t+e));0!==e&&1!==e&&(t=t.map((t=>t/e)));const s=new Float32Array(25);return s.set(t),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:s,clampRange:V(this.outputPixelType)}}};n([i({json:{write:!0,name:"rasterFunction"}})],_t.prototype,"functionName",void 0),n([i({type:Mt,json:{write:!0,name:"rasterFunctionArguments"}})],_t.prototype,"functionArguments",void 0),n([i()],_t.prototype,"rasterArgumentNames",void 0),_t=n([a("esri.layers.support.rasterFunctions.ConvolutionFunction")],_t);const Et=_t;var Dt;let Gt=Dt=class extends J{constructor(){super(...arguments),this.bandIds=[],this.missingBandAction=w.bestMatch}clone(){return new Dt({bandIds:[...this.bandIds],missingBandAction:this.missingBandAction})}};n([i({json:{write:!0}})],Gt.prototype,"bandIds",void 0),n([i({json:{write:!0}})],Gt.prototype,"missingBandAction",void 0),Gt=Dt=n([a("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],Gt);const zt=Gt;let Ot=class extends Y{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{bandIds:n,missingBandAction:o}=this.functionArguments;if(o===w.fail&&n.some((t=>t<0||t>=s)))return{success:!1,supportsGPU:!1,error:"extract-band-function: invalid bandIds"};this.outputPixelType=this._getOutputPixelType("f32");const i=e.clone();i.pixelType=this.outputPixelType,i.bandCount=n.length;const{statistics:a,histograms:u}=i;return r(a)&&a.length&&(i.statistics=n.map((t=>a[t]||a[a.length-1]))),r(u)&&u.length&&(i.histograms=n.map((t=>u[t]||u[u.length-1]))),this.rasterInfo=i,{success:!0,supportsGPU:i.bandCount<=3}}_processPixels(t){const e=t.pixelBlocks?.[0];if(o(e))return null;const s=e.pixels.length,n=this.functionArguments.bandIds.map((t=>t>=s?s-1:t));return e.extractBands(n)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],0===t.length?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:at(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map((t=>t>=e?e-1:t)).map((e=>t[e]))}};n([i({json:{write:!0,name:"rasterFunction"}})],Ot.prototype,"functionName",void 0),n([i({type:zt,json:{write:!0,name:"rasterFunctionArguments"}})],Ot.prototype,"functionArguments",void 0),n([i()],Ot.prototype,"rasterArgumentNames",void 0),Ot=n([a("esri.layers.support.rasterFunctions.ExtractBandFunction")],Ot);const Vt=Ot;var Ut;let Lt=Ut=class extends J{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(t,e){e.rasters=t.map((t=>"number"==typeof t||"string"==typeof t?t:t.toJSON()))}clone(){return new Ut({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:s(this.rasters)})}};n([i({json:{write:!0}})],Lt.prototype,"operation",void 0),n([i({json:{write:!0}})],Lt.prototype,"rasters",void 0),n([_("rasters")],Lt.prototype,"writeRasters",null),n([i({json:{write:!0}})],Lt.prototype,"processAsMultiband",void 0),Lt=Ut=n([a("esri.layers.support.rasterFunctions.LocalFunctionArguments")],Lt);const Wt=Lt,qt=new Map;function Ht(t){return qt.get(t)}qt.set(D.acos,[0,Math.PI]),qt.set(D.asin,[-Math.PI/2,Math.PI/2]),qt.set(D.atan,[-Math.PI/2,Math.PI/2]),qt.set(D.cos,[-1,1]),qt.set(D.sin,[-1,1]),qt.set(G.booleanAnd,[0,1]),qt.set(G.booleanNot,[0,1]),qt.set(G.booleanOr,[0,1]),qt.set(G.booleanXOr,[0,1]),qt.set(G.equalTo,[0,1]),qt.set(G.notEqual,[0,1]),qt.set(G.greaterThan,[0,1]),qt.set(G.greaterThanEqual,[0,1]),qt.set(G.lessThan,[0,1]),qt.set(G.lessThanEqual,[0,1]),qt.set(G.isNull,[0,1]);const $t=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function Jt(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]+r[t]);return i}function Kt(t,e,s){const[n]=t,r=n.length,o=c.createEmptyBand("f32",r);return o.set(n),o}function Zt(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]-r[t]);return i}function Xt(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]*r[t]);return i}function Qt(t,e,s){const[n]=t,r=n.length,o=c.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=Math.sign(n[t])*Math.floor(Math.abs(n[t])));return o}function Yt(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]/r[t]);return i}function te(t,e,s){return Yt(t,e,"f32")}function ee(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=Math.floor(n[t]/r[t]));return i}function se(t,e,s,n){const r=t[0],o=r.length,i=c.createEmptyBand(s,o);if(n===D.atanh){for(let t=0;t<o;t++)if(e[t]){const s=r[t];Math.abs(s)>=1?e[t]=0:i[t]=Math.atanh(s)}return i}const a=n===D.asin?Math.asin:Math.acos;for(let t=0;t<o;t++)if(e[t]){const s=r[t];Math.abs(s)>1?e[t]=0:i[t]=a(s)}return i}function ne(t,e,s,n){const[r]=t,o=r.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n(r[t]));return i}function re(t,e,s,n){const[r,o]=t,i=r.length,a=c.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(a[t]=n(r[t],o[t]));return a}function oe(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]&r[t]);return i}function ie(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]<<r[t]);return i}function ae(t,e,s){const[n]=t,r=n.length,o=c.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=~n[t]);return o}function ue(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]|r[t]);return i}function le(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]>>r[t]);return i}function ce(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]^r[t]);return i}function pe(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]&&r[t]?1:0);return i}function me(t,e,s){const[n]=t,r=n.length,o=c.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=n[t]?0:1);return o}function he(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]||r[t]?1:0);return i}function fe(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=(n[t]?1:0)^(r[t]?1:0));return i}function de(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]===r[t]?1:0);return i}function ge(t,e,s,n){const[r]=t,o=r.length,i=c.createEmptyBand(s,o),a=n===Math.E;for(let t=0;t<o;t++)e&&!e[t]||(i[t]=a?Math.exp(r[t]):n**r[t]);return i}function ye(t,e,s){return ge(t,e,s,10)}function we(t,e,s){return ge(t,e,s,2)}function be(t,e,s){return ge(t,e,s,Math.E)}function xe(t,e,s,n){const[r]=t,o=r.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(r[t]<=0?e[t]=0:i[t]=n(r[t]));return i}function ve(t,e,s){return xe(t,e,s,Math.log10)}function Ae(t,e,s){return xe(t,e,s,Math.log2)}function Fe(t,e,s){return xe(t,e,s,Math.log)}function Ie(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]>r[t]?1:0);return i}function Pe(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]>=r[t]?1:0);return i}function Re(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]<r[t]?1:0);return i}function Ne(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]<=r[t]?1:0);return i}function Te(t,e,s){const[n]=t,r=n.length,o=c.createEmptyBand(s,r);if(!e)return o;for(let t=0;t<r;t++)o[t]=e[t]?0:1;return o}function Be(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]%r[t]);return i}function ke(t,e,s){const[n]=t,r=n.length,o=c.createEmptyBand(s,r);for(let t=0;t<r;t++)e&&!e[t]||(o[t]=-n[t]);return o}function je(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e&&!e[t]||(i[t]=n[t]===r[t]?0:1);return i}function Se(t,e,s){const[n,r]=t,o=n.length,i=c.createEmptyBand(s,o),a=new Uint8Array(o);for(let t=0;t<o;t++)null!=e&&!e[t]||0!==n[t]||(i[t]=r[t],a[t]=255);return{band:i,mask:a}}function Ce(t,e,s){const[n,r,o]=t,i=n.length,a=c.createEmptyBand(s,i);for(let t=0;t<i;t++)e&&!e[t]||(a[t]=n[t]?r[t]:o[t]);return a}function Me(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=c.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){let e=r[s];for(let r=1;r<n;r++){const n=t[r][s];e<n&&(e=n)}i[s]=e}return i}function _e(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=c.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){let e=r[s];for(let r=1;r<n;r++){const n=t[r][s];e>n&&(e=n)}i[s]=e}return i}function Ee(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=c.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){let e=r[s],o=e;for(let r=1;r<n;r++){const n=t[r][s];o<n?o=n:e>n&&(e=n)}i[s]=o-e}return i}function De(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=c.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){let e=0;for(let r=0;r<n;r++)e+=t[r][s];i[s]=e/n}return i}function Ge(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=c.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s])for(let e=0;e<n;e++){const n=t[e];i[s]+=n[s]}return i}function ze(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=c.createEmptyBand(s,o);for(let s=0;s<o;s++)if(!e||e[s]){const e=new Float32Array(n);let r=0;for(let o=0;o<n;o++){const n=t[o];r+=n[s],e[o]=n[s]}r/=n;let o=0;for(let t=0;t<n;t++)o+=(e[t]-r)**2;i[s]=Math.sqrt(o/n)}return i}function Oe(t,e,s){const n=t.length;if(n<2)return t[0];const r=Math.floor(n/2),[o]=t,i=o.length,a=c.createEmptyBand(s,i),u=new Float32Array(n),l=n%2==1;for(let s=0;s<i;s++)if(!e||e[s]){for(let e=0;e<n;e++)u[e]=t[e][s];u.sort(),a[s]=l?u[r]:(u[r]+u[r-1])/2}return a}function Ve(t,e,s){const[n,r]=t;if(null==r)return n;const o=n.length,i=c.createEmptyBand(s,o);for(let t=0;t<o;t++)e[t]&&(n[t]===r[t]?i[t]=n[t]:e[t]=0);return i}function Ue(t,e,s){const n=t.length;if(n<=2)return Ve(t,e,s);const r=t[0].length,o=c.createEmptyBand(s,r),i=new Map;for(let s=0;s<r;s++)if(!e||e[s]){let e;i.clear();for(let r=0;r<n;r++)e=t[r][s],i.set(e,i.has(e)?i.get(e)+1:1);let r=0,a=0;for(const t of i.keys())r=i.get(t),r>a&&(a=r,e=t);o[s]=e}return o}function Le(t,e,s){const n=t.length;if(n<=2)return Ve(t,e,s);const r=t[0].length,o=c.createEmptyBand(s,r),i=new Map;for(let s=0;s<r;s++)if(!e||e[s]){let e;i.clear();for(let r=0;r<n;r++)e=t[r][s],i.set(e,i.has(e)?i.get(e)+1:1);let r=0,a=t.length;for(const t of i.keys())r=i.get(t),r<a&&(a=r,e=t);o[s]=e}return o}function We(t,e,s){const n=t.length;if(n<2)return t[0];const[r]=t,o=r.length,i=c.createEmptyBand(s,o),a=new Set;for(let s=0;s<o;s++)if(!e||e[s]){let e;a.clear();for(let r=0;r<n;r++)e=t[r][s],a.add(e);i[s]=a.size}return i}const qe=new Map,He=new Map,$e=new Map,Je=new Map;function Ke(t,e,s,n){let[r,o]=V(s);const i=s.startsWith("u")||s.startsWith("s");i&&(r-=1e-5,o+=1e-5);for(let s=0;s<e.length;s++)if(e[s]){const a=t[s];isNaN(a)||a<r||a>o?e[s]=0:n[s]=i?Math.round(a):a}}let Ze=class extends Y{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{processAsMultiband:n}=this.functionArguments;if(t.some((t=>t.bandCount!==s)))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:r,rasters:o}=this.functionArguments,i=$t[r];if(!(999===i||o.length===i||o.length<=1&&1===i))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${i}`};this.outputPixelType=this._getOutputPixelType("f32");const a=e.clone();a.pixelType=this.outputPixelType,a.statistics=null,a.histograms=null,a.colormap=null,a.attributeTable=null,a.bandCount=999!==i||n?s:1;const u=Ht(r);if(u){a.statistics=[];for(let t=0;t<a.bandCount;t++)a.statistics[t]={min:u[0],max:u[1],avg:(u[0]+u[1])/2,stddev:(u[0]+u[1])/10}}return this.rasterInfo=a,{success:!0,supportsGPU:1===a.bandCount&&i<=3&&(r<11||r>16)}}_processPixels(t){const{pixelBlocks:e}=t;return o(e)||e.some((t=>o(t)))?null:function(t,e,s={}){qe.size||(qe.set(4,Math.sqrt),qe.set(6,Math.acos),qe.set(7,Math.asin),qe.set(8,Math.atan),qe.set(9,Math.atanh),qe.set(10,Math.abs),qe.set(21,Math.cos),qe.set(22,Math.cosh),qe.set(48,Math.floor),qe.set(49,Math.ceil),qe.set(51,Math.sin),qe.set(52,Math.sinh),qe.set(56,Math.tan),qe.set(57,Math.tanh),qe.set(59,Math.acosh),qe.set(60,Math.asinh),qe.set(65,Math.floor),He.set(5,Math.pow),He.set(61,Math.atan2),$e.set(1,Jt),$e.set(2,Zt),$e.set(3,Xt),$e.set(11,oe),$e.set(12,ie),$e.set(12,ie),$e.set(13,ae),$e.set(14,ue),$e.set(15,le),$e.set(16,ce),$e.set(17,pe),$e.set(18,me),$e.set(19,he),$e.set(20,fe),$e.set(23,Yt),$e.set(24,de),$e.set(25,be),$e.set(26,ye),$e.set(27,we),$e.set(28,Ie),$e.set(29,Pe),$e.set(30,Qt),$e.set(31,Te),$e.set(32,Kt),$e.set(33,Re),$e.set(34,Ne),$e.set(35,Fe),$e.set(36,ve),$e.set(37,Ae),$e.set(44,Be),$e.set(45,ke),$e.set(46,je),$e.set(64,te),$e.set(65,ee),$e.set(76,Ce),$e.set(78,Ce),Je.set(38,Ue),Je.set(39,Me),Je.set(40,De),Je.set(41,Oe),Je.set(42,_e),Je.set(43,Le),Je.set(47,Ee),Je.set(54,ze),Je.set(55,Ge),Je.set(58,We),Je.set(66,Ue),Je.set(67,Me),Je.set(68,De),Je.set(69,Oe),Je.set(70,_e),Je.set(71,Le),Je.set(72,Ee),Je.set(73,ze),Je.set(74,Ge),Je.set(75,We));let n=function(t,e=!1){const s=t.map((t=>t.mask)),n=s.filter((t=>r(t))),o=t[0].pixels[0].length;if(0===n.length)return new Uint8Array(o).fill(255);const i=n[0],a=new Uint8Array(i);if(1===n.length)return a;if(!e){for(let t=1;t<n.length;t++){const e=n[t];for(let t=0;t<a.length;t++)a[t]&&(a[t]=e[t]?255:0)}return a}if(n.length!==s.length)return new Uint8Array(o).fill(255);for(let t=1;t<n.length;t++){const e=n[t];for(let t=0;t<a.length;t++)0===a[t]&&(a[t]=e[t]?255:0)}return a}(t,e>=66&&e<=75);const{outputPixelType:o="f32"}=s,i=!Je.has(e)||s.processAsMultiband,a=i?t[0].pixels.length:1,u=[];for(let s=0;s<a;s++){const r=Je.has(e)&&!i?t.flatMap((t=>t.pixels)):t.map((t=>t.pixels[s]));let a,l=!0;if(e===z.setNull){const t=Se(r,n,o);a=t.band,n=t.mask,l=!1}else $e.has(e)?a=$e.get(e)(r,n,"f64"):qe.has(e)?a=e===D.asin||e===D.acos||e===D.atanh?se(r,n,"f64",e):ne(r,n,"f64",qe.get(e)):He.has(e)?a=re(r,n,"f64",He.get(e)):Je.has(e)?a=Je.get(e)(r,n,"f64"):(a=r[0],l=!1);if(l&&e!==G.isNull&&!qt.has(e)){const t=c.createEmptyBand(o,a.length);n||(n=new Uint8Array(a.length).fill(255)),Ke(a,n,o,t),a=t}u.push(a)}const l=t[0];return new c({width:l.width,height:l.height,pixelType:o,mask:e===G.isNull?null:n,pixels:u})}(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=$t[t],s=Object.keys(O).find((e=>O[e]===t))?.toLowerCase()??"undefined",n=this.outputPixelType??"f32";let[r,o]=V(n);const i=n.startsWith("u")||n.startsWith("s");return i&&(r-=1e-4,o+=1e-4),{imageCount:e,operationName:s,domainRange:[r,o],isOutputRounded:i}}};n([i({json:{write:!0,name:"rasterFunction"}})],Ze.prototype,"functionName",void 0),n([i({type:Wt,json:{write:!0,name:"rasterFunctionArguments"}})],Ze.prototype,"functionArguments",void 0),n([i()],Ze.prototype,"rasterArgumentNames",void 0),Ze=n([a("esri.layers.support.rasterFunctions.LocalFunction")],Ze);const Xe=Ze;var Qe;let Ye=Qe=class extends J{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=b.matchAny}get normalizedNoDataValues(){const{noDataValues:t}=this;if(!t?.length)return null;let e=!1;const s=t.map((t=>{if("number"==typeof t)return e=!0,[t];if("string"==typeof t){const s=t.trim().split(" ").filter((t=>""!==t.trim())).map((t=>Number(t)));return e=e||s.length>0,0===s.length?null:s}return null}));return e?s:null}clone(){return new Qe({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};n([i({json:{write:!0}})],Ye.prototype,"includedRanges",void 0),n([i({json:{write:!0}})],Ye.prototype,"noDataValues",void 0),n([i()],Ye.prototype,"normalizedNoDataValues",null),n([i({json:{write:!0}})],Ye.prototype,"noDataInterpretation",void 0),Ye=Qe=n([a("esri.layers.support.rasterFunctions.MaskFunctionArguments")],Ye);const ts=Ye;let es=class extends Y{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:s,normalizedNoDataValues:n}=this.functionArguments;if(!s?.length&&!n?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let r=[];for(let o=0;o<t.bandCount;o++){const t=x(e,s?.slice(2*o,2*o+2),n?.[o]);if(null==t){r=null;break}r.push(t)}this.lookups=r;const o=null!=n&&n.every((t=>t?.length===n[0]?.length));return{success:!0,supportsGPU:(!s||s.length<=2*v)&&(!n||o&&n[0].length<=v)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(o(e))return null;const{outputPixelType:s,lookups:n}=this,{includedRanges:r,noDataInterpretation:i,normalizedNoDataValues:a}=this.functionArguments,u=i===b.matchAll;return A(e,{includedRanges:r,noDataValues:a,outputPixelType:s,matchAll:u,lookups:n})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,s=new Float32Array(v);s.fill(U),e?.[0]?.length&&s.set(e[0]);const n=new Float32Array(v);for(let e=0;e<n.length;e+=2)n[e]=t?.[e]??-U,n[e+1]=t?.[e+1]??U;return t&&t.length&&n.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:s,includedRanges:n}}};n([i({json:{write:!0,name:"rasterFunction"}})],es.prototype,"functionName",void 0),n([i({type:ts,json:{write:!0,name:"rasterFunctionArguments"}})],es.prototype,"functionArguments",void 0),n([i()],es.prototype,"rasterArgumentNames",void 0),n([i({json:{write:!0}})],es.prototype,"lookups",void 0),es=n([a("esri.layers.support.rasterFunctions.MaskFunction")],es);const ss=es;var ns;let rs=ns=class extends J{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this;return new ns({visibleBandID:t,infraredBandID:e,scientificOutput:s})}};n([i({json:{write:!0}})],rs.prototype,"visibleBandID",void 0),n([i({json:{write:!0}})],rs.prototype,"infraredBandID",void 0),n([i({json:{write:!0}})],rs.prototype,"scientificOutput",void 0),rs=ns=n([a("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],rs);const os=rs;let is=class extends Y{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const e=this.sourceRasterInfos[0].clone();e.pixelType=this.outputPixelType,e.colormap=null,e.histograms=null,e.bandCount=1;const[s,n,r,o]=t?[-1,1,0,.1]:[0,200,100,10];return e.statistics=[{min:s,max:n,avg:r,stddev:o}],this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(o(e))return null;const{visibleBandID:s,infraredBandID:n,scientificOutput:r}=this.functionArguments;return function(t,e,s,n){const{mask:r,pixels:o,width:i,height:a}=t,u=o[s],l=o[e],p=l.length,m=n?new Uint8Array(p):new Float32Array(p),h=n?100:1,f=n?100.5:0;for(let t=0;t<p;t++)if(null==r||r[t]){const e=u[t],s=l[t],n=e+s;n&&(m[t]=(e-s)/n*h+f)}const d=new c({width:i,height:a,mask:r,pixelType:n?"u8":"f32",pixels:[m]});return d.updateStatistics(),d}(e,s,n,!r)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this.functionArguments;return{bandIndexMat3:at(this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0]),scaled:!s}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:s}=this.functionArguments;return[s,e,0].map((e=>t[e]))}};n([i({json:{write:!0,name:"rasterFunction"}})],is.prototype,"functionName",void 0),n([i({type:os,json:{write:!0,name:"rasterFunctionArguments"}})],is.prototype,"functionArguments",void 0),n([i()],is.prototype,"rasterArgumentNames",void 0),is=n([a("esri.layers.support.rasterFunctions.NDVIFunction")],is);const as=is;var us;let ls=us=class extends J{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new us({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};n([i({json:{write:!0}})],ls.prototype,"inputRanges",void 0),n([i({json:{write:!0}})],ls.prototype,"outputValues",void 0),n([i({json:{write:!0}})],ls.prototype,"noDataRanges",void 0),n([i({json:{write:!0}})],ls.prototype,"allowUnmatched",void 0),n([i({json:{write:!0}})],ls.prototype,"isLastInputRangeInclusive",void 0),ls=us=n([a("esri.layers.support.rasterFunctions.RemapFunctionArguments")],ls);const cs=ls;let ps=class extends Y{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.colormap=null,t.histograms=null,t.bandCount=1,t.attributeTable=null;const{statistics:s}=t,{allowUnmatched:n,outputValues:o,inputRanges:i,noDataRanges:a,isLastInputRangeInclusive:u}=this.functionArguments;if(r(s)&&s.length&&o?.length)if(n){const e=Math.min.apply(null,[...o,s[0].min]),n=Math.max.apply(null,[...o,s[0].max]);t.statistics=[{...s[0],min:e,max:n}]}else{let e=o[0],n=e;for(let t=0;t<o.length;t++)e=e>o[t]?o[t]:e,n=n>o[t]?n:o[t];t.statistics=[{...s[0],min:e,max:n}]}return this.rasterInfo=t,this.lookup=n?null:F({srcPixelType:e,inputRanges:i,outputValues:o,noDataRanges:a,allowUnmatched:n,isLastInputRangeInclusive:u,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!o||o.length<=v)&&(!a||a.length<=v)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(o(e))return null;const{lookup:s,outputPixelType:n}=this;if(s){const t=I(e,{lut:[s.lut],offset:s.offset,outputPixelType:n});return r(t)&&s.mask&&(t.mask=P(e.pixels[0],e.mask,s.mask,s.offset,"u8")),t}const{inputRanges:i,outputValues:a,noDataRanges:u,allowUnmatched:l,isLastInputRangeInclusive:c}=this.functionArguments;return R(e,{inputRanges:i,outputValues:a,noDataRanges:u,outputPixelType:n,allowUnmatched:l,isLastInputRangeInclusive:c})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:s}=this.functionArguments,n=new Float32Array(3*v),r=1e-5,o=this.functionArguments.inputRanges??[],i=this.functionArguments.outputValues??[],a=i.length;for(let t=0;t<v;t++)n[3*t]=o[2*t]??U-1,n[3*t+1]=o[2*t+1]??U,n[3*t+2]=i[t]??0,t<a&&(t>0&&(n[3*t]-=r),(t<a-1||!s)&&(n[3*t+1]-=r));const u=new Float32Array(2*v);return u.fill(U),e?.length&&u.set(e),{allowUnmatched:t,rangeMaps:n,noDataRanges:u,clampRange:V(this.outputPixelType)}}};n([i({json:{write:!0,name:"rasterFunction"}})],ps.prototype,"functionName",void 0),n([i({type:cs,json:{write:!0,name:"rasterFunctionArguments"}})],ps.prototype,"functionArguments",void 0),n([i()],ps.prototype,"rasterArgumentNames",void 0),n([i({json:{write:!0}})],ps.prototype,"lookup",void 0),ps=n([a("esri.layers.support.rasterFunctions.RemapFunction")],ps);const ms=ps;var hs;const fs=new d({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let ds=hs=class extends J{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new hs({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};n([f(fs)],ds.prototype,"slopeType",void 0),n([i({type:Number,json:{write:!0}})],ds.prototype,"zFactor",void 0),n([i({type:Number,json:{name:"psPower",write:!0}})],ds.prototype,"pixelSizePower",void 0),n([i({type:Number,json:{name:"psZFactor",write:!0}})],ds.prototype,"pixelSizeFactor",void 0),n([i({type:Boolean,json:{write:!0}})],ds.prototype,"removeEdgeEffect",void 0),ds=hs=n([a("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],ds);const gs=ds;let ys=class extends Y{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics="percent-rise"!==this.functionArguments.slopeType?[{min:0,max:90,avg:1,stddev:1}]:null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(o(e))return null;const{zFactor:s,slopeType:n,pixelSizePower:r,pixelSizeFactor:i}=this.functionArguments,{isGCS:a}=this,{extent:u,primaryPixelSizes:l}=t,c=l?.[0],p=o(c)?u?{x:u.width/e.width,y:u.height/e.height}:{x:1,y:1}:c;return h(e,{zFactor:s,slopeType:n,pixelSizePower:r,pixelSizeFactor:i,isGCS:a,resolution:p})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:s,pixelSizePower:n}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?900900900900901e-20*t:t,slopeType:e,pixelSizeFactor:s??0,pixelSizePower:n??0}}};n([i({json:{write:!0,name:"rasterFunction"}})],ys.prototype,"functionName",void 0),n([i({type:gs,json:{write:!0,name:"rasterFunctionArguments"}})],ys.prototype,"functionArguments",void 0),n([i()],ys.prototype,"rasterArgumentNames",void 0),n([i({json:{write:!0}})],ys.prototype,"isGCS",void 0),ys=n([a("esri.layers.support.rasterFunctions.SlopeFunction")],ys);const ws=ys;var bs;let xs=bs=class extends J{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(t,e){if(!t?.length)return null;const s=[];return t.forEach((t=>{const e={min:t.min,max:t.max,avg:t.avg??t.mean,stddev:t.stddev??t.standardDeviation};s.push(e)})),s}writeStatistics(t,e,s){if(!t?.length)return;const n=[];t.forEach((t=>{const e={...t,mean:t.avg,standardDeviation:t.stddev};delete e.avg,delete e.stddev,n.push(e)})),e[s]=n}clone(){return new bs({statistics:s(this.statistics),histograms:s(this.histograms)})}};n([i({json:{write:!0}})],xs.prototype,"statistics",void 0),n([N("statistics")],xs.prototype,"readStatistics",null),n([_("statistics")],xs.prototype,"writeStatistics",null),n([i({json:{write:!0}})],xs.prototype,"histograms",void 0),xs=bs=n([a("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],xs);const vs=xs;let As=class extends Y{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:s,histograms:n}=this.functionArguments;return n&&(e.histograms=n),s&&(e.statistics=s),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};n([i({json:{write:!0,name:"rasterFunction"}})],As.prototype,"functionName",void 0),n([i({type:vs,json:{write:!0,name:"rasterFunctionArguments"}})],As.prototype,"functionArguments",void 0),n([i()],As.prototype,"rasterArgumentNames",void 0),n([i({json:{write:!0}})],As.prototype,"indexedColormap",void 0),n([i()],As.prototype,"isNoopProcess",void 0),As=n([a("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],As);const Fs=As;var Is;const Ps=new d({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let Rs=Is=class extends J{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,s){t?.length&&(Array.isArray(t[0])||(t=t.map((t=>[t.min,t.max,t.avg,t.stddev]))),e[s]=t)}clone(){return new Is({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:s(this.statistics),gamma:s(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:s(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};n([i({type:Boolean,json:{write:!0}})],Rs.prototype,"computeGamma",void 0),n([i({type:Boolean,json:{name:"dra",write:!0}})],Rs.prototype,"dynamicRangeAdjustment",void 0),n([i({type:[Number],json:{write:!0}})],Rs.prototype,"gamma",void 0),n([i()],Rs.prototype,"histograms",void 0),n([i({type:Number,json:{write:!0}})],Rs.prototype,"maxPercent",void 0),n([i({type:Number,json:{write:!0}})],Rs.prototype,"minPercent",void 0),n([i({type:Number,json:{write:!0}})],Rs.prototype,"numberOfStandardDeviations",void 0),n([i({type:Number,json:{name:"max",write:!0}})],Rs.prototype,"outputMax",void 0),n([i({type:Number,json:{name:"min",write:!0}})],Rs.prototype,"outputMin",void 0),n([i({type:Number,json:{write:!0}})],Rs.prototype,"sigmoidStrengthLevel",void 0),n([i({json:{type:[[Number]],write:!0}})],Rs.prototype,"statistics",void 0),n([_("statistics")],Rs.prototype,"writeStatistics",null),n([f(Ps)],Rs.prototype,"stretchType",void 0),n([i({type:Boolean,json:{write:!0}})],Rs.prototype,"useGamma",void 0),Rs=Is=n([a("esri.layers.support.rasterFunctions.StretchFunctionArguments")],Rs);const Ns=Rs;let Ts=class extends Y{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:s}=this,{dynamicRangeAdjustment:n,gamma:r,useGamma:o}=s;if(!n&&["u8","u16","s8","s16"].includes(e)){const n=L(s.toJSON(),{rasterInfo:t}),i=this._isOutputRoundingNeeded()?"round":"float";this.lookup=W({pixelType:e,...n,gamma:o?r:null,rounding:i}),this.cutOffs=n}else n||(this.cutOffs=L(s.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const i=t.clone();return i.pixelType=this.outputPixelType,i.statistics=null,i.histograms=null,i.colormap=null,i.attributeTable=null,"u8"===this.outputPixelType&&(i.keyProperties.DataType="processed"),this.rasterInfo=i,{success:!0,supportsGPU:!n}}_processPixels(t){const e=t.pixelBlocks?.[0];if(o(e))return e;const{lookup:s}=this;if(s)return I(e,{...s,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:n}=this,r=this.cutOffs||L(n.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),i=n.useGamma?n.gamma:null;return q(e,{...r,gamma:i,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:s,useGamma:n}=this.functionArguments,r=this.rasterInfo.bandCount>=2?3:1,o=n&&s&&s.length?H(r,s):[1,1,1],{minCutOff:i,maxCutOff:a}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};1===i.length&&(i[1]=i[2]=i[0],a[1]=a[2]=a[0]);const u=new Float32Array(r);let l;for(l=0;l<r;l++)u[l]=(e-t)/(a[l]-i[l]);const c=this._isOutputRoundingNeeded();return{bandCount:r,outMin:t,outMax:e,minCutOff:i,maxCutOff:a,factor:u,useGamma:n,gamma:n&&s?s:[1,1,1],gammaCorrection:n&&o?o:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:c,type:"stretch"}}};n([i({json:{write:!0,name:"rasterFunction"}})],Ts.prototype,"functionName",void 0),n([i({type:Ns,json:{write:!0,name:"rasterFunctionArguments"}})],Ts.prototype,"functionArguments",void 0),n([i()],Ts.prototype,"rasterArgumentNames",void 0),n([i({json:{write:!0}})],Ts.prototype,"lookup",void 0),n([i({json:{write:!0}})],Ts.prototype,"cutOffs",void 0),Ts=n([a("esri.layers.support.rasterFunctions.StretchFunction")],Ts);const Bs=Ts,ks=new Map;function js(t,e){const{rasterFunctionArguments:s}=t;s&&(s.rasters||[s.raster]).forEach((t=>{t&&"number"!=typeof t&&("string"==typeof t?t.startsWith("http")&&(e.includes(t)||e.push(t)):"rasterFunctionArguments"in t&&js(t,e))}))}function Ss(t,n){if(n=n??{},"function"in(t=s(t))&&"arguments"in t&&t.arguments&&(t=function(t,e){e&&Es(t,e);const s={};return zs(t,s),s}(t,n)),"rasterFunction"in t)return _s(t=Ms(t),n);throw new e("raster-function-helper","unsupported raster function json.")}function Cs(t){return!!(t&&"object"==typeof t&&t.rasterFunction&&t.rasterFunctionArguments)}function Ms(t){const{rasterFunction:e,rasterFunctionArguments:s}=t,n={};for(const t in s){let e=s[t];const r=t.toLowerCase();if("rasters"===r&&Array.isArray(e))n.rasters=e.map((t=>Cs(t)?Ms(t):t));else switch(Cs(e)&&(e=Ms(e)),r){case"dra":n.dra=e;break;case"pspower":n.psPower=e;break;case"pszfactor":n.psZFactor=e;break;case"bandids":n.bandIds=e;break;default:n[t[0].toLowerCase()+t.slice(1)]=e}}return"Local"!==e||n.rasters?.length||(n.rasters=["$$"]),{...t,rasterFunctionArguments:n}}function _s(t,s){const{rasterFunction:n,rasterFunctionArguments:r}=t,o=t.outputPixelType?.toLowerCase();if(null==n||!ks.has(n))throw new e("raster-function-helper",`unsupported raster function: ${n}`);const i=ks.get(n),a=("function"==typeof i.ctor?i.ctor:i.ctor.default).fromJSON({...t,outputPixelType:o}),{rasterArgumentNames:u}=a,l=[],c=function(t,e){return"rasters"===e[0]&&Array.isArray(t.rasters)?t.rasters:e.map((e=>t[e]))}(r,u),p="rasters"===u[0],m=[];for(let t=0;t<c.length;t++){const e=c[t];let n;null==e||"string"==typeof e&&e.startsWith("$")?l.push(s?.raster):"string"==typeof e?s[e]&&l.push(s[e]):"number"!=typeof e&&"rasterFunction"in e&&(n=_s(e,s),p||(a.functionArguments[u[t]]=n),l.push(n)),p&&m.push(n??e)}if(p&&(a.functionArguments.rasters=m),s){a.sourceRasters=l;const t=s.raster?.url;t&&(a.mainPrimaryRasterId=t)}return a}function Es(t,e){if(t&&e)for(const s in t){const n=t[s];n&&"object"==typeof n&&(n.function&&n.arguments?Es(n.arguments,e):"RasterFunctionVariable"===n.type&&null!=e[n.name]&&(n.value=e[n.name]))}}function Ds(t){if(!t||"object"!=typeof t)return t;if(Array.isArray(t)&&0===t.length)return 0===t.length?null:["number","string"].includes(typeof t[0])?t:t.map((t=>Ds(t)));if("value"in t&&["number","string","boolean"].includes(typeof t.value))return t.value;if(!("type"in t))return t;switch(t.type){case"Scalar":return t.value;case"AlgorithmicColorRamp":return Gs(t);case"MultiPartColorRamp":return{type:"multipart",colorRamps:t.ArrayOfColorRamp.map(Gs)};case"ArgumentArray":return t.elements?.length?"RasterStatistics"===t.elements[0].type?t.elements:"RasterFunctionVariable"===t.elements[0].type?t.elements.map((t=>null!=t.value?Ds(t.value):t.name.toLowerCase().includes("raster")?"$$":null)):t:t.elements;default:return t}}function Gs(e){const s=e.algorithm??"esriHSVAlgorithm";let{FromColor:n,ToColor:r}=e;if(!Array.isArray(n)){const{r:e,g:s,b:r}=t({h:n.Hue,s:n.Saturation,v:n.Value});n=[e,s,r,n.AlphaValue]}if(!Array.isArray(r)){const{r:e,g:s,b:n}=t({h:r.Hue,s:r.Saturation,v:r.Value});r=[e,s,n,r.AlphaValue]}return{type:"algorithmic",algorithm:s,fromColor:n,toColor:r}}function zs(t,e){if(!t||!e)return;const{function:s,arguments:n}=t;if(!s||!n)return;e.rasterFunction=s.type.replace("Function",""),e.outputPixelType=s.pixelType;const r={};e.rasterFunctionArguments=r;for(const t in n){const s=n[t];"object"==typeof s&&("function"in s&&s.function&&s.arguments?(e.rasterFunctionArguments[t]={},zs(s,e.rasterFunctionArguments[t])):"value"in s&&(r[t]=Ds(s.value)))}switch(r.DEM&&!r.Raster&&(r.Raster=r.DEM,delete r.DEM),e.rasterFunction){case"Stretch":!function(t){t.Statistics?.length&&"object"==typeof t.Statistics&&(t.Statistics=t.Statistics.map((t=>[t.min,t.max,t.mean,t.standardDeviation]))),null!=t.NumberOfStandardDeviation&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}(r);break;case"Colormap":!function(t){"randomcolorramp"===t.ColorRamp?.type?.toLowerCase()&&(delete t.ColorRamp,t.ColormapName="Random"),0===t.ColorSchemeType&&delete t.ColorRamp}(r);break;case"Convolution":null!=(o=r).ConvolutionType&&(o.Type=o.ConvolutionType,delete o.ConvolutionType);break;case"Mask":!function(t){t.NoDataValues?.length&&"string"==typeof t.NoDataValues[0]&&(t.NoDataValues=t.NoDataValues.filter((t=>""!==t)).map((t=>Number(t))))}(r)}var o}ks.set("Aspect",{desc:"Aspect Function",ctor:et,rasterArgumentNames:["raster"]}),ks.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:ft,rasterArgumentNames:["raster"]}),ks.set("Colormap",{desc:"Colormap Function",ctor:At,rasterArgumentNames:["raster"]}),ks.set("CompositeBand",{desc:"CompositeBand Function",ctor:Nt,rasterArgumentNames:["rasters"]}),ks.set("Convolution",{desc:"Convolution Function",ctor:Et,rasterArgumentNames:["raster"]}),ks.set("ExtractBand",{desc:"ExtractBand Function",ctor:Vt,rasterArgumentNames:["raster"]}),ks.set("Local",{desc:"Local Function",ctor:Xe,rasterArgumentNames:["rasters"]}),ks.set("Mask",{desc:"Mask Function",ctor:ss,rasterArgumentNames:["raster"]}),ks.set("NDVI",{desc:"NDVI Function",ctor:as,rasterArgumentNames:["raster"]}),ks.set("Remap",{desc:"Remap Function",ctor:ms,rasterArgumentNames:["raster"]}),ks.set("Slope",{desc:"Slope Function",ctor:ws,rasterArgumentNames:["raster"]}),ks.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:Fs,rasterArgumentNames:["raster"]}),ks.set("Stretch",{desc:"Stretch Function",ctor:Bs,rasterArgumentNames:["raster"]});export{Ss as c,js as g};
