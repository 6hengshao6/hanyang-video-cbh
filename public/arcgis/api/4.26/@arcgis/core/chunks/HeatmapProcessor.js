/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import"./typedArrayUtil.js";import{i as t,g as s}from"./maybe.js";import"./Logger.js";import"./ensureType.js";import"../core/Error.js";import{subclass as r}from"../core/accessorSupport/decorators/subclass.js";import{d as i}from"./diffUtils.js";import{b as o}from"./heatmapUtils.js";import{l as a}from"./definitions.js";import{B as n}from"./BaseProcessor.js";import{g as p}from"./tileUtils.js";import"../config.js";import"./object.js";import"../core/lang.js";import"./string.js";import"./metadata.js";import"./utils.js";import"./handleUtils.js";import"./tracking.js";import"../core/Accessor.js";import"../core/Handles.js";import"./get.js";import"./ArrayPool.js";import"../core/accessorSupport/decorators/property.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"../core/promiseUtils.js";import"../core/Collection.js";import"../core/Evented.js";import"./shared.js";import"./SimpleObservable.js";import"./mathUtils.js";import"./vec3.js";import"./common.js";import"./vec4.js";import"./screenUtils.js";import"./vec4f64.js";import"../core/HandleOwner.js";import"./WatchUpdatingTracking.js";import"../core/reactiveUtils.js";class m{constructor(e,t){this.offset=e,this.extent=t}}let c=class extends n{constructor(){super(...arguments),this.type="heatmap",this._tileKeyToFeatureSets=new Map}initialize(){this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this))])}async update(e,t){const s=t.schema.processors[0];"heatmap"===s.type&&i(this._schema,s)&&(e.mesh=!0,this._schema=s)}onTileUpdate(e){for(const t of e.removed)this._tileKeyToFeatureSets.delete(t.key.id)}onTileClear(e){return this._tileKeyToFeatureSets.delete(e.key.id),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:e.id,data:{clear:!0}})}async onTileMessage(e,r,i){this._tileKeyToFeatureSets.has(e.key.id)||this._tileKeyToFeatureSets.set(e.key.id,new Map);const n=this._tileKeyToFeatureSets.get(e.key.id);if(n&&t(r.addOrUpdate)&&r.addOrUpdate.hasFeatures&&n.set(r.addOrUpdate.instance,r),r.end){const t=[],r=function(e){const t=e.key,s=new Map,r=256,i=a,o=e.tileInfoView.tileInfo.isWrappable;return s.set(p(t,-1,-1,o).id,new m([-i,-i],[i-r,i-r,i,i])),s.set(p(t,0,-1,o).id,new m([0,-i],[0,i-r,i,i])),s.set(p(t,1,-1,o).id,new m([i,-i],[0,i-r,r,i])),s.set(p(t,-1,0,o).id,new m([-i,0],[i-r,0,i,i])),s.set(p(t,1,0,o).id,new m([i,0],[0,0,r,i])),s.set(p(t,-1,1,o).id,new m([-i,i],[i-r,0,i,r])),s.set(p(t,0,1,o).id,new m([0,i],[0,0,i,r])),s.set(p(t,1,1,o).id,new m([i,i],[0,0,r,r])),s}(e);this._tileKeyToFeatureSets.forEach(((i,o)=>{if(o===e.key.id)i.forEach((e=>s(e.addOrUpdate,(e=>t.push(e)))));else if(r.has(o)){const e=r.get(o),[a,n]=e.offset;i.forEach((e=>s(e.addOrUpdate,(e=>{const s=e.transform(a,n,1,1);t.push(s)}))))}}));const n=o(t,this._schema.mesh,512,512),c={tileKey:e.key.id,intensityInfo:n},d=[n.matrix];return this.remoteClient.invoke("tileRenderer.onTileData",c,{...i,transferList:d})}}onTileError(e,t,s){return this.remoteClient.invoke("tileRenderer.onTileError",{tileKey:e.id,error:t},s)}};c=e([r("esri.views.2d.layers.features.processors.HeatmapProcessor")],c);const d=c;export{d as default};
