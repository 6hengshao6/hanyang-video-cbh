/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import{HandleOwner as t}from"../core/HandleOwner.js";import{h as s,R as r}from"./typedArrayUtil.js";import{when as i,watch as a,whenOnce as o}from"../core/reactiveUtils.js";import{property as n}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import{subclass as h}from"../core/accessorSupport/decorators/subclass.js";import{h as u,f as d}from"./unitUtils.js";import c from"../layers/support/TileInfo.js";import{a as l,i as g,l as p,u as m,e as f,c as y,m as _,g as v,s as b}from"./maybe.js";import{createResolver as I,ignoreAbortErrors as S,eachAlwaysValues as x,eachAlways as w,throwIfAborted as F,isAbortError as j,throwIfNotAbortError as C,after as T}from"../core/promiseUtils.js";import{i as M,u as q,m as k,s as U,p as E,q as R,t as A,v as P,h as L,w as O,g as Q}from"./featureConversionUtils.js";import{Q as G}from"./QueryEngine.js";import D from"../layers/support/FieldsIndex.js";import{F as B,S as z,f as N,a as V}from"./FeatureStore2D.js";import{i as H}from"./arcgisLayerUrl.js";import X from"../request.js";import Y from"../core/Error.js";import{L as $}from"./Logger.js";import Z from"../core/workers/Connection.js";import{t as W}from"./quantizationUtils.js";import{i as J}from"./ogcFeatureUtils.js";import{f as K,e as ee}from"./query.js";import{F as te,C as se,A as re}from"./ComputedAttributeStorage.js";import{P as ie}from"./pbf.js";import{a as ae,O as oe,b as ne}from"./OptimizedFeature.js";import{F as he}from"./FeatureSetReader.js";import{a as ue,b as de}from"./pbfQueryUtils.js";import ce from"../TimeExtent.js";import le from"../core/Evented.js";import{d as ge,h as pe,a as me}from"./diffUtils.js";import{W as fe}from"./WatchUpdatingTracking.js";import ye from"../rest/support/Query.js";import{C as _e}from"./CircularArray.js";import{Q as ve}from"./QueueProcessor.js";import{h as be}from"./handleUtils.js";import{r as Ie}from"./rbush.js";import{S as Se}from"./StreamFeatureManager.js";import{createConnection as xe}from"./createConnection.js";import we from"../core/Accessor.js";import"../geometry.js";import{d as Fe,s as je,a as Ce}from"./geohashUtils.js";import Te from"../geometry/SpatialReference.js";import{p as Me,c as qe}from"./projectionSupport.js";import{c as ke}from"./aaBoundingBox.js";import{e as Ue}from"./Ellipsoid.js";import{c as Ee,D as Re}from"./visualVariablesUtils.js";import Ae from"../geometry/Polygon.js";import Pe from"../geometry/Extent.js";import{l as Le}from"./definitions.js";import{T as Oe}from"./TileStore.js";import{T as Qe}from"./TileInfoView.js";import"../core/Handles.js";import"./get.js";import"./utils.js";import"../core/lang.js";import"./metadata.js";import"../config.js";import"./object.js";import"./string.js";import"./ArrayPool.js";import"./tracking.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"./jsonMap.js";import"../core/JSONSupport.js";import"./reader.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/Geometry.js";import"../geometry/support/webMercatorUtils.js";import"./aaBoundingRect.js";import"./mathUtils.js";import"./vec3.js";import"./common.js";import"./vec4.js";import"../layers/support/LOD.js";import"./TileKey.js";import"../geometry/support/jsonUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polyline.js";import"./extentUtils.js";import"./OptimizedFeatureSet.js";import"./MemCache.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"./simplify.js";import"./utils4.js";import"../kernel.js";import"../core/urlUtils.js";import"./utils5.js";import"./typeUtils.js";import"./QueryEngineResult.js";import"./ItemCache.js";import"../core/sql/WhereClause.js";import"./executionError.js";import"./datetime.js";import"./_commonjsHelpers.js";import"./utils10.js";import"./generateRendererUtils.js";import"./enumeration.js";import"./SnappingCandidate.js";import"./utils9.js";import"../geometry/projection.js";import"./SimpleObservable.js";import"./mat4.js";import"./pe.js";import"./assets.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"../layers/support/fieldUtils.js";import"./arcadeOnDemand.js";import"./QueryEngineCapabilities.js";import"./timeSupport.js";import"./Scheduler.js";import"./ObservableValue.js";import"./debugFlags.js";import"./persistableUrlUtils.js";import"./Queue.js";import"../core/workers/RemoteClient.js";import"./geojson.js";import"./clientSideDefaults.js";import"./defaultsJSON.js";import"./fieldType.js";import"./urlUtils2.js";import"./queryZScale.js";import"./color.js";import"./enums.js";import"./enums4.js";import"./enums3.js";import"./VertexElementDescriptor.js";import"./number2.js";import"./ArcadeDate.js";import"./arcadeTimeUtils.js";import"./TimeReference.js";import"../core/Clonable.js";import"./centroid.js";import"./timeUtils.js";import"../core/Collection.js";import"./shared.js";import"./DataLayerSource.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./FullTextSearch.js";import"../rest/support/StatisticDefinition.js";import"./quickselect.js";import"../layers/support/StreamConnection.js";import"./json.js";import"./screenUtils.js";import"./visualVariablesUtils2.js";import"./TileKey2.js";const Ge=268435455;class De{constructor(){this.fieldMap=new Map,this.fields=[],this.hasFeatures=!1,this.exceededTransferLimit=!1,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}hasField(e){return this.fieldMap.has(e)}isDateField(e){return(null!=e&&this.fieldMap.get(e)?.isDate)??!1}getFieldIndex(e){return null!=e?this.fieldMap.get(e)?.index:void 0}}function Be(e){const t=e.asUnsafe(),s=t.getLength(),r=t.pos()+s,i={name:"",isDate:!1};for(;t.pos()<r&&t.next();)switch(t.tag()){case 1:i.name=t.getString();break;case 2:"esriFieldTypeDate"===de(t.getEnum())&&(i.isDate=!0);break;default:t.skip()}return i}const ze=268435455,Ne=128e3,Ve={small:{delta:new Int32Array(128),decoded:new Int32Array(128)},large:{delta:new Int32Array(Ne),decoded:new Int32Array(Ne)}};function He(e){return e<=Ve.small.delta.length?Ve.small:(e<=Ve.large.delta.length||(Ve.large.delta=new Int32Array(Math.round(1.25*e)),Ve.large.decoded=new Int32Array(Math.round(1.25*e))),Ve.large)}function Xe(e){return e.toLowerCase().trim()}function Ye(e){for(;e.next();){if(1===e.tag())return e.getMessage();e.skip()}return null}function $e(e,t,s,r,i,a){return.5*Math.abs(e*r+s*a+i*t-e*a-s*t-i*r)}function Ze(e,t,s,r){return 0==e*r-s*t&&e*s+t*r>0}class We extends he{static fromBuffer(e,t,s=!1){const r=t.geometryType,i=function(e){try{const t=2,s=new ie(new Uint8Array(e),new DataView(e));for(;s.next();){if(s.tag()===t)return Ye(s.getMessage());s.skip()}}catch(e){const t=new Y("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e});$.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(t)}return null}(e),a=function(e,t,s=!1){const r=e.asUnsafe(),i=r.pos(),a=new De;let o=0,n=0,h=null,u=null,d=null,c=!1;for(;r.next();)switch(r.tag()){case 1:h=r.getString();break;case 3:u=r.getString();break;case 12:d=r.processMessage(ue);break;case 9:if(a.exceededTransferLimit=r.getBool(),a.exceededTransferLimit){a.offsets.geometry=s?new Float64Array(8e3):new Int32Array(8e3),a.centroid=s?new Float64Array(16e3):new Int32Array(16e3);for(let e=0;e<a.centroid.length;e++)a.centroid[e]=Ge}break;case 13:{const t=Be(e),s=t.name,r=t.name.toLowerCase().trim(),i={fieldName:s,index:o++,isDate:t.isDate};a.fields.push(i),a.fieldMap.set(t.name,i),a.fieldMap.set(r,i);break}case 15:{const e=r.getLength(),i=r.pos()+e;if(!a.exceededTransferLimit){const e=a.offsets.geometry,t=a.centroid;e.push(0),t.push(Ge),t.push(Ge)}!c&&a.exceededTransferLimit&&(c=!0,a.offsets.attributes=s?new Float64Array(8e3*o):new Uint32Array(8e3*o));let h=n*o;for(;r.pos()<i&&r.next();)switch(r.tag()){case 1:{c?a.offsets.attributes[h++]=r.pos():a.offsets.attributes.push(r.pos());const e=r.getLength();r.skipLen(e);break}case 2:if(t){const e=r.getLength(),t=r.pos()+e;for(;r.pos()<t&&r.next();)switch(r.tag()){case 3:{r.getUInt32();const e=r.getSInt64(),t=r.getSInt64();a.centroid[2*n]=e,a.centroid[2*n+1]=t;break}default:r.skip()}}else{a.offsets.geometry[n]=r.pos();const e=r.getLength();a.vertexCount+=e,r.skipLen(e)}break;case 4:{const e=r.getLength(),t=r.pos()+e;for(;r.pos()<t&&r.next();)switch(r.tag()){case 3:{r.getUInt32();const e=r.getSInt64(),t=r.getSInt64();a.centroid[2*n]=e,a.centroid[2*n+1]=t;break}default:r.skip()}break}default:r.skip()}n++,a.hasFeatures=!0;break}default:r.skip()}const l=h||u;if(!l)throw new Y("FeatureSet has no objectId or globalId field name");return a.featureCount=n,a.fieldCount=o,a.objectIdFieldIndex=a.getFieldIndex(l),a.transform=d,a.displayIds=new Uint32Array(a.featureCount),a.groupIds=new Uint16Array(a.featureCount),r.move(i),a}(i,"esriGeometryPoint"===r,s),o=he.createInstance();return new We(o,i,a,t)}constructor(e,t,s,r){super(e,r),this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._geometryType=r.geometryType,this._reader=t,this._header=s,this._hasNext=s.hasFeatures,this._isPoints="esriGeometryPoint"===r.geometryType}get geometryType(){return this._geometryType}get _size(){return this._header.featureCount}get hasZ(){return!1}get hasM(){return!1}get stride(){return 2+(this.hasZ?1:0)+(this.hasM?1:0)}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}hasField(e){return this._header.hasField(e)||this._header.hasField(Xe(e))}getFieldNames(){return this._header.fields.map((e=>e.fieldName))}getSize(){return this._size}getQuantizationTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=e}getAttributeHash(){let e="";return this._header.fields.forEach((({index:t})=>{e+=this._readAttributeAtIndex(t)+"."})),e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}getGroupId(){return this._header.groupIds[this._featureIndex]}setGroupId(e){this._header.groupIds[this._featureIndex]=e}readLegacyFeature(){if(void 0===this._cache.legacyFeature){const e=this.readCentroid(),t={attributes:this.readAttributes(),geometry:this._isPoints?this.readLegacyPointGeometry():this.readLegacyGeometry(),centroid:(e&&{x:e.coords[0],y:e.coords[1]})??null};return this._cache.legacyFeature=t,t}return this._cache.legacyFeature}readOptimizedFeature(){if(void 0===this._cache.optFeature){const e=new ae(this.readGeometry(),this.readAttributes(),this.readCentroid());return e.objectId=this.getObjectId(),e.displayId=this.getDisplayId(),this._cache.optFeature=e,e}return this._cache.optFeature}getXHydrated(){const e=this._header.centroid[2*this._featureIndex],t=this.getQuantizationTransform();return l(t)?e:e*t.scale[0]+t.translate[0]}getYHydrated(){const e=this._header.centroid[2*this._featureIndex+1],t=this.getQuantizationTransform();return l(t)?e:t.translate[1]-e*t.scale[1]}getX(){return this._header.centroid[2*this._featureIndex]*this._sx+this._tx}getY(){return this._header.centroid[2*this._featureIndex+1]*this._sy+this._ty}readLegacyPointGeometry(){return{x:this.getX(),y:this.getY()}}readLegacyGeometry(e){const t=this.readGeometry(e);return M(t,this.geometryType,!1,!1)}readLegacyCentroid(){const e=this.readCentroid();if(!e)return null;const[t,s]=e.coords;return{x:t,y:s}}readGeometryArea(){return this._cache.area||this.readGeometry(!0),this._cache.area}readUnquantizedGeometry(e=!1){if(void 0===this._cache.unquantGeometry){const t=this.readGeometry(e);if(!t)return this._cache.unquantGeometry=void 0,null;const s=He(t.coords.length).decoded,r=t.clone(s),i=r.coords;let a=0;for(const e of r.lengths){for(let t=1;t<e;t++){const e=2*(a+t),s=2*(a+t-1);i[e]+=i[s],i[e+1]+=i[s+1]}a+=e}return this._cache.unquantGeometry=r,r}return this._cache.unquantGeometry}readHydratedGeometry(){if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===ze)return null;const e=this.getXHydrated(),t=this.getYHydrated();return new oe([],[e,t])}const e=this.readGeometry();if(!e)return null;const t=e.clone(),s=this.getQuantizationTransform();return g(s)&&q(t,t,this.hasZ,this.hasM,s),t}readGeometry(e=!1){if(void 0===this._cache.geometry){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===ze)return null;const e=this.getX(),s=this.getY();t=new oe([],[e,s])}else{const s=this._header.offsets.geometry[this._featureIndex],r=this._reader;if(0===s){const e=this._readServerCentroid();if(!e)return null;const[t,s]=e.coords;return this.createQuantizedExtrudedQuad(t,s)}r.move(s);try{if(t=e?this._parseGeometryForDisplay(r):this._parseGeometry(r),null===t){const e=this._readServerCentroid();if(!e)return null;const[t,s]=e.coords;return this.createQuantizedExtrudedQuad(t,s)}}catch(e){return console.error("Failed to parse geometry!",e),null}}return this._cache.geometry=t,t}return this._cache.geometry}readCentroid(){if(void 0===this._cache.centroid){let e;return e=this._computeCentroid(),e||(e=this._readServerCentroid()),this._cache.centroid=e??void 0,e??null}return this._cache.centroid}copy(){const e=this._reader.clone(),t=new We(this.instance,e,this._header,this.fullSchema());return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}_readAttribute(e,t){const s=this._header.hasField(e)?e:Xe(e),r=this._header.getFieldIndex(s);if(null==r)return;const i=this._readAttributeAtIndex(r);return t?null==i?i:this._header.isDateField(s)?new Date(i):i:i}_readAttributes(){const e={};return this._header.fields.forEach((({fieldName:t,index:s})=>{e[t]=this._readAttributeAtIndex(s)})),e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext}_readAttributeAtIndex(e){const t=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],s=this._reader;return s.move(t),function(e){const t=e.getLength(),s=e.pos()+t;for(;e.pos()<s&&e.next();)switch(e.tag()){case 1:return e.getString();case 2:return e.getFloat();case 3:return e.getDouble();case 4:return e.getSInt32();case 5:return e.getUInt32();case 6:return e.getInt64();case 7:return e.getUInt64();case 8:return e.getSInt64();case 9:return e.getBool();default:return e.skip(),null}return null}(s)}_readServerCentroid(){const e=this._header.centroid[2*this._featureIndex]+this._tx,t=this._header.centroid[2*this._featureIndex+1]+this._ty;return e===ze?null:new oe([],[e,t])}_parseGeometry(e){const t=e.asUnsafe(),s=t.getLength(),r=t.pos()+s,i=[],a=[];for(;t.pos()<r&&t.next();)switch(t.tag()){case 2:{const e=t.getUInt32(),s=t.pos()+e;for(;t.pos()<s;)a.push(t.getUInt32());break}case 3:{const e=t.getUInt32(),s=t.pos()+e;for(i.push(t.getSInt32()+this._tx),i.push(t.getSInt32()+this._ty),this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();t.pos()<s;)i.push(t.getSInt32()),i.push(t.getSInt32()),this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();break}default:t.skip()}return new oe(a,i)}_parseGeometryForDisplay(e){const t=e.asUnsafe(),s=t.getLength(),r=t.pos()+s,i=[],a=[];let o=0,n=0,h=null,u=0;const d="esriGeometryPolygon"===this.geometryType;for(;t.pos()<r&&t.next();)switch(t.tag()){case 2:{const e=t.getUInt32(),s=t.pos()+e;for(;t.pos()<s;){const e=t.getUInt32();i.push(e),o+=e}h=He(2*o).delta;break}case 3:{t.getUInt32();const e=2+(this.hasZ?1:0)+(this.hasM?1:0);p(h);for(const s of i)if(n+e*s>h.length)for(let e=0;e<s;e++)t.getSInt32(),t.getSInt32(),this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();else if(d){const e=this.getAreaSimplificationThreshold(s,this._header.vertexCount);let r=2,i=1;const o=!1;let d=t.getSInt32(),c=t.getSInt32();h[n++]=d,h[n++]=c,this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();let l=t.getSInt32(),g=t.getSInt32();for(this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();r<s;){let s=t.getSInt32(),a=t.getSInt32();this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();const o=d+l,p=c+g;$e(d,c,o,p,o+s,p+a)>=e?(u+=-.5*(o-d)*(p+c),i>1&&Ze(h[n-2],h[n-1],l,g)?(h[n-2]+=l,h[n-1]+=g):(h[n++]=l,h[n++]=g,i++),d=o,c=p):(s+=l,a+=g),l=s,g=a,r++}i<3||o?n-=2*i:(u+=-.5*(d+l-d)*(c+g+c),Ze(h[n-2],h[n-1],l,g)?(h[n-2]+=l,h[n-1]+=g,a.push(i)):(h[n++]=l,h[n++]=g,a.push(++i)))}else{let e=0,r=t.getSInt32(),i=t.getSInt32();this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32(),h[n++]=r,h[n++]=i,e+=1;for(let a=1;a<s;a++){const s=t.getSInt32(),o=t.getSInt32(),d=r+s,c=i+o;u+=-.5*(d-r)*(c+i),this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32(),a>2&&Ze(h[n-2],h[n-1],s,o)?(h[n-2]+=s,h[n-1]+=o):(h[n++]=s,h[n++]=o,e+=1),r=d,i=c}a.push(e)}break}default:t.skip()}if(this._cache.area=u,!a.length)return null;if(this._tx||this._ty){let e=0;p(h);for(const t of a)h[2*e]+=this._tx,h[2*e+1]+=this._ty,e+=t}return new oe(a,h)}}class Je{constructor(e){this.service=e}destroy(){}}class Ke extends Je{constructor(e){super(e),this._portsOpen=async function(e){const t=new Z;return await t.open(e,{}),t}(e.source).then((e=>this.client=e))}destroy(){this.client.close(),this.client=null}async executeQuery(e,t){await this._portsOpen;const s=await this.client.invoke("queryFeatures",e.toJSON(),t);return te.fromFeatureSet(s,this.service)}}class et extends Je{async executeQuery(e,t){const{data:s}=await K(this.service.source,e,t),r=!e.quantizationParameters;return We.fromBuffer(s,this.service,r)}}class tt extends Je{async executeQuery(e,t){const{source:s,capabilities:r,spatialReference:i,objectIdField:a,geometryType:o}=this.service;if(g(e.quantizationParameters)&&!r.query.supportsQuantization){const r=e.clone(),o=W(m(r.quantizationParameters));r.quantizationParameters=null;const{data:n}=await ee(s,r,i,t),h=k(n,a);return U(o,h),te.fromOptimizedFeatureSet(h,this.service)}const{data:n}=await ee(s,e,this.service.spatialReference,t);return"esriGeometryPoint"===o&&(n.features=n.features?.filter((e=>{if(g(e.geometry)){const t=e.geometry;return Number.isFinite(t.x)&&Number.isFinite(t.y)}return!0}))),te.fromFeatureSet(n,this.service)}}class st extends Je{async executeQuery(e,t){const{capabilities:s}=this.service;if(e.quantizationParameters&&!s.query.supportsQuantization){const s=e.clone(),r=W(m(s.quantizationParameters));s.quantizationParameters=null;const i=await J(this.service.source,e,t);return U(r,i),te.fromOptimizedFeatureSet(i,this.service)}const r=await J(this.service.source,e,t);return te.fromOptimizedFeatureSet(r,this.service)}}class rt{constructor(){this.version=0,this.source=!1,this.targets={feature:!1,aggregate:!1},this.storage={filters:!1,data:!1},this.mesh=!1,this.queryFilter=!1,this.why={mesh:[],source:[]}}static create(e){const t=new rt;for(const s in e){const r=e[s];if("object"==typeof r)for(const e in r){const i=r[e];t[s][e]=i}t[s]=r}return t}static empty(){return rt.create({})}static all(){return rt.create({source:!0,targets:{feature:!0,aggregate:!0},storage:{filters:!0,data:!0},mesh:!0})}unset(e){this.version=e.version,e.source&&(this.source=!1),e.targets.feature&&(this.targets.feature=!1),e.targets.aggregate&&(this.targets.aggregate=!1),e.storage.filters&&(this.storage.filters=!1),e.storage.data&&(this.storage.data=!1),e.mesh&&(this.mesh=!1),e.queryFilter&&(this.queryFilter=!1)}any(){return this.source||this.mesh||this.storage.filters||this.storage.data||this.targets.feature||this.targets.aggregate||this.queryFilter}describe(){let e=0,t="";if(this.mesh){e+=20,t+="-> (20) Mesh needs update\n";for(const e of this.why.mesh)t+=`    + ${e}\n`}if(this.source){e+=10,t+="-> (10) The source needs update\n";for(const e of this.why.source)t+=`    + ${e}\n`}this.targets.feature&&(e+=5,t+="-> (5) Feature target parameters changed\n"),this.storage.filters&&(e+=5,t+="-> (5) Feature filter parameters changed\n"),this.targets.aggregate&&(e+=4,t+="-> (4) Aggregate target parameters changed\n"),this.storage.data&&(e+=1,t+="-> (1) Texture storage parameters changed");const s=e<5?"Fastest":e<10?"Fast":e<15?"Moderate":e<20?"Slow":"Very Slow";console.debug(`Applying ${s} update of cost ${e}/45 `),console.debug(t)}toJSON(){return{queryFilter:this.queryFilter,source:this.source,targets:this.targets,storage:this.storage,mesh:this.mesh}}}class it{constructor(e,t){this.requests={done:new Array,stream:new _e(10)},this._edits=null,this._abortController=new AbortController,this._version=0,this._resolver=I(),this.didSend=!1,this.tile=e,this._version=t}get signal(){return this._abortController.signal}get options(){return{signal:this._abortController.signal}}get empty(){return!this.requests.done.length&&l(this.edits)}get edits(){return this._edits}get done(){return this._resolver.promise}resolve(){this._resolver.resolve()}clear(){this.requests.done=[]}applyUpdate(e){this.requests.done.forEach((t=>t.message.status.unset(e))),this._version=e.version,g(this._edits)&&this._edits.status.unset(e)}add(e){e.message.status=e.message.status??rt.empty(),e.message.status.version=this._version,s("esri-2d-update-debug")&&console.debug(this.tile.id,"DataTileSubscription:add",this._version),e.message.end&&(this.requests.done.forEach((e=>{g(e.message)&&e.message.end&&(e.message.end=!1)})),this._resolver.resolve()),this.requests.done.push(e)}edit(e,t){const s=e.getQuantizationTransform(),r=e.fullSchema(),i=Array.from(e.features()).filter(g),a=[...t,...i.map((e=>e.objectId))];this.removeIds(a),this._invalidate(),l(this._edits)?this._edits={type:"append",addOrUpdate:te.fromOptimizedFeatures(i,r,m(s)),id:this.tile.id,status:rt.empty(),end:!0}:(this.requests.done.forEach((e=>e.message.end=!1)),m(this._edits.addOrUpdate).append(e.features()))}*readers(){for(const{message:e}of this.requests.done)g(e.addOrUpdate)&&(yield e.addOrUpdate);g(this._edits)&&g(this._edits.addOrUpdate)&&(yield this._edits.addOrUpdate)}_invalidate(){for(const e of this.requests.done)e.message.status=rt.empty();g(this._edits)&&(this._edits.status=rt.empty())}removeIds(e){this._invalidate();for(const{message:t}of this.requests.done){const r=t.addOrUpdate;g(r)&&(r.removeIds(e),r.isEmpty&&(s("esri-2d-update-debug")&&console.debug("Removing FeatureSetReader"),t.addOrUpdate=null))}g(this._edits)&&g(this._edits.addOrUpdate)&&this._edits.addOrUpdate.removeIds(e),this.requests.done=this.requests.done.filter((e=>e.message.addOrUpdate||e.message.end))}abort(){this._abortController.abort(),this._resolver.reject()}}class at{constructor(e){this.updatingHandles=new fe,this.events=new le,this._resolver=I(),this._didEdit=!1,this._subscriptions=new Map,this._outSR=e.outSR,this._serviceInfo=e.serviceInfo,this._onTileUpdateMessage=e.onMessage}destroy(){for(const e of this._subscriptions.values())e.abort();this.updatingHandles.destroy()}async _onMessage(e){const t=this._subscriptions.get(e.id);if(!t)return;const s={...e,remove:e.remove??[],status:e.status??rt.empty()};return S(this._onTileUpdateMessage(s,t.options))}update(e,t){const r=t.fields.length;t.outFields=function(e,t){const s=new Set;return e&&e.forEach((e=>s.add(e))),t&&t.forEach((e=>s.add(e))),s.has("*")?["*"]:Array.from(s)}(this._schema?.outFields,t.outFields),t.outFields=t.outFields.length>=.75*r?["*"]:t.outFields,t.outFields.sort();const i=ge(this._schema,t);if(!i)return;s("esri-2d-update-debug")&&console.debug("Applying Update - Source:",i);const a="orderByFields"in this._serviceInfo&&this._serviceInfo.orderByFields?this._serviceInfo.orderByFields:this._serviceInfo.objectIdField+" ASC",o={returnCentroid:"esriGeometryPolygon"===this._serviceInfo.geometryType,returnGeometry:!0,timeReferenceUnknownClient:"stream"!==this._serviceInfo.type&&this._serviceInfo.timeReferenceUnknownClient,outFields:t.outFields,outSpatialReference:this._outSR,orderByFields:[a],where:t.definitionExpression||"1=1",gdbVersion:t.gdbVersion,historicMoment:t.historicMoment,timeExtent:t.timeExtent?ce.fromJSON(t.timeExtent):null},n=this._schema&&pe(i,"outFields");this._schema&&me(i,["timeExtent","definitionExpression","gdbVersion","historicMoment","customParameters"])&&(e.why.mesh.push("Layer filter and/or custom parameters changed"),e.why.source.push("Layer filter and/or custom parameters changed"),e.mesh=!0,e.source=!0,e.queryFilter=!0),n&&(e.why.source.push("Layer required fields changed"),e.source=!0),ge(o,this._queryInfo)&&(this._queryInfo=o),this._schema=t,this._resolver.resolve()}whenInitialized(){return this._resolver.promise}async applyUpdate(e){if(e.queryFilter||e.source&&this._didEdit)return this.refresh(e.version),void(this._didEdit=!1);this._subscriptions.forEach((t=>t.applyUpdate(e))),await this.resend()}refresh(e,t){for(const t of this._tiles())this.unsubscribe(t),this.subscribe(t,e)}subscribe(e,t){const s=new it(e,t);this._subscriptions.set(e.id,s),this.updatingHandles.addPromise(s.done)}unsubscribe(e){const t=this.getSubscription(e.id);g(t)&&t.abort(),this._subscriptions.delete(e.id)}createQuery(e={}){const t=this._queryInfo.historicMoment?new Date(this._queryInfo.historicMoment):null;return new ye({...this._queryInfo,historicMoment:t,...e})}getSubscription(e){return this._subscriptions.has(e)?this._subscriptions.get(e):null}async queryLastEditDate(){throw new Error("Service does not support query type")}async query(e,t){throw new Error("Service does not support query")}*_tiles(){const e=Array.from(this._subscriptions.values());for(const t of e)yield t.tile}async edit(e,t){const r=Array.from(this._subscriptions.values()),i=r.map((({tile:e})=>e));for(const e of r)e.removeIds(t);if(e.length){const r=i.map((t=>{const s=this.createTileQuery(t);return s.objectIds=e,{tile:t,query:s}})).map((async({tile:e,query:t})=>({tile:e,result:await this.query(t,{query:{tile:s("esri-tiles-debug")?e.id.replace(/\//g,"."):void 0}}),query:t}))),a=(await x(r)).map((async({tile:s,result:r})=>{if(!r.hasFeatures&&!t.length&&!e.length)return;const i=this._subscriptions.get(s.key.id);i&&i.edit(r,e)}));await w(a)}this._didEdit=!0}}class ot extends at{constructor(e){super(e),this.type="feature",this.mode="on-demand",this._adapter=function(e){const{capabilities:t}=e;return r=e.source,"ogc-source"===r?.type?new st(e):function(e){return Array.isArray(e.source)}(e)?new Ke(e):t.query.supportsFormatPBF&&s("featurelayer-pbf")?new et(e):new tt(e);var r}(e.serviceInfo),this._queue=new ve({concurrency:8,process:async e=>{if(F(e),g(e.tile)){const t=e.tile.key.id,{signal:r}=e,i=s("esri-tiles-debug")?{tile:t.replace(/\//g,"."),depth:e.depth}:void 0,a=await this._adapter.executeQuery(e.query,{signal:r,query:{...i,...this._schema?.customParameters}});return a.level=e.tile.key.level,a}return this._adapter.executeQuery(e.query,{...e,query:this._schema?.customParameters})}}),this._patchQueue=new ve({concurrency:8,process:async e=>{if(F(e),g(e.tile)){const t=e.tile.key.id,{signal:r}=e,i=s("esri-tiles-debug")?{tile:t.replace(/\//g,"."),depth:e.depth}:void 0,a=await this._adapter.executeQuery(e.query,{signal:r,query:{...i,...this._schema?.customParameters}});return a.level=e.tile.key.level,a}return this._adapter.executeQuery(e.query,{...e,query:this._schema?.customParameters})}})}destroy(){super.destroy(),this._adapter.destroy(),this._queue.destroy(),this._patchQueue.destroy()}enqueueQuery(e,t){return this.updatingHandles.addPromise(this._queue.push(e,t))}enqueuePatchQuery(e,t){return this.updatingHandles.addPromise(this._patchQueue.push(e,t))}get maxRecordCountFactor(){const{query:e}=this._serviceInfo.capabilities;return e.supportsMaxRecordCountFactor?4:null}get maxPageSize(){const{query:e}=this._serviceInfo.capabilities;return(e.maxRecordCount??8e3)*f(this.maxRecordCountFactor,1)}get pageSize(){return Math.min(8e3,this.maxPageSize)}enableEvent(e,t){}subscribe(e,t){super.subscribe(e,t),this._fetchDataTile(e).catch((t=>{j(t)||$.getLogger("esri.views.2d.layers.features.sources.BaseFeatureSource").error(new Y("mapview-query-error","Encountered error when fetching tile",{tile:e,error:t}))}))}unsubscribe(e){super.unsubscribe(e)}readers(e){return this._subscriptions.get(e).readers()}async query(e,t={}){const s=t.query??{};return this._adapter.executeQuery(e,{...t,query:{...s,...this._schema?.customParameters}})}async queryLastEditDate(){const e=this._serviceInfo.source,t={...e.query,f:"json"};return(await X(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate}createTileQuery(e,t={}){const r=this._serviceInfo.geometryType,i=this.createQuery(t);i.quantizationParameters=t.quantizationParameters??e.getQuantizationParameters(),i.resultType="tile",i.geometry=e.extent,this._serviceInfo.capabilities.query.supportsQuantization?"esriGeometryPolyline"===r&&(i.maxAllowableOffset=e.resolution*s("feature-polyline-generalization-factor")):"esriGeometryPolyline"!==r&&"esriGeometryPolygon"!==r||(i.maxAllowableOffset=e.resolution,"esriGeometryPolyline"===r&&(i.maxAllowableOffset*=s("feature-polyline-generalization-factor")));const a=this._serviceInfo.capabilities.query;return i.defaultSpatialReferenceEnabled=a.supportsDefaultSpatialReference,i.compactGeometryEnabled=a.supportsCompactGeometry,i}async _executePatchQuery(e,t,s,r){const i=t.clone();i.outFields=[this._serviceInfo.objectIdField,...s],i.returnCentroid=!1,i.returnGeometry=!1;const a=g(i.start)?i.start/8e3:0,o=r.signal;return await this.enqueuePatchQuery({tile:e,query:i,signal:o,depth:a})}async _resend(e,t){const{query:s,message:r}=e,i=g(s.outFields)?s.outFields:[],a=this._queryInfo.outFields,o=a.filter((e=>!i.includes(e)));if(l(r.addOrUpdate))this._onMessage({...r,type:"append"});else if(o.length)try{const e=this._subscriptions.get(r.id).tile,i=await this._executePatchQuery(e,s,o,t);F(t),s.outFields=a,r.addOrUpdate.joinAttributes(i),this._onMessage({...r,end:r.end,type:"append"})}catch(e){}else this._onMessage({...r,type:"append"})}async _resendSubscription(e){if(s("esri-2d-update-debug")&&console.debug(e.tile.id,"Resend Subscription"),e.empty)return this._onMessage({id:e.tile.id,addOrUpdate:null,end:!1,type:"append"});const t=e.signal;for(const s of e.requests.done)await this._resend(s,{signal:t});return g(e.edits)?this._onMessage(e.edits):void 0}async resend(){const e=Array.from(this._subscriptions.values());await Promise.all(e.map((e=>this._resendSubscription(e))))}}const nt=s("esri-mobile"),ht={maxDrillLevel:nt?1:4,maxRecordCountFactor:nt?1:3};class ut extends ot{constructor(e){super(e)}async _fetchDataTile(e){const t=this._serviceInfo.capabilities.query.supportsMaxRecordCountFactor,s=this._subscriptions.get(e.key.id),r=s.signal,i=e.getQuantizationParameters();let a=0;const o=async(n,h)=>{const u=this._queryInfo,d=this.createTileQuery(n,{maxRecordCountFactor:t?ht.maxRecordCountFactor:void 0,returnExceededLimitFeatures:!1,quantizationParameters:i});a++;try{const t=await this.enqueueQuery({tile:e,query:d,signal:r,depth:h});if(a--,F(r),!t)return;if(u!==this._queryInfo)return void o(n,h);if(t.exceededTransferLimit&&h<ht.maxDrillLevel){for(const e of n.createChildTiles())o(e,h+1);return}const i={id:e.id,addOrUpdate:t,end:0===a,type:"append"};s.add({query:d,message:i}),this._onMessage(i)}catch(t){j(t)||this._onMessage({id:e.id,addOrUpdate:null,end:!0,type:"append"})}};o(e,0)}}class dt extends ot{constructor(e){super(e)}async _fetchDataTile(e){const t=this._subscriptions.get(e.key.id);let s=!1,r=0,i=0;const a=(r,a)=>{i--,F(t);const o=e.id,n=r.reader,h=r.query;if(!n.exceededTransferLimit){if(s=!0,0!==a&&!n.hasFeatures){const e={id:o,addOrUpdate:n,end:0===i,type:"append"};return t.add({message:e,query:h}),void this._onMessage(e)}const e={id:o,addOrUpdate:n,end:0===i,type:"append"};return t.add({message:e,query:h}),void this._onMessage(e)}const u={id:o,addOrUpdate:n,end:s&&0===i,type:"append"};t.add({message:u,query:h}),this._onMessage(u)};let o=0,n=0;for(;!s&&n++<20;){let n;for(let h=0;h<o+1;h++){const o=r++;i++,n=this._fetchDataTilePage(e,o,t).then((e=>e&&a(e,o))).catch((t=>{s=!0,j(t)||($.getLogger("esri.views.2d.layers.features.sources.PagedFeatureSource").error(new Y("mapview-query-error","Encountered error when fetching tile",{tile:e,error:t})),this._onMessage({id:e.id,addOrUpdate:null,end:s,type:"append"}))}))}await n,F(t),o=Math.min(o+2,6)}}async _fetchDataTilePage(e,t,s){F(s);const r=this._queryInfo,i={start:this.pageSize*t,num:this.pageSize,returnExceededLimitFeatures:!0,quantizationParameters:e.getQuantizationParameters()};g(this.maxRecordCountFactor)&&(i.maxRecordCountFactor=this.maxRecordCountFactor);const a=this.createTileQuery(e,i);try{const i=s.signal,o=await this.enqueueQuery({tile:e,query:a,signal:i,depth:t});return F(s),o?r!==this._queryInfo?this._fetchDataTilePage(e,t,s):{reader:o,query:a}:null}catch(e){return C(e),null}}}function ct(e,t,s){const r=e.getXHydrated(),i=e.getYHydrated(),a=t.getColumnForX(r),o=Math.floor(t.normalizeCol(a));return`${s}/${Math.floor(t.getRowForY(i))}/${o}`}function lt(e,t){if(l(e))return null;const s=t.transform,r=e.getQuantizationTransform();if(l(r)){const[t,r]=s.scale,[i,a]=s.translate,o=-i/t,n=1/t,h=a/r,u=1/-r;return e.transform(o,h,n,u)}const[i,a]=r.scale,[o,n]=r.translate,[h,u]=s.scale,[d,c]=s.translate,g=i/h,p=(o-d)/h,m=a/u,f=(-n+c)/u;return e.transform(p,f,g,m)}let gt=class extends ot{constructor(e){super(e),this.mode="snapshot",this._loading=!0,this._controller=new AbortController,this._downloadPromise=null,this._didSendEnd=!1,this._queries=new Array,this._invalidated=!1,this._hasAggregates=!1,this._random=new r(1e3),this._store=e.store,this._markedIdsBufId=this._store.storage.createBitset()}destroy(){super.destroy(),this._controller.abort()}get loading(){return this._loading}get _signal(){return this._controller.signal}update(e,t){super.update(e,t),null==this._featureCount&&(this._featureCount=t.initialFeatureCount),g(t.changedFeatureCount)&&(this._featureCount=t.changedFeatureCount),this._hasAggregates=!!e.targets?.aggregate}async resend(e=!1){if(await this._downloadPromise,this._invalidated||e){const e=y(this._featureCount,"Expected featureCount to be defined");return this._invalidated=!1,this._subscriptions.forEach((e=>e.clear())),this._downloadPromise=this._download(e),void await this._downloadPromise}const t=this._queries.map((({query:e,reader:t})=>this._sendPatchQuery(e,t)));await Promise.all(t),this._subscriptions.forEach((e=>{e.requests.done.forEach((e=>this._onMessage(e.message)))}))}async refresh(e,t){t&&(this._featureCount=t.featureCount),await this.resend(!0)}async _sendPatchQuery(e,t){const s=g(e.outFields)?e.outFields:[],r=this._queryInfo.outFields,i=r.filter((e=>!s.includes(e)));if(!i.length)return;const a=e.clone(),o=this._signal;a.returnGeometry=!1,a.returnCentroid=!1,a.outFields=i,e.outFields=r;const n=await this.enqueueQuery({query:a,depth:0,signal:o});F({signal:o}),t.joinAttributes(n)}async _fetchDataTile(e){if(!this._downloadPromise){const e=y(this._featureCount,"Expected featureCount to be defined");this._downloadPromise=this._download(e)}const t=this._store.search(e),s=this._subscriptions.get(e.key.id),r=t.length-1;for(let i=0;i<r;i++){const r=lt(t[i],e),a={type:"append",id:e.id,addOrUpdate:r,end:!1,status:rt.empty()};s.add({query:null,message:a}),this._hasAggregates||await T(1),this._onMessage(a)}const i=lt(r>=0?t[r]:null,e),a=this._didSendEnd,o={type:"append",id:e.id,addOrUpdate:i,end:a,status:rt.empty()};s.add({query:null,message:o}),this._onMessage(o)}async _download(e){try{await this.whenInitialized();const t=this._store.storage.getBitset(this._markedIdsBufId),s=new Set;t.clear();const r=Math.ceil(e/this.pageSize),i=Array.from({length:r},((e,t)=>t)).sort(((e,t)=>this._random.getInt()-this._random.getInt())).map((e=>this._downloadPage(e,t,s)));await Promise.all(i),this._store.sweepFeatures(t,this._store.storage),this._store.sweepFeatureSets(s)}catch(e){$.getLogger("esri.views.2d.layers.features.sources.SnapshotFeatureSource").error("mapview-snapshot-source","Encountered and error when downloading feature snapshot",e)}this._sendEnd(),this._loading=!1}async _downloadPage(e,t,s){const r=this.pageSize,i={start:e*r,num:r,cacheHint:!0};g(this.maxRecordCountFactor)&&(i.maxRecordCountFactor=this.maxRecordCountFactor);const a=this.createQuery(i),o=this._signal,n=await this.enqueueQuery({query:a,depth:e,signal:o});F({signal:o}),this._queries.push({query:a,reader:n}),this._store.insert(n),s.add(n.instance);const h=n.getCursor();for(;h.next();)t.set(h.getDisplayId());this._send(n)}_send(e){if(!this._subscriptions.size)return;let t=null;const s=new Map,r=new Set,i=new Map;this._subscriptions.forEach((e=>{const a=e.tile;s.set(a.key.id,null),t=a.tileInfoView,r.add(a.level);const{row:o,col:n}=a.key,h=`${a.level}/${o}/${n}`,u=i.get(h)??[];u.push(e),i.set(h,u)}));for(const a of r){const r=t.getLODInfoAt(a),o=e.getCursor();for(;o.next();){const e=ct(o,r,a),t=o.getIndex();if(i.has(e))for(const r of i.get(e)){const e=r.tile.id;let i=s.get(e);l(i)&&(i=[],s.set(e,i)),i.push(t)}}}s.forEach(((t,s)=>{if(g(t)){const r=this._subscriptions.get(s),i={type:"append",id:s,addOrUpdate:lt(B.from(e,t),r.tile),end:!1,status:rt.empty()};r.add({query:null,message:i}),this._onMessage(i)}}))}_sendEnd(){this._subscriptions.forEach((e=>{const t={type:"append",id:e.tile.id,addOrUpdate:null,end:!0,status:rt.empty()};e.add({query:null,message:t}),this._onMessage(t)})),this._didSendEnd=!0}};gt=e([h("esri.view.2d.layers.features.sources.SnapshotFeatureSource")],gt);let pt=class extends we{constructor(e){super(e),this._isPaused=!1}get connectionStatus(){return this._isPaused?"paused":this.connection?.connectionStatus}get errorString(){return this.connection?.errorString}pause(){this._isPaused=!0}resume(){this._isPaused=!1}};function mt(e,t){const s=e.weakClone();if(g(e.geometry)){const r=A(t,e.geometry.coords[0]),i=P(t,e.geometry.coords[1]);s.geometry=new oe([],[r,i])}return s}e([n()],pt.prototype,"connection",void 0),e([n()],pt.prototype,"_isPaused",void 0),e([n()],pt.prototype,"connectionStatus",null),e([n()],pt.prototype,"errorString",null),pt=e([h("esri.views.2d.layers.features.sources.StreamConnectionState")],pt);class ft{constructor(e,t){this.onUpdate=e,this._geometryType=t,this._objectIdToFeature=new Map,this._index=null}get _features(){const e=[];return this._objectIdToFeature.forEach((t=>e.push(t))),e}add(e){this._objectIdToFeature.set(e.objectId,e),this._index=null}get(e){return this._objectIdToFeature.has(e)?this._objectIdToFeature.get(e):null}forEach(e){this._objectIdToFeature.forEach(e)}search(e){return this._index||(this._index=function(e,t){const s=Ie(9,function(e){return"esriGeometryPoint"===e?e=>g(e.geometry)?{minX:e.geometry.coords[0],minY:e.geometry.coords[1],maxX:e.geometry.coords[0],maxY:e.geometry.coords[1]}:{minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}:e=>{let t=1/0,s=1/0,r=-1/0,i=-1/0;return g(e.geometry)&&e.geometry.forEachVertex(((e,a)=>{t=Math.min(t,e),s=Math.min(s,a),r=Math.max(r,e),i=Math.max(i,a)})),{minX:t,minY:s,maxX:r,maxY:i}}}(t));return s.load(e),s}(this._features,this._geometryType)),function(e,t){return e.search({minX:t.bounds[0],minY:t.bounds[1],maxX:t.bounds[2],maxY:t.bounds[3]})}(this._index,e)}clear(){this._index=null,this._objectIdToFeature.clear()}removeById(e){const t=this._objectIdToFeature.get(e);return t?(this._objectIdToFeature.delete(e),this._index=null,t):null}update(e,t){this.onUpdate(e,t)}get size(){return this._objectIdToFeature.size}}class yt extends at{constructor(e){super(e),this.type="stream",this._updateIntervalId=0,this._level=0,this._updateInfo={websocket:0,client:0},this._inUpdate=!1;const{outSR:t}=e,{geometryType:s,objectIdField:r,timeInfo:i,purgeOptions:a,source:o,spatialReference:n,serviceFilter:h,maxReconnectionAttempts:u,maxReconnectionInterval:d,updateInterval:c,customParameters:l,enabledEventTypes:g}=e.serviceInfo,p=new ft(this._onUpdate.bind(this),s),m=new Se(p,r,i,a),f=xe(o,n,t,s,h,u,d,l??{});this._connectionState=new pt({connection:f}),this._store=p,this._manager=m,this._connection=f,this._quantize=function(e){return"esriGeometryPoint"===e?mt:(t,s)=>{const r=t.weakClone(),i=new oe,a=R(i,t.geometry,!1,!1,e,s,!1,!1);return r.geometry=a,r}}(s),this._enabledEventTypes=new Set(g),this._handlesGroup=be([this._connection.on("data-received",(e=>this._onFeature(e))),this._connection.on("message-received",(e=>this._onWebSocketMessage(e)))]),this._initUpdateInterval=()=>{let t=performance.now();this._updateIntervalId=setInterval((()=>{const s=performance.now(),r=s-t;if(r>2500){t=s;const e=Math.round(this._updateInfo.client/(r/1e3)),i=Math.round(this._updateInfo.websocket/(r/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.events.emit("updateRate",{client:e,websocket:i})}e.canAcceptRequest()&&!this._inUpdate&&this._manager.checkForUpdates()}),c)},this._initUpdateInterval()}destroy(){super.destroy(),this._clearUpdateInterval(),this._connection.destroy(),this._handlesGroup?.remove()}_fetchDataTile(){}get connectionStatus(){return this._connectionState.connectionStatus}get errorString(){return this._connectionState.errorString}updateCustomParameters(e){this._connection.updateCustomParameters(e)}pauseStream(){"paused"!==this._connectionState.connectionStatus&&(this._connectionState.pause(),this._clearUpdateInterval())}resumeStream(){"paused"===this._connectionState.connectionStatus&&(this._connectionState.resume(),this._initUpdateInterval())}sendMessageToSocket(e){this._connection.sendMessageToSocket(e)}sendMessageToClient(e){this._connection.sendMessageToClient(e)}enableEvent(e,t){t?this._enabledEventTypes.add(e):this._enabledEventTypes.delete(e)}subscribe(e,t){super.subscribe(e,t);const s=this._subscriptions.get(e.id);s.resolve(),this._level=e.level;const r=this._getTileFeatures(e);this._onMessage({type:"append",id:e.key.id,addOrUpdate:r,end:!0}),s.didSend=!0}unsubscribe(e){super.unsubscribe(e)}*readers(e){const t=this._subscriptions.get(e),{tile:s}=t;yield this._getTileFeatures(s)}createTileQuery(e){throw new Error("Service does not support tile  queries")}async resend(){this._subscriptions.forEach((e=>{const{tile:t}=e,s={type:"append",id:t.id,addOrUpdate:this._getTileFeatures(t),end:!0};this._onMessage(s)}))}_getTileFeatures(e){const t=this._store.search(e).map((t=>this._quantize(t,e.transform)));return te.fromOptimizedFeatures(t,this._serviceInfo,e.transform)}_onWebSocketMessage(e){if(this._enabledEventTypes.has("message-received")&&this.events.emit("message-received",e),"type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this._manager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this._manager.removeByTrackId(t);break;case"clear":this._store.forEach((e=>this._manager.removeById(e.objectId)))}}_onFeature(e){this._updateInfo.websocket++;try{this._enabledEventTypes.has("data-received")&&this.events.emit("data-received",e);const t=E(e,this._serviceInfo.geometryType,!1,!1,this._serviceInfo.objectIdField);this._manager.add(t)}catch(e){}}_clearUpdateInterval(){clearInterval(this._updateIntervalId),this._updateIntervalId=0}async _onUpdate(e,t){this._inUpdate=!0;try{g(e)&&(this._updateInfo.client+=e.length),this._subscriptions.forEach(((e,t)=>{e.didSend&&e.tile.level===this._level&&this._onMessage({type:"append",id:t,addOrUpdate:null,clear:!0,end:!1})}));const t=[];this._subscriptions.forEach(((e,s)=>{if(!e.didSend||e.tile.level!==this._level)return;const r=e.tile,i={type:"append",id:s,addOrUpdate:this._getTileFeatures(r),remove:[],end:!1,status:rt.empty()};e.requests.stream.enqueue(i),t.push(this._onMessage(i))})),await Promise.all(t),this._subscriptions.forEach(((e,t)=>{e.didSend&&e.tile.level===this._level&&this._onMessage({type:"append",id:t,addOrUpdate:null,end:!0})}))}catch{}this._inUpdate=!1}}class _t{constructor(e=[],t,s=8096){this.onRelease=e=>{},this._nodes=0,this._root=new vt(this,0,0,0),this._statisticFields=e,this._pool=s?new _e(8096):null,this._serviceInfo=t}destroy(){this.clear()}_acquire(e,t,s){this._nodes++;let r=null;return g(this._pool)&&(r=this._pool.dequeue()),g(r)?r.realloc(e,t,s):r=new vt(this,e,t,s),r}_release(e){this.onRelease(e),this._nodes--,g(this._pool)&&this._pool.enqueue(e)}get count(){return this._root.count}get size(){return this._nodes}get poolSize(){return _(this._pool,0,(e=>e.size))}get depth(){let e=0;return this.forEach((t=>e=Math.max(e,t.depth))),e}dropLevels(e){this.forEach((t=>{if(t.depth>=e)for(let e=0;e<t.children.length;e++){const s=t.children[e];s&&this._release(s)}})),this.forEach((t=>{if(t.depth>=e)for(let e=0;e<t.children.length;e++)t.children[e]=null}))}clear(){this.forEach((e=>this._release(e))),this._root=new vt(this,0,0,0)}insert(e,t,s=0){const r=te.fromOptimizedFeatures([e],this._serviceInfo).getCursor();r.next();const i=r.readGeometry();if(!i)return;const[a,o]=i.coords,n=e.geohashX,h=e.geohashY;this.insertCursor(r,e.displayId,a,o,n,h,t,s)}insertCursor(e,t,s,r,i,a,o,n=0){let h=this._root,u=0,d=0,c=0;for(;null!==h;){if(h.depth>=n&&(h.count+=1,h.xTotal+=s,h.yTotal+=r,h.xGeohashTotal+=i,h.yGeohashTotal+=a,h.referenceId=t,this._updateStatisticsCursor(e,h,1)),u>=o)return void h.add(t);const l=Math.ceil((u+1)/2),g=Math.floor((u+1)/2),p=1-u%2,m=30-(3*l+2*g),f=30-(2*l+3*g),y=(i&7*p+3*(1-p)<<m)>>m,_=(a&3*p+7*(1-p)<<f)>>f,v=y+_*(8*p+4*(1-p));d=d<<3*p+2*(1-p)|y,c=c<<2*p+3*(1-p)|_,null==h.children[v]&&(h.children[v]=this._acquire(d,c,u+1)),u+=1,h=h.children[v]}}remove(e,t){const s=te.fromOptimizedFeatures([e],this._serviceInfo).getCursor();s.next();const r=s.readGeometry();if(!r)return;const[i,a]=r.coords,o=e.geohashX,n=e.geohashY;this.removeCursor(s,i,a,o,n,t)}removeCursor(e,t,s,r,i,a){let o=this._root,n=0;for(;null!==o;){if(o.count-=1,o.xTotal-=t,o.yTotal-=s,o.xGeohashTotal-=r,o.yGeohashTotal-=i,this._updateStatisticsCursor(e,o,-1),n>=a)return void o.remove(e.getDisplayId());const h=Math.ceil((n+1)/2),u=Math.floor((n+1)/2),d=1-n%2,c=30-(3*h+2*u),l=30-(2*h+3*u),g=((r&7*d+3*(1-d)<<c)>>c)+((i&3*d+7*(1-d)<<l)>>l)*(8*d+4*(1-d)),p=o.children[g];1===p?.count&&(this._release(p),o.children[g]=null),n+=1,o=p}}forEach(e){let t=this._root;for(;null!==t;){const s=this._linkChildren(t)||t.next;e(t),t=s}}find(e,t,s){return this._root.find(e,t,s,0,0,0)}findIf(e){let t=null;return this.forEach((s=>{e(s)&&(t=s)})),t}findAllIf(e){const t=[];return this.forEach((s=>{e(s)&&t.push(s)})),t}findSingleOccupancyNode(e,t,s,r,i){let a=this._root;for(;null!==a;){const o=a.depth,n=a.xNode,h=a.yNode,u=1-o%2,d=a.xGeohashTotal/a.count,c=a.yGeohashTotal/a.count;if(1===a.count&&e<d&&d<=s&&t<c&&c<=r)return a;if(o>=i){a=a.next;continue}const l=Math.ceil((o+1)/2),g=Math.floor((o+1)/2),p=30-(3*l+2*g),m=30-(2*l+3*g),f=~((1<<p)-1),y=~((1<<m)-1),_=(e&f)>>p,v=(t&y)>>m,b=(s&f)>>p,I=(r&y)>>m,S=n<<3*u+2*(1-u),x=h<<2*u+3*(1-u),w=S+8*u+4*(1-u),F=x+4*u+8*(1-u),j=Math.max(S,_),C=Math.max(x,v),T=Math.min(w,b),M=Math.min(F,I);let q=null,k=null;for(let e=C;e<=M;e++)for(let t=j;t<=T;t++){const s=t-S+(e-x)*(8*u+4*(1-u)),r=a.children[s];r&&(q||(q=r,q.next=a.next),k&&(k.next=r),k=r,r.next=a.next)}a=q||a.next}return null}getRegionDisplayIds(e){let t=this._root;const{bounds:s,geohashBounds:r,level:i}=e,[a,o,n,h]=s,u=[];for(;null!==t;){const e=t.depth,s=t.xNode,d=t.yNode;if(e>=i){const e=t.xTotal/t.count,s=t.yTotal/t.count;e>=a&&e<=n&&s>=o&&s<=h&&t.displayIds.forEach((e=>u.push(e))),t=t.next;continue}const c=Math.ceil((e+1)/2),l=Math.floor((e+1)/2),g=1-e%2,p=30-(3*c+2*l),m=30-(2*c+3*l),f=~((1<<p)-1),y=~((1<<m)-1),_=(r.xLL&f)>>p,v=(r.yLL&y)>>m,b=(r.xTR&f)>>p,I=(r.yTR&y)>>m,S=s<<3*g+2*(1-g),x=d<<2*g+3*(1-g),w=S+8*g+4*(1-g),F=x+4*g+8*(1-g),j=Math.max(S,_),C=Math.max(x,v),T=Math.min(w,b),M=Math.min(F,I);let q=null,k=null;for(let e=C;e<=M;e++)for(let s=j;s<=T;s++){const r=s-S+(e-x)*(8*g+4*(1-g)),i=t.children[r];i&&(q||(q=i,q.next=t.next),k&&(k.next=i),k=i,i.next=t.next)}t=q||t.next}return u}getRegionStatistics(e){let t=this._root,s=0,r=0,i=0;const a={},{bounds:o,geohashBounds:n,level:h}=e,[u,d,c,l]=o;let g=0;for(;null!==t;){const e=t.depth,o=t.xNode,p=t.yNode;if(e>=h){const e=t.xTotal/t.count,o=t.yTotal/t.count;e>u&&e<=c&&o>d&&o<=l&&(s+=t.count,r+=t.xTotal,i+=t.yTotal,1===t.count&&(g=t.referenceId),this._aggregateStatistics(a,t.statistics)),t=t.next;continue}const m=Math.ceil((e+1)/2),f=Math.floor((e+1)/2),y=1-e%2,_=30-(3*m+2*f),v=30-(2*m+3*f),b=~((1<<_)-1),I=~((1<<v)-1),S=(n.xLL&b)>>_,x=(n.yLL&I)>>v,w=(n.xTR&b)>>_,F=(n.yTR&I)>>v,j=o<<3*y+2*(1-y),C=p<<2*y+3*(1-y),T=j+8*y+4*(1-y),M=C+4*y+8*(1-y),q=Math.max(j,S),k=Math.max(C,x),U=Math.min(T,w),E=Math.min(M,F);let R=null,A=null;for(let e=k;e<=E;e++)for(let o=q;o<=U;o++){const n=o-j+(e-C)*(8*y+4*(1-y)),h=t.children[n];if(h){if(e!==k&&e!==E&&o!==q&&o!==U){const e=h.xTotal/h.count,t=h.yTotal/h.count;e>u&&e<=c&&t>d&&t<=l&&(s+=h.count,r+=h.xTotal,i+=h.yTotal,1===h.count&&(g=h.referenceId),this._aggregateStatistics(a,h.statistics));continue}R||(R=h,R.next=t.next),A&&(A.next=h),A=h,h.next=t.next}}t=R||t.next}return{count:s,attributes:this.normalizeStatistics(a,s),xTotal:r,yTotal:i,referenceId:g}}getBins(e){const t=[],{geohashBounds:s,level:r}=e;let i=this._root;for(;null!==i;){const e=i.depth,a=i.xNode,o=i.yNode;if(e>=r){t.push(i),i=i.next;continue}const n=Math.ceil((e+1)/2),h=Math.floor((e+1)/2),u=1-e%2,d=30-(3*n+2*h),c=30-(2*n+3*h),l=~((1<<d)-1),g=~((1<<c)-1),p=(s.xLL&l)>>d,m=(s.yLL&g)>>c,f=(s.xTR&l)>>d,y=(s.yTR&g)>>c,_=a<<3*u+2*(1-u),v=o<<2*u+3*(1-u),b=_+8*u+4*(1-u),I=v+4*u+8*(1-u),S=Math.max(_,p),x=Math.max(v,m),w=Math.min(b,f),F=Math.min(I,y);let j=null,C=null;for(let e=x;e<=F;e++)for(let t=S;t<=w;t++){const s=t-_+(e-v)*(8*u+4*(1-u)),r=i.children[s];r&&(j||(j=r,j.next=i.next),C&&(C.next=r),C=r,r.next=i.next)}i=j||i.next}return t}_linkChildren(e){let t=null,s=null;for(let r=0;r<=e.children.length;r++){const i=e.children[r];i&&(t||(t=i,t.next=e.next),s&&(s.next=i),s=i,i.next=e.next)}return t}_updateStatisticsCursor(e,t,s){for(const r of this._statisticFields){const i=r.name,a=r.inField?e.readAttribute(r.inField):e.getComputedNumericAtIndex(r.inFieldIndex);switch(r.statisticType){case"min":{if(isNaN(a))break;if(!t.statistics[i]){t.statistics[i]={value:a};break}const e=t.statistics[i].value;t.statistics[i].value=Math.min(e,a);break}case"max":{if(isNaN(a))break;if(!t.statistics[i]){t.statistics[i]={value:a};break}const e=t.statistics[i].value;t.statistics[i].value=Math.max(e,a);break}case"count":break;case"sum":case"avg":{t.statistics[i]||(t.statistics[i]={value:0,nanCount:0});const e=t.statistics[i].value,r=t.statistics[i].nanCount??0;null==a||isNaN(a)?t.statistics[i].nanCount=r+s:t.statistics[i].value=e+s*a;break}case"avg_angle":{t.statistics[i]||(t.statistics[i]={x:0,y:0,nanCount:0});const e=t.statistics[i].x,r=t.statistics[i].y,o=t.statistics[i].nanCount??0,n=Math.PI/180;null==a||isNaN(a)?t.statistics[i].nanCount=o+s:(t.statistics[i].x=e+s*Math.cos(a*n),t.statistics[i].y=r+s*Math.sin(a*n));break}case"mode":{t.statistics[i]||(t.statistics[i]={});const e=t.statistics[i][a]||0;t.statistics[i][a]=e+s;break}}}}_aggregateStatistics(e,t){for(const s of this._statisticFields){const r=s.name;switch(s.statisticType){case"min":{if(!e[r]){e[r]={value:t[r].value};break}const s=e[r].value;e[r].value=Math.min(s,t[r].value);break}case"max":{if(!e[r]){e[r]={value:t[r].value};break}const s=e[r].value;e[r].value=Math.max(s,t[r].value);break}case"count":break;case"sum":case"avg":case"avg_angle":case"mode":e[r]||(e[r]={});for(const s in t[r]){const i=e[r][s]||0;e[r][s]=i+t[r][s]}}}}normalizeStatistics(e,t){const s={};for(const r of this._statisticFields){const i=r.name;switch(r.statisticType){case"min":case"max":{const r=e[i];if(!t||!r)break;s[i]=r.value;break}case"count":if(!t)break;s[i]=t;break;case"sum":{if(!t)break;const{value:r,nanCount:a}=e[i];if(!(t-a))break;s[i]=r;break}case"avg":{if(!t)break;const{value:r,nanCount:a}=e[i];if(!(t-a))break;s[i]=r/(t-a);break}case"avg_angle":{if(!t)break;const{x:r,y:a,nanCount:o}=e[i];if(!(t-o))break;const n=r/(t-o),h=a/(t-o),u=180/Math.PI,d=Math.atan2(h,n)*u;s[i]=d;break}case"mode":{const t=e[i];let r=0,a=0,o=null;for(const e in t){const s=t[e];s===r?a+=1:s>r&&(r=s,a=1,o=e)}s[i]="null"===o||a>1?null:o;break}}}return s}}class vt{constructor(e,t,s,r){this.count=0,this.xTotal=0,this.yTotal=0,this.statistics={},this.displayId=0,this.referenceId=0,this.displayIds=new Set,this.next=null,this.depth=0,this.xNode=0,this.yNode=0,this.xGeohashTotal=0,this.yGeohashTotal=0,this._tree=e,this.children=new Array(32);for(let e=0;e<this.children.length;e++)this.children[e]=null;this.xNode=t,this.yNode=s,this.depth=r}realloc(e,t,s){for(let e=0;e<this.children.length;e++)this.children[e]=null;return this.xNode=e,this.yNode=t,this.depth=s,this.next=null,this.xGeohashTotal=0,this.yGeohashTotal=0,this.displayId=0,this.referenceId=0,this.xTotal=0,this.yTotal=0,this.count=0,this.statistics={},this.displayIds.clear(),this}get id(){return`${this.xNode}.${this.yNode}`}add(e){this.displayIds.add(e)}remove(e){this.displayIds.delete(e)}getAttributes(){const e=this._tree.normalizeStatistics(this.statistics,this.count);return e.referenceId=null,e.aggregateId=this.id,e.aggregateCount=this.count,e}getGeometry(e,t){const s=this.getLngLatBounds(),[r,i,a,o]=s,n=Me({rings:[[[r,i],[r,o],[a,o],[a,i],[r,i]]]},Te.WGS84,e),h=L(new oe,n,!1,!1);return g(t)?R(new oe,h,!1,!1,"esriGeometryPolygon",t,!1,!1):h}getGeometryCentroid(e,t){const s=this.getLngLatBounds(),[r,i,a,o]=s,n=Me({x:(r+a)/2,y:(i+o)/2},Te.WGS84,e),h=O(new oe,n);return g(t)?R(new oe,h,!1,!1,"esriGeometryPoint",t,!1,!1):h}getLngLatBounds(){const e=this.depth,t=Math.ceil(e/2),s=Math.floor(e/2),r=30-(3*t+2*s),i=30-(2*t+3*s),a=this.xNode<<r,o=this.yNode<<i;return Fe({geohashX:a,geohashY:o},this.depth)}find(e,t,s,r,i,a){if(r>=s)return this;const o=1-r%2,n=3*o+2*(1-o),h=2*o+3*(1-o),u=30-i-n,d=30-a-h,c=((e&7*o+3*(1-o)<<u)>>u)+((t&3*o+7*(1-o)<<d)>>d)*(8*o+4*(1-o)),l=this.children[c];return null==l?null:l.find(e,t,s,r+1,i+n,a+h)}}const bt=$.getLogger("esri.view.2d.layers.features.support.BinStore"),It=ke();function St(e){return 57.29577951308232*e}class xt extends z{constructor(e,t,s,r){super(e,s),this.type="bin",this.events=new le,this.objectIdField="aggregateId",this.featureAdapter=N,this._geohashLevel=5,this._geohashBuf=[],this._serviceInfo=r,this.geometryInfo=e.geometryInfo,this._spatialReference=t,this._projectionSupportCheck=qe(t,Te.WGS84),this._bitsets.geohash=s.getBitset(s.createBitset()),this._bitsets.inserted=s.getBitset(s.createBitset())}destroy(){this._tree&&this._tree.destroy()}get featureSpatialReference(){return this._spatialReference}get fields(){return this._fields}async updateSchema(e,t){const r=this._schema;try{await super.updateSchema(e,t),await this._projectionSupportCheck}catch(e){}this._fields=this._schema.params.fields;const i=ge(r,t);t&&(!l(i)||e.source||e.storage.filters)?((pe(i,"params.fields")||pe(i,"params")||!this._tree||e.source)&&(this._tree&&this._tree.destroy(),this._tree=new _t(this._statisticFields,this._serviceInfo),this._tree.onRelease=e=>e.displayId&&this._storage.releaseDisplayId(e.displayId),this._geohashLevel=this._schema.params.fixedBinLevel,this._rebuildTree(),s("esri-2d-update-debug")&&bt.info("Aggregate mesh needs update due to tree changing")),s("esri-2d-update-debug")&&bt.info("Aggregate mesh needs update due to tree changing"),e.targets[t.name]=!0,e.mesh=!1):r&&(e.mesh=!0)}clear(){this._rebuildTree()}sweepFeatures(e,t){this._bitsets.inserted.forEachSet((s=>{if(!e.has(s)){const e=t.lookupByDisplayIdUnsafe(s);this._remove(e)}}))}sweepAggregates(e,t,s){}onTileData(e,t,s,r,i=!0){if(!this._schema||l(t.addOrUpdate))return t;this.events.emit("changed");const a=this._getTransforms(e,this._spatialReference);{const e=t.addOrUpdate.getCursor();for(;e.next();)this._update(e,r)}if(t.status.mesh||!i)return t;const o=new Array;this._getBinsForTile(o,e,a,s),t.addOrUpdate=te.fromOptimizedFeatures(o,{...this._serviceInfo,geometryType:"esriGeometryPolygon"}),t.addOrUpdate.attachStorage(s),t.end=!0,t.isRepush||(t.clear=!0);{const r=t.addOrUpdate.getCursor();for(;r.next();){const t=r.getDisplayId();this._bitsets.computed.unset(t),this.setComputedAttributes(s,r,t,e.scale)}}return t}forEachBin(e){this._tree.forEach(e)}forEach(e){this._tree.forEach((t=>{if(t.depth!==this._geohashLevel)return;const s=this._toFeatureJSON(t),r=te.fromFeatures([s],{objectIdField:this.objectIdField,globalIdField:null,geometryType:this.geometryInfo.geometryType,fields:this.fields}).getCursor();r.next(),e(r)}))}forEachInBounds(e,t){}forEachBounds(e,t){const{hasM:s,hasZ:r}=this.geometryInfo;for(const i of e){const e=Q(It,i.readGeometry(),r,s);l(e)||t(e)}}onTileUpdate(e){}getAggregate(e){const t=Ee(e,!0),s=this._tree.findIf((e=>e.displayId===t));return v(s,(e=>this._toFeatureJSON(e)))}getAggregates(){return this._tree.findAllIf((e=>e.depth===this._geohashLevel)).map(this._toFeatureJSON.bind(this))}getDisplayId(e){const t=this._tree.findIf((t=>t.id===e));return v(t,(e=>e.displayId))}getFeatureDisplayIdsForAggregate(e){const t=this._tree.findIf((t=>t.id===e));return _(t,[],(e=>Array.from(e.displayIds)))}getDisplayIdForReferenceId(e){const t=this._tree.findIf((t=>1===t.displayIds.size&&t.displayIds.has(e)));return v(t,(e=>e.displayId))}_toFeatureJSON(e){const t=this._spatialReference;return{displayId:e.displayId,attributes:e.getAttributes(),geometry:M(e.getGeometry(t),"esriGeometryPolygon",!1,!1),centroid:null}}_rebuildTree(){this._bitsets.computed.clear(),this._bitsets.inserted.clear(),this._tree&&this._tree.clear()}_remove(e){const t=e.getDisplayId(),s=e.getXHydrated(),r=e.getYHydrated(),i=this._geohashBuf[2*t],a=this._geohashBuf[2*t+1];this._bitsets.inserted.has(t)&&(this._bitsets.inserted.unset(t),this._tree.removeCursor(e,s,r,i,a,this._geohashLevel))}_update(e,t){const s=e.getDisplayId(),r=this._bitsets.inserted,i=t.isVisible(s);if(i===r.has(s))return;if(!i)return void this._remove(e);const a=e.getXHydrated(),o=e.getYHydrated();if(!this._setGeohash(s,a,o))return;const n=this._geohashBuf[2*s],h=this._geohashBuf[2*s+1];this._tree.insertCursor(e,s,a,o,n,h,this._geohashLevel),r.set(s)}_setGeohash(e,t,s){if(this._bitsets.geohash.has(e))return!0;const r=this._geohashBuf;if(this._spatialReference.isWebMercator){const i=St(t/Ue.radius),a=i-360*Math.floor((i+180)/360),o=St(Math.PI/2-2*Math.atan(Math.exp(-s/Ue.radius)));je(r,e,o,a,12)}else{const i=Me({x:t,y:s},this._spatialReference,Te.WGS84);if(!i)return!1;je(r,e,i.y,i.x,12)}return this._bitsets.geohash.set(e),!0}_getBinsForTile(e,t,s,r){try{const i=this._getGeohashBounds(t),a=this._tree.getBins(i);for(const t of a){t.displayId||(t.displayId=r.createDisplayId(!0));let i=null;const a=t.getGeometry(this._spatialReference,s.tile);a||(i=t.getGeometryCentroid(this._spatialReference,s.tile));const o=new ae(a,t.getAttributes(),i);o.objectId=t.id,o.displayId=t.displayId,e.push(o)}}catch(e){return void bt.error("Unable to get bins for tile",t.key.id)}}_getGeohash(e,t,s){const r={geohashX:0,geohashY:0};return Ce(r,t,e,s),r}_getGeohashBounds(e){const t=this._getGeohashLevel(e.key.level),s=[e.extent.xmin,e.extent.ymin,e.extent.xmax,e.extent.ymax],r=Ae.fromExtent(Pe.fromBounds(s,this._spatialReference)),i=Me(r,this._spatialReference,Te.WGS84,{densificationStep:64*e.resolution}),a=L(new oe,i,!1,!1),o=a.coords.filter(((e,t)=>!(t%2))),n=a.coords.filter(((e,t)=>t%2)),h=Math.min(...o),u=Math.min(...n),d=Math.max(...o),c=Math.max(...n),l=this._getGeohash(h,u,t),g=this._getGeohash(d,c,t);return{bounds:s,geohashBounds:{xLL:l.geohashX,yLL:l.geohashY,xTR:g.geohashX,yTR:g.geohashY},level:t}}_getGeohashLevel(e){return this._schema.params.fixedBinLevel}_getTransforms(e,t){const s={originPosition:"upperLeft",scale:[e.resolution,e.resolution],translate:[e.bounds[0],e.bounds[3]]},r=u(t);if(!r)return{tile:s,left:null,right:null};const[i,a]=r.valid;return{tile:s,left:{...s,translate:[a,e.bounds[3]]},right:{...s,translate:[i-a+e.bounds[0],e.bounds[3]]}}}}const wt=ke();class Ft extends ne{constructor(e,t,s,r,i){super(new oe([],[t,s]),r,null,e),this.geohashBoundsInfo=i}get count(){return this.attributes.cluster_count}static create(e,t,s,r,i,a,o,n){const h=new Ft(t,s,r,a,o);return h.displayId=e.createDisplayId(!0),h.referenceId=n,h.tileLevel=i,h}update(e,t,s,r,i,a){return this.geometry.coords[0]=e,this.geometry.coords[1]=t,this.tileLevel=s,this.attributes=r,this.geohashBoundsInfo=i,this.referenceId=null,this.referenceId=a,this}toJSON(){return{attributes:{...this.attributes,aggregateId:this.objectId,referenceId:1===this.attributes.cluster_count?this.referenceId:null},geometry:{x:this.geometry.coords[0],y:this.geometry.coords[1]}}}}function jt(e){return 57.29577951308232*e}class Ct extends z{constructor(e,t,s,r){super(e,s),this.type="cluster",this.events=new le,this.objectIdField="aggregateId",this.featureAdapter=N,this._geohashLevel=0,this._tileLevel=0,this._aggregateValueRanges={},this._aggregateValueRangesChanged=!1,this._geohashBuf=[],this._clusters=new Map,this._tiles=new Map,this._serviceInfo=r,this.geometryInfo=e.geometryInfo,this._spatialReference=t,this._projectionSupportCheck=qe(t,Te.WGS84),this._bitsets.geohash=s.getBitset(s.createBitset()),this._bitsets.inserted=s.getBitset(s.createBitset())}destroy(){this._tree.destroy()}get featureSpatialReference(){return this._spatialReference}get fields(){return this._fields}async updateSchema(e,t){const r=this._schema;try{await super.updateSchema(e,t),await this._projectionSupportCheck}catch(e){}this._fields=this._schema.params.fields;const i=ge(r,t);t&&(!l(i)||e.source||e.storage.filters)?((pe(i,"params.fields")||!this._tree||e.source)&&(this._tree&&this._tree.destroy(),this._tree=new _t(this._statisticFields,this._serviceInfo),this._rebuildTree(),s("esri-2d-update-debug")&&console.debug("Aggregate mesh needs update due to tree changing")),s("esri-2d-update-debug")&&console.debug("Applying Update - ClusterStore:",i),e.targets[t.name]=!0,e.mesh=!1,this._aggregateValueRanges={}):r&&(e.mesh=!0)}clear(){this._rebuildTree()}sweepFeatures(e,t){this._bitsets.inserted.forEachSet((s=>{if(!e.has(s)){const e=t.lookupByDisplayIdUnsafe(s);this._remove(e)}}))}sweepAggregates(e,t,s){this._clusters.forEach(((r,i)=>{r&&r.tileLevel!==s&&(e.releaseDisplayId(r.displayId),t.unsetAttributeData(r.displayId),this._clusters.delete(i))}))}onTileData(e,t,s,r,i=!0){if(!this._schema||l(t.addOrUpdate))return t;this.events.emit("changed");const a=this._getTransforms(e,this._spatialReference);{const e=t.addOrUpdate.getCursor();for(;e.next();)this._update(e,r)}if(t.status.mesh||!i)return t;const o=new Array,n=this._schema.params.clusterRadius;this._getClustersForTile(o,e,n,s,a),t.addOrUpdate=te.fromOptimizedFeatures(o,this._serviceInfo),t.addOrUpdate.attachStorage(s),t.clear=!0,t.end=!0;{const r=t.addOrUpdate.getCursor();for(;r.next();){const t=r.getDisplayId();this._bitsets.computed.unset(t),this.setComputedAttributes(s,r,t,e.scale)}}return this._aggregateValueRangesChanged&&t.end&&(this.events.emit("valueRangesChanged",{valueRanges:this._aggregateValueRanges}),this._aggregateValueRangesChanged=!1),t}onTileUpdate({added:e,removed:t}){if(e.length){const t=e[0].level;this._tileLevel=t,this._setGeohashLevel(t)}if(!this._schema)return;const s=this._schema.params.clusterRadius;t.forEach((e=>{this._tiles.delete(e.key.id),this._markTileClustersForDeletion(e,s)}))}getAggregate(e){for(const t of this._clusters.values())if((t?.displayId&Re)==(e&Re))return t.toJSON();return null}getAggregates(){const e=[];for(const t of this._clusters.values())t?.tileLevel===this._tileLevel&&e.push(t.toJSON());return e}getDisplayId(e){const t=this._clusters.get(e);return t?t.displayId:null}getFeatureDisplayIdsForAggregate(e){const t=this._clusters.get(e);return t?this._tree.getRegionDisplayIds(t.geohashBoundsInfo):[]}getDisplayIdForReferenceId(e){for(const t of this._clusters.values())if(t?.referenceId===e)return t.displayId;return null}getAggregateValueRanges(){return this._aggregateValueRanges}forEach(e){this._clusters.forEach((t=>{if(!t)return;const s=t.toJSON(),r=te.fromFeatures([s],{objectIdField:this.objectIdField,globalIdField:null,geometryType:this.geometryInfo.geometryType,fields:this.fields}).getCursor();r.next(),e(r)}))}forEachInBounds(e,t){}forEachBounds(e,t){const{hasM:s,hasZ:r}=this.geometryInfo;for(const i of e){const e=Q(wt,i.readGeometry(),r,s);l(e)||t(e)}}size(){let e=0;return this.forEach((t=>e++)),e}_rebuildTree(){this._bitsets.computed.clear(),this._bitsets.inserted.clear(),this._tree&&this._tree.clear()}_remove(e){const t=e.getDisplayId(),s=e.getXHydrated(),r=e.getYHydrated(),i=this._geohashBuf[2*t],a=this._geohashBuf[2*t+1];this._bitsets.inserted.has(t)&&(this._bitsets.inserted.unset(t),this._tree.removeCursor(e,s,r,i,a,this._geohashLevel))}_update(e,t){const s=e.getDisplayId(),r=this._bitsets.inserted,i=t.isVisible(s);if(i===r.has(s))return;if(!i)return void this._remove(e);const a=e.getXHydrated(),o=e.getYHydrated();if(!this._setGeohash(s,a,o))return;const n=this._geohashBuf[2*s],h=this._geohashBuf[2*s+1];this._tree.insertCursor(e,s,a,o,n,h,this._geohashLevel),r.set(s)}_setGeohash(e,t,s){if(this._bitsets.geohash.has(e))return!0;const r=this._geohashBuf;if(this._spatialReference.isWebMercator){const i=jt(t/Ue.radius),a=i-360*Math.floor((i+180)/360),o=jt(Math.PI/2-2*Math.atan(Math.exp(-s/Ue.radius)));je(r,e,o,a,12)}else{const i=Me({x:t,y:s},this._spatialReference,Te.WGS84);if(!i)return!1;je(r,e,i.y,i.x,12)}return this._bitsets.geohash.set(e),!0}_getClustersForTile(e,t,s,r,i,a=!0){const o=this._schema.params.clusterPixelBuffer,n=2*s,h=Math.ceil(2**t.key.level*Le/n)+1,u=Math.ceil(o/n)+0,d=Math.ceil(Le/n),{row:c,col:p}=t.key,m=p*Le,f=c*Le,y=Math.floor(m/n)-u,_=Math.floor(f/n)-u,b=y+d+2*u,I=_+d+2*u,S=t.tileInfoView.getLODInfoAt(t.key.level);for(let s=y;s<=b;s++)for(let o=_;o<=I;o++){let n=s;S.wrap&&(n=s<0?s+h:s%h);const u=S.wrap&&s<0,d=S.wrap&&s%h!==s,c=this._lookupCluster(r,S,t.key.level,n,o,t);if(g(c)){const t=v(i,(e=>u?e.left:d?e.right:e.tile));if(a&&l(t))continue;if(!c.count)continue;if(g(t)&&a){const s=c.geometry.clone();let r=c.attributes;s.coords[0]=A(t,s.coords[0]),s.coords[1]=P(t,s.coords[1]),1===c.count&&g(c.referenceId)&&(r={...c.attributes,referenceId:c.referenceId});const i=new ae(s,r);i.displayId=c.displayId,e.push(i)}}}}_getGeohashLevel(e){return Math.min(Math.ceil(e/2+2),12)}_setGeohashLevel(e){const t=this._getGeohashLevel(e),s=1*(Math.floor(t/1)+1)-1;if(this._geohashLevel!==s)return this._geohashLevel=s,this._rebuildTree(),void this._bitsets.geohash.clear()}_getTransforms(e,t){const s={originPosition:"upperLeft",scale:[e.resolution,e.resolution],translate:[e.bounds[0],e.bounds[3]]},r=u(t);if(!r)return{tile:s,left:null,right:null};const[i,a]=r.valid;return{tile:s,left:{...s,translate:[a,e.bounds[3]]},right:{...s,translate:[i-a+e.bounds[0],e.bounds[3]]}}}_getClusterId(e,t,s){return(15&e)<<28|(16383&t)<<14|16383&s}_markForDeletion(e,t,s){const r=this._getClusterId(e,t,s);this._clusters.delete(r)}_getClusterBounds(e,t,s){const r=this._schema.params.clusterRadius,i=2*r;let a=s%2?t*i:t*i-r;const o=s*i;let n=a+i;const h=o-i,u=2**e.level*Le;e.wrap&&a<0&&(a=0),e.wrap&&n>u&&(n=u);const d=a/Le,c=o/Le,l=n/Le,g=h/Le;return[e.getXForColumn(d),e.getYForRow(c),e.getXForColumn(l),e.getYForRow(g)]}_getGeohash(e,t,s){const r={geohashX:0,geohashY:0};return Ce(r,t,e,s),r}_getGeohashBounds(e,t){const s=this._getGeohashLevel(e.key.level);if(this._spatialReference.isWebMercator){const[e,r,i,a]=t,o={x:e,y:r},n={x:i,y:a};let h=0,u=0,d=0,c=0;{const e=jt(o.x/Ue.radius);h=e-360*Math.floor((e+180)/360),u=jt(Math.PI/2-2*Math.atan(Math.exp(-o.y/Ue.radius)))}{const e=jt(n.x/Ue.radius);d=e-360*Math.floor((e+180)/360),c=jt(Math.PI/2-2*Math.atan(Math.exp(-n.y/Ue.radius)))}const l={geohashX:0,geohashY:0},g={geohashX:0,geohashY:0};return Ce(l,u,h,s),Ce(g,c,d,s),{bounds:[e,r,i,a],geohashBounds:{xLL:l.geohashX,yLL:l.geohashY,xTR:g.geohashX,yTR:g.geohashY},level:s}}const r=Ae.fromExtent(Pe.fromBounds(t,this._spatialReference)),i=Me(r,this._spatialReference,Te.WGS84,{densificationStep:64*e.resolution});if(!i)return null;const a=L(new oe,i,!1,!1),o=a.coords.filter(((e,t)=>!(t%2))),n=a.coords.filter(((e,t)=>t%2)),h=Math.min(...o),u=Math.min(...n),d=Math.max(...o),c=Math.max(...n),l=this._getGeohash(h,u,s),g=this._getGeohash(d,c,s);return{bounds:t,geohashBounds:{xLL:l.geohashX,yLL:l.geohashY,xTR:g.geohashX,yTR:g.geohashY},level:s}}_lookupCluster(e,t,s,r,i,a){const o=this._getClusterId(s,r,i),n=this._clusters.get(o),h=this._getClusterBounds(t,r,i),u=this._getGeohashBounds(a,h);if(l(u))return null;const d=this._tree.getRegionStatistics(u),{count:c,xTotal:p,yTotal:m,referenceId:f}=d,y=c?p/c:0,_=c?m/c:0;if(0===c)return this._clusters.set(o,null),null;const v={cluster_count:c,...d.attributes},b=g(n)?n.update(y,_,s,v,u,f):Ft.create(e,o,y,_,s,v,u,f);if(0===c){const[e,t,s,r]=h;b.geometry.coords[0]=(e+s)/2,b.geometry.coords[1]=(t+r)/2}return this._clusters.set(o,b),this._updateAggregateValueRangeForCluster(b,b.tileLevel),b}_updateAggregateValueRangeForCluster(e,t){const s=this._aggregateValueRanges[t]||{minValue:1/0,maxValue:0},r=s.minValue,i=s.maxValue;s.minValue=Math.min(r,e.count),s.maxValue=Math.max(i,e.count),this._aggregateValueRanges[t]=s,r===s.minValue&&i===s.maxValue||(this._aggregateValueRangesChanged=!0)}_markTileClustersForDeletion(e,t){const s=2*t,r=Math.ceil(Le/s),{row:i,col:a}=e.key,o=a*Le,n=i*Le,h=Math.floor(o/s),u=Math.floor(n/s);for(let t=h;t<h+r;t++)for(let s=u;s<u+r;s++)this._markForDeletion(e.key.level,t,s)}}function Tt(e){if(!j(e)&&!function(e){return"worker:port-closed"===e.name}(e))throw e}function Mt(e){return"feature"===e.type&&"snapshot"===e.mode}let qt=class extends t{constructor(){super(...arguments),this._storage=new se,this._markedIdsBufId=this._storage.createBitset(),this._lastCleanup=performance.now(),this._cleanupNeeded=!1,this._invalidated=!1,this._tileToResolver=new Map,this._didEdit=!1,this._updateVersion=1,this.tileStore=null,this.config=null,this.processor=null,this.remoteClient=null,this.service=null}initialize(){this._initStores(),this._initSource(),this._updateQueue=new ve({concurrency:"stream"===this._source.type?1:4,process:(e,t)=>this._onTileMessage(e,{signal:t})}),this.addHandles([this.tileStore.on("update",this.onTileUpdate.bind(this)),i((()=>!this.updating),(()=>this.onIdle()))])}_initSource(){const e=this.tileStore.tileScheme;this._source=function(e,t,s,r,i,a){const o=function(e,t,s,r,i,a){switch(e.type){case"snapshot":return{type:"feature",origin:"snapshot",featureCount:f(e.featureCount,0),serviceInfo:e,onMessage:r,outSR:t,tileInfoView:s,canAcceptRequest:i,store:a};case"stream":return{type:"stream",serviceInfo:e,onMessage:r,outSR:t,canAcceptRequest:i};case"memory":case"on-demand":return{type:"feature",serviceInfo:e,onMessage:r,outSR:t,origin:(o=e.source,Array.isArray(o)?"local":"path"in o&&H(o.path)?"hosted":"unknown"),tileInfoView:s,canAcceptRequest:i}}var o}(e,t,s,r,i,a);switch(o.type){case"feature":switch(o.origin){case"hosted":case"local":return new dt(o);case"snapshot":return new gt(o);default:return new ut(o)}case"stream":return new yt(o)}}(this.service,this.spatialReference,e,((e,t)=>(this._invalidated=!0,this._patchTile(e,t))),(()=>this._updateQueue&&this._updateQueue.length<50),this.featureStore),this._proxyEvents()}_proxyEvents(){if("stream"===this._source.type){const e=this._source.events,t=this._source;this.addHandles([a((()=>t.connectionStatus),(e=>this.remoteClient.invoke("setProperty",{propertyName:"connectionStatus",value:e}).catch(Tt)),{initial:!0}),a((()=>t.errorString),(e=>this.remoteClient.invoke("setProperty",{propertyName:"errorString",value:e}).catch(Tt)),{initial:!0}),e.on("data-received",(e=>this.remoteClient.invoke("emitEvent",{name:"data-received",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}}).catch(Tt))),e.on("message-received",(e=>this.remoteClient.invoke("emitEvent",{name:"message-received",event:e}).catch(Tt))),e.on("updateRate",(e=>this.remoteClient.invoke("emitEvent",{name:"update-rate",event:{...e}}).catch(Tt)))])}}_initAttributeStore(e){this.attributeStore||(this.attributeStore=new re({type:"remote",initialize:(e,t)=>S(this.remoteClient.invoke("tileRenderer.featuresView.attributeView.initialize",e,{signal:t}).catch(Tt)),update:(e,t)=>S(this.remoteClient.invoke("tileRenderer.featuresView.attributeView.requestUpdate",e,{signal:t}).catch(Tt)),render:e=>S(this.remoteClient.invoke("tileRenderer.featuresView.requestRender",void 0,{signal:e}).catch(Tt))},e))}_initStores(){const e="snapshot"===this.service.type?"snapshot":"on-demand",t={geometryInfo:{geometryType:this.service.geometryType,hasM:!1,hasZ:!1},spatialReference:this.spatialReference,fieldsIndex:this.fieldsIndex,fields:this.service.fields};this.featureStore=new V(t,this._storage,e)}_initQueryEngine(e){const t=this;this.featureQueryEngine?.destroy(),this.featureQueryEngine=new G({definitionExpression:e.schema.source.definitionExpression??void 0,fields:this.service.fields,geometryType:this.service.geometryType,objectIdField:this.service.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.spatialReference.toJSON(),cacheSpatialQueries:!0,featureStore:this.featureStore,aggregateAdapter:{getFeatureObjectIds:e=>l(t.aggregateStore)?[]:t.aggregateStore.getFeatureDisplayIdsForAggregate(e).map((e=>t.getObjectId(e)))},timeInfo:this.service.timeInfo})}_initAggregateQueryEngine(e,t){if(this.aggregateQueryEngine?.destroy(),l(e))return;const s=t.targets.aggregate.params.fields.slice();this.aggregateQueryEngine=new G({definitionExpression:void 0,fields:s,geometryType:e.geometryInfo.geometryType,objectIdField:e.objectIdField,hasM:e.geometryInfo.hasM,hasZ:e.geometryInfo.hasZ,spatialReference:this.spatialReference.toJSON(),cacheSpatialQueries:!1,featureStore:e,aggregateAdapter:{getFeatureObjectIds:e=>[]}})}destroy(){this._updateQueue.destroy(),this._source.destroy(),this.featureQueryEngine?.destroy(),this.aggregateQueryEngine?.destroy(),this.attributeStore?.destroy();for(const e of this.tileStore.tiles)this._source.unsubscribe(e);clearInterval(this._checkUpdating)}get fieldsIndex(){return new D(this.service.fields)}get spatialReference(){return this.tileStore.tileScheme.spatialReference}get updating(){return this.isUpdating()}isUpdating(){const e=this._source.updatingHandles.updating,t=!this.attributeStore||this.attributeStore.updatingHandles.updating,r=e||t||this.updatingHandles.updating;return s("esri-2d-log-updating")&&console.log(`Updating FeatureController2D: ${r}\n  -> updatingSource ${e}\n  -> updatingAttributeStore ${t}\n  -> updatingHandles ${this.updatingHandles.updating} (queue: ${this._updateQueue.length})\n`),r}updateCustomParameters(e){"stream"===this._source.type&&this._source.updateCustomParameters(e)}enableEvent(e){this._source.enableEvent(e.name,e.value)}pause(){this._updateQueue.pause(),this._updateQueue.clear()}resume(){this._updateQueue.resume()}pauseStream(){"stream"===this._source.type&&this._source.pauseStream()}resumeStream(){"stream"===this._source.type&&this._source.resumeStream()}sendMessageToSocket(e){"stream"===this._source.type&&this._source.sendMessageToSocket(e)}sendMessageToClient(e){"stream"===this._source.type&&this._source.sendMessageToClient(e)}_initAggregateStore(e){const t=e.schema.targets?.aggregate?.type,s=v(this.config,(e=>e.schema.targets?.aggregate?.type));if(s!==t&&(g(this.aggregateStore)&&(this.removeHandles("valueRangesChanged"),this.aggregateStore.destroy(),this.aggregateStore=null),t)){switch(t){case"cluster":{const e={geometryInfo:{geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1},spatialReference:this.spatialReference,fieldsIndex:this.fieldsIndex,fields:this.service.fields};this.aggregateStore=new Ct(e,this.spatialReference,this._storage,this.service),this.addHandles(this.aggregateStore.events.on("valueRangesChanged",(e=>{this.remoteClient.invoke("emitEvent",{name:"valueRangesChanged",event:{valueRanges:e.valueRanges}}).catch(Tt)})),"valueRangesChanged");break}case"bin":{const e={geometryInfo:{geometryType:"esriGeometryPolygon",hasM:!1,hasZ:!1},spatialReference:this.spatialReference,fieldsIndex:this.fieldsIndex,fields:this.service.fields};this.aggregateStore=new xt(e,this.spatialReference,this._storage,this.service);break}}this.aggregateStore.onTileUpdate({added:this.tileStore.tiles,removed:[]})}}async update(e,t){this._updateVersion++,s("esri-2d-update-debug")&&console.debug(`FeatureController2D::update: Token version ${this._updateVersion}`),this._initQueryEngine(t),this._initAttributeStore(t),this.pause(),await Promise.all([this._source.update(e,t.schema.source),this.featureStore.updateSchema(e,t.schema.targets.feature),this.attributeStore.update(e,t),this.attributeStore.updateFilters(e,t,this)]),this._initAggregateStore(t),g(this.aggregateStore)&&await this.aggregateStore.updateSchema(e,t.schema.targets.aggregate),this._initAggregateQueryEngine(this.aggregateStore,t.schema),s("esri-2d-update-debug")&&e.describe(),this._set("config",t)}async applyUpdate(e){e.version=this._updateVersion,s("esri-2d-update-debug")&&console.debug(`FeatureController2D::applyUpdate: Token version ${e.version}`),e.mesh&&this.clearTiles(),this._updateQueue.resume(),await this._source.applyUpdate(e),s("esri-2d-update-debug")&&console.debug("FeatureController2D::applyUpdate Waiting for source update to finish"),this.notifyChange("updating"),await o((()=>!this.updating)),s("esri-2d-update-debug")&&console.debug("FeatureController2D::applyUpdate Source update finsihed"),g(this.aggregateStore)&&(await T(10),s("esri-2d-update-debug")&&console.debug("FeatureController2D::applyUpdate Waiting for aggregate idle call"),await o((()=>!this.updating)),s("esri-2d-update-debug")&&console.debug("FeatureController2D::applyUpdate Aggregate idle called")),s("esri-2d-update-debug")&&console.debug("FeatureController2D::applyUpdate Update finished")}async onEdits({edits:e}){s("esri-2d-update-debug")&&console.debug("Applying Edit:",e),this._didEdit=!0;try{const t=e.removed.map((e=>e.objectId&&-1!==e.objectId?e.objectId:this._lookupObjectIdByGlobalId(e.globalId))),s=e.addOrModified.map((({objectId:e})=>e));this.featureStore.invalidate(),await this._source.edit(s,t),this.clearTiles(),this.notifyChange("updating"),g(this.aggregateStore)&&this.aggregateStore.clear(),await this._source.resend(),await o((()=>!this.updating))}catch(e){}}async refresh(e){if(!e.dataChanged){const e=rt.empty();return e.storage.filters=!0,this.applyUpdate(e)}this.featureStore.invalidate(),this.clearTiles(),this._source.refresh(this._updateVersion,e),this._cleanupNeeded=!0,this.notifyChange("updating"),await o((()=>!this.updating))}clearTiles(){for(const e of this.tileStore.tiles)this.processor.onTileClear(e)}onTileUpdate(e){g(this.aggregateStore)&&this.aggregateStore.onTileUpdate(e);for(const t of e.added)this._source.subscribe(t,this._updateVersion),this._level=t.level;for(const t of e.removed)this._source.unsubscribe(t),this._cleanupNeeded=!0,this._tileToResolver.has(t.id)&&(this._tileToResolver.get(t.id).resolve(),this._tileToResolver.delete(t.id));this.notifyChange("updating")}async onIdle(){this._invalidated&&(this._invalidated=!1,(g(this.aggregateStore)||"heatmap"===this.processor.type)&&await this._repushCurrentLevelTiles()),this._markAndSweep()}async querySummaryStatistics({query:e,params:t}){return this.featureQueryEngine.executeQueryForSummaryStatistics(e,t)}async queryAggregateSummaryStatistics({query:e,params:t}){return this.aggregateQueryEngine.executeQueryForSummaryStatistics(e,t)}async queryUniqueValues({query:e,params:t}){return this.featureQueryEngine.executeQueryForUniqueValues(e,t)}async queryAggregateUniqueValues({query:e,params:t}){return this.aggregateQueryEngine.executeQueryForUniqueValues(e,t)}async queryClassBreaks({query:e,params:t}){return this.featureQueryEngine.executeQueryForClassBreaks(e,t)}async queryAggregateClassBreaks({query:e,params:t}){return this.aggregateQueryEngine.executeQueryForClassBreaks(e,t)}async queryHistogram({query:e,params:t}){return this.featureQueryEngine.executeQueryForHistogram(e,t)}async queryAggregateHistogram({query:e,params:t}){return this.aggregateQueryEngine.executeQueryForHistogram(e,t)}queryExtent(e){return this.featureQueryEngine.executeQueryForExtent(e)}queryAggregates(e){return this.aggregateQueryEngine.executeQuery(e)}queryAggregateCount(e){return this.aggregateQueryEngine.executeQueryForCount(e)}queryAggregateIds(e){return this.aggregateQueryEngine.executeQueryForIds(e)}queryFeatures(e){return this.featureQueryEngine.executeQuery(e)}async queryVisibleFeatures(e){const t=await this.featureQueryEngine.executeQuery(e),s=t.objectIdFieldName;return t.features=t.features.filter((e=>{const t=e.attributes[s],r=this.getDisplayId(t);return v(r,(e=>this.attributeStore.isVisible(e)))})),t}queryFeatureCount(e){return this.featureQueryEngine.executeQueryForCount(e)}queryLatestObservations(e){return this.featureQueryEngine.executeQueryForLatestObservations(e)}queryObjectIds(e){return this.featureQueryEngine.executeQueryForIds(e)}async queryStatistics(){return this.featureStore.storeStatistics}getObjectId(e){return this.featureStore.lookupObjectId(e,this._storage)}getDisplayId(e){if(g(this.aggregateStore)){const t=this.aggregateStore.getDisplayId(e);if(l(t)){const t=this.featureStore.lookupDisplayId(e);return this.aggregateStore.getDisplayIdForReferenceId(t)}return t}return this.featureStore.lookupDisplayId(e)}getFeatures(e){const t=[],s=[];for(const r of e){const e=g(this.aggregateStore)?this.getAggregate(r):null;if(g(e))if(g(e.attributes.referenceId)){const s=this.getFeature(e.attributes.referenceId);g(s)&&t.push(s)}else s.push(e);else{const e=this.getFeature(r);g(e)&&t.push(e)}}return{features:t,aggregates:s}}getFeature(e){const t=this.featureStore.lookupFeatureByDisplayId(e,this._storage);if(l(t))return null;const s=t.readHydratedGeometry(),r=M(s,t.geometryType,t.hasZ,t.hasM);return{attributes:t.readAttributes(),geometry:r}}getAggregate(e){return l(this.aggregateStore)?null:this.aggregateStore.getAggregate(e)}getAggregates(){return l(this.aggregateStore)?[]:this.aggregateStore.getAggregates()}async setHighlight(e){const t=b(e.map((e=>this.getDisplayId(e))));return this.attributeStore.setHighlight(e,t)}_lookupObjectIdByGlobalId(e){const t=this.service.globalIdField;if(l(t))throw new Error("Expected globalIdField to be defined");let s=null;if(this.featureStore.forEach((r=>{e===r.readAttribute(t)&&(s=r.getObjectId())})),l(s))throw new Error(`Expected to find a feature with globalId ${e}`);return s}async _repushCurrentLevelTiles(){const e=this.tileStore.tiles.filter((e=>e.level===this._level));e.map((async e=>this._patchTile({type:"append",id:e.key.id,clear:!0,addOrUpdate:null,end:!1})));const t=e.map((async e=>this._patchTile({type:"append",id:e.key.id,addOrUpdate:te.fromOptimizedFeatures([],this.service),remove:[],end:!0,isRepush:!0,status:rt.empty()})));await Promise.all(t)}_maybeForceCleanup(){performance.now()-this._lastCleanup>5e3&&this._markAndSweep()}_patchTile(e,t){const s=this._updateQueue.push(e,t).catch((e=>{}));return this.updatingHandles.addPromise(s)}async _onTileMessage(e,t){if(F(t),s("esri-2d-update-debug")){const t=v(e.addOrUpdate,(e=>e.hasFeatures));console.debug(e.id,`FeatureController:onTileMessage: [clear:${e.clear}, end:${e.end}, features: ${t}]`)}const r=this.tileStore.get(e.id);if(!r)return;if(e.clear)return this.processor.onTileClear(r);const i=e.status;this._cleanupNeeded=!0;const a=[];for(const t of e.remove??[]){const e=this.featureStore.lookupDisplayId(t);e&&a.push(e)}e.remove=a;try{if(l(e.addOrUpdate))return void this.processor.onTileMessage(r,{...e,addOrUpdate:null},g(this.aggregateStore),t).catch(C);if(e.addOrUpdate.setArcadeSpatialReference(this.spatialReference),this.featureStore.hasInstance(e.addOrUpdate.instance)&&i.targets.feature||(i.targets.feature=!0,this.featureStore.onTileData(r,e)),i.storage.data&&i.storage.filters||(i.storage.data=!0,i.storage.filters=!0,this.attributeStore.onTileData(r,e),"stream"===this._source.type||this._didEdit?(await this.attributeStore.sendUpdates(),F(t)):this.attributeStore.sendUpdates()),g(this.aggregateStore)&&!i.targets.aggregate){i.targets.aggregate=!0;const t=Mt(this._source)&&this._source.loading,s=!Mt(this._source)||t||e.end;if(this.aggregateStore.onTileData(r,e,this._storage,this.attributeStore,s),!s)return;i.mesh||(this.attributeStore.onTileData(r,e),await this.attributeStore.sendUpdates())}if(!i.mesh){i.mesh=!0;const s=g(this.aggregateStore)&&"cluster"===this.aggregateStore.type;await this.processor.onTileMessage(r,e,s,t),F(t)}this._maybeForceCleanup()}catch(e){C(e)}}_mark(e,t,s){const r=(4294901760&this._storage.getInstanceId(e))>>>16;e&&(t.add(r),s.set(e))}_markAndSweep(){if(this._lastCleanup=performance.now(),"feature"===this._source.type&&"snapshot"===this._source.mode||"stream"!==this._source.type&&!this._cleanupNeeded)return;this._cleanupNeeded=!1;const e=this._storage.getBitset(this._markedIdsBufId),t=new Set;e.clear();for(const s of this.tileStore.tiles)for(const r of this._source.readers(s.id)){const s=r.getCursor();for(;s.next();){let r=s.getDisplayId();if(!r){const e=s.getObjectId();r=this.featureStore.lookupDisplayId(e)}this._mark(r,t,e)}}"symbol"===this.processor.type&&this.processor.forEachBufferId((s=>{this._mark(s,t,e)})),this._updateQueue.forEach((s=>{for(const r of s.remove??[]){const s=this.featureStore.lookupDisplayId(r);this._mark(s,t,e)}})),g(this.aggregateStore)&&(this.aggregateStore.sweepFeatures(e,this.featureStore),"sweepAggregates"in this.aggregateStore&&this.aggregateStore.sweepAggregates(this._storage,this.attributeStore,this._level)),this.featureStore.sweepFeatures(e,this._storage,this.attributeStore),this.featureStore.sweepFeatureSets(t)}};e([n({constructOnly:!0})],qt.prototype,"tileStore",void 0),e([n()],qt.prototype,"config",void 0),e([n({readOnly:!0})],qt.prototype,"fieldsIndex",null),e([n()],qt.prototype,"processor",void 0),e([n({constructOnly:!0})],qt.prototype,"remoteClient",void 0),e([n({constructOnly:!0})],qt.prototype,"service",void 0),e([n()],qt.prototype,"spatialReference",null),e([n()],qt.prototype,"updating",null),qt=e([h("esri.views.2d.layers.features.controllers.FeatureController2D")],qt);const kt=qt;let Ut=class extends t{constructor(){super(...arguments),this.controller=null,this.processor=null,this.remoteClient=null,this.tileStore=null,this.service=null,this.viewState=null,this._paused=!1,this._pendingTileUpdates=[]}initialize(){this.handles.add(a((()=>this.updating),(e=>{this.remoteClient.invoke("setUpdating",e).catch((e=>{}))})))}destroy(){this.stop(),this.controller?.destroy(),this.processor?.destroy(),this.controller=this.processor=this.tileStore=this.remoteClient=null}get updating(){return!this.controller||this.controller.updating}stop(){this._paused=!0,Array.isArray(this.service?.source)&&(this.service.source.forEach((e=>e.close())),this.service.source.length=0),this.tileStore?.updateTiles({added:[],removed:this.tileStore.tiles.map((e=>e.id))}),this.tileStore?.destroy(),this.tileStore=null,this._pendingTileUpdates.length=0}async startup({service:e,config:t,tileInfo:s,tiles:r}){if(this._paused=!0,Array.isArray(this.service?.source)&&(this.service.source.forEach((e=>e.close())),this.service.source.length=0),this.service=e,!this.tileStore||!d(this.tileStore.tileScheme.spatialReference,s.spatialReference)){const e=new Qe(c.fromJSON(s));r.added.length=r.removed.length=0,this.tileStore?.updateTiles({added:[],removed:this.tileStore.tiles.map((e=>e.id))}),this.tileStore?.destroy(),this.tileStore=new Oe(e),this._pendingTileUpdates.length=0}for(await this._createProcessorAndController(t),await this.update({config:t}),this.controller.resume(),this.tileStore.clear(),this.tileStore.updateTiles(r),this._paused=!1;this._pendingTileUpdates.length;)this.tileStore.updateTiles(this._pendingTileUpdates.pop())}async updateTiles(e){this._paused?this._pendingTileUpdates.push(e):this.tileStore?.updateTiles(e)}async update({config:e}){const t=rt.empty();return await Promise.all([this.processor.update(t,e),this.controller.update(t,e)]),t.toJSON()}async applyUpdate(e){return this.controller.applyUpdate(rt.create(e))}async _createProcessorAndController(e){await Promise.all([this._handleControllerConfig(e),this._handleProcessorConfig(e)]),this.controller.processor=this.processor}async _handleControllerConfig(e){return this._createController(this.service,e)}async _handleProcessorConfig(e){return this._createProcessor(this.service,e)}async _createController(e,t){this.controller&&this.controller.destroy();const{tileStore:s,remoteClient:r}=this,i=new kt({service:e,tileStore:s,remoteClient:r});return this.controller=i,i}async _createProcessor(e,t){const s=t.schema.processors[0].type,r=(await(i=s,"heatmap"===i?import("./HeatmapProcessor.js"):import("./SymbolProcessor.js"))).default;var i;const{remoteClient:a,tileStore:o}=this,n=new r({service:e,config:t,tileStore:o,remoteClient:a});return this.processor&&this.processor.destroy(),this.processor=n,n}};e([n()],Ut.prototype,"controller",void 0),e([n()],Ut.prototype,"processor",void 0),e([n()],Ut.prototype,"updating",null),e([n()],Ut.prototype,"viewState",void 0),Ut=e([h("esri.views.2d.layers.features.Pipeline")],Ut);const Et=Ut;export{Et as default};
