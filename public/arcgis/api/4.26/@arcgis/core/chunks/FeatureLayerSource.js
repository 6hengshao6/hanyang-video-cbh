/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import"../geometry.js";import e from"../Graphic.js";import{id as s}from"../kernel.js";import r from"../request.js";import o from"../TimeExtent.js";import a from"../core/Error.js";import{h as i}from"./typedArrayUtil.js";import{J as n}from"./jsonMap.js";import l from"../core/Loadable.js";import{i as p,a as u,u as m}from"./maybe.js";import{s as d}from"./object.js";import{debounce as c}from"../core/promiseUtils.js";import{join as y,dataComponents as h}from"../core/urlUtils.js";import{property as j}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import{subclass as f}from"../core/accessorSupport/decorators/subclass.js";import b from"../geometry/Extent.js";import{fromJSON as g}from"../geometry/support/jsonUtils.js";import{A as F}from"./assetEditingSupport.js";import{a as S}from"./clientSideDefaults.js";import{Q as R}from"./QueryTask.js";import{i as I}from"./arcgisLayerUrl.js";import{u as q}from"./editsZScale.js";import E from"../geometry/SpatialReference.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./get.js";import"./utils.js";import"./handleUtils.js";import"../core/lang.js";import"./metadata.js";import"./Logger.js";import"../config.js";import"./string.js";import"./ArrayPool.js";import"./tracking.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"./reader.js";import"./unitUtils.js";import"./Ellipsoid.js";import"./writer.js";import"../geometry/Multipoint.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"./aaBoundingRect.js";import"./mathUtils.js";import"./vec3.js";import"./common.js";import"./vec4.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"../PopupTemplate.js";import"../core/Clonable.js";import"../core/Collection.js";import"../core/Evented.js";import"./shared.js";import"./SimpleObservable.js";import"../layers/support/fieldUtils.js";import"./arcadeOnDemand.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"./enumeration.js";import"../popup/support/FieldInfoFormat.js";import"./date.js";import"./number.js";import"./locale.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"./chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../core/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../Color.js";import"./colorUtils.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils2.js";import"../symbols/edges/Edges3D.js";import"./screenUtils.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"./lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils3.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"./aaBoundingBox.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"./persistableUrlUtils.js";import"./Symbol3DAnchorPosition2D.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../core/Promise.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"./Thumbnail.js";import"./calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"./timeUtils.js";import"./QueryEngineCapabilities.js";import"./defaultsJSON.js";import"./DataLayerSource.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./fieldType.js";import"./utils4.js";import"./executeForIds.js";import"./query.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"./simplify.js";import"./utils5.js";import"./urlUtils2.js";import"./pbfQueryUtils.js";import"./pbf.js";import"./OptimizedFeature.js";import"./OptimizedFeatureSet.js";import"./queryZScale.js";import"./zscale.js";import"../rest/support/Query.js";import"./FullTextSearch.js";import"../rest/support/StatisticDefinition.js";import"./executeForExtent.js";import"./executeQueryJSON.js";import"../rest/support/FeatureSet.js";import"./executeQueryPBF.js";import"./featureConversionUtils.js";const O=new n({originalAndCurrentFeatures:"original-and-current-features",none:"none"});async function _(t){return"string"==typeof t?h(t)??{data:t}:new Promise(((e,s)=>{const r=new FileReader;r.readAsDataURL(t),r.onload=()=>e(h(r.result)),r.onerror=t=>s(t)}))}const w=new Set(["Feature Layer","Table"]),T=new n({Started:"published",Publishing:"publishing",Stopped:"unavailable"});let D=class extends l{constructor(){super(...arguments),this.type="feature-layer",this.refresh=c((async()=>{await this.load();const t=this.sourceJSON.editingInfo?.lastEditDate;if(null==t)return{dataChanged:!0,updates:{}};try{await this._fetchService(null)}catch{return{dataChanged:!0,updates:{}}}const e=t!==this.sourceJSON.editingInfo?.lastEditDate;return{dataChanged:e,updates:e?{editingInfo:this.sourceJSON.editingInfo,extent:this.sourceJSON.extent}:null}}))}load(t){const e=p(t)?t.signal:null,s=this.layer.sourceJSON;return this.addResolvingPromise(this._fetchService(s,e)),Promise.resolve(this)}get queryTask(){const{capabilities:t,parsedUrl:e,dynamicDataSource:s,infoFor3D:r,gdbVersion:o,spatialReference:a,fieldsIndex:n}=this.layer,l=i("featurelayer-pbf")&&t?.query.supportsFormatPBF&&u(r),p=t?.operations?.supportsQueryAttachments??!1;return new R({url:e.path,pbfSupported:l,fieldsIndex:n,infoFor3D:r,dynamicDataSource:s,gdbVersion:o,sourceSpatialReference:a,queryAttachmentsSupported:p})}async addAttachment(t,e){await this.load();const s=t.attributes[this.layer.objectIdField],o=this.layer.parsedUrl.path+"/"+s+"/addAttachment",a=this._getLayerRequestOptions(),i=this._getFormDataForAttachment(e,a.query);try{const t=await r(o,{body:i});return this._createFeatureEditResult(t.data.addAttachmentResult)}catch(t){throw this._createAttachmentErrorResult(s,t)}}async updateAttachment(t,e,s){await this.load();const o=t.attributes[this.layer.objectIdField],a=this.layer.parsedUrl.path+"/"+o+"/updateAttachment",i=this._getLayerRequestOptions({query:{attachmentId:e}}),n=this._getFormDataForAttachment(s,i.query);try{const t=await r(a,{body:n});return this._createFeatureEditResult(t.data.updateAttachmentResult)}catch(t){throw this._createAttachmentErrorResult(o,t)}}async applyEdits(t,e){await this.load();const o=this.layer.infoFor3D,a=p(o),i=a||(e?.globalIdUsed??!1),n=t.addFeatures?.map((t=>this._serializeFeature(t,o))).filter(p)??[],l=t.updateFeatures?.map((t=>this._serializeFeature(t,o))).filter(p)??[],u=this._getFeatureIds(t.deleteFeatures,i);q(n,l,this.layer.spatialReference);const d=[],c=[],y=[...t.deleteAttachments??[]];for(const e of t.addAttachments??[])d.push(await this._serializeAttachment(e));for(const e of t.updateAttachments??[])c.push(await this._serializeAttachment(e));const h=d.length||c.length||y.length?{adds:d,updates:c,deletes:y}:null;let j,f=null;if(a){f=new Map;const e=[];for(const s of t.addAssets??[])e.push(this._serializeAssetMapEditAndUploadAssets(s,f));const s=await Promise.all(e);j=s.length?{adds:s,updates:[],deletes:[]}:void 0}const b={gdbVersion:e?.gdbVersion||this.layer.gdbVersion,rollbackOnFailure:e?.rollbackOnFailureEnabled,useGlobalIds:i,returnEditMoment:e?.returnEditMoment,usePreviousEditMoment:e?.usePreviousEditMoment,sessionId:e?.sessionId};e?.returnServiceEditsOption?(b.edits=JSON.stringify([{id:this.layer.layerId,adds:n,updates:l,deletes:u,attachments:h,assetMaps:m(j)}]),b.returnServiceEditsOption=O.toJSON(e?.returnServiceEditsOption),b.returnServiceEditsInSourceSR=e?.returnServiceEditsInSourceSR):(b.adds=n.length?JSON.stringify(n):null,b.updates=l.length?JSON.stringify(l):null,b.deletes=u.length?i?JSON.stringify(u):u.join(","):null,b.attachments=h&&JSON.stringify(h),b.assetMaps=p(j)?JSON.stringify(j):void 0);const g=this._getLayerRequestOptions({method:"post",query:b}),F=e?.returnServiceEditsOption?this.layer.url:this.layer.parsedUrl.path,S=await r(F+"/applyEdits",g);if(!this.layer.capabilities.operations?.supportsEditing&&this.layer.effectiveCapabilities?.operations?.supportsEditing){const t=s?.findCredential(this.layer.url);await(t?.refreshToken())}if(a&&null!=S.data&&null!=S.data.assetMaps){const t=S.data,e=this.layer.objectIdField,s=[];for(const e of t.addResults)e.success&&s.push(e.objectId);for(const e of t.updateResults)e.success&&s.push(e.objectId);const o=this._createRequestQueryOptions(),a=await r(F+"/query",{...o,query:{f:"json",formatOf3DObjects:"3D_glb",where:`OBJECTID IN (${s.join(",")})`,outFields:`${e}`}});if(a&&a.data&&a.data.assetMaps&&p(f)){const t=a.data.assetMaps;for(const e of t){const t=f.get(e.parentGlobalId).geometry;p(t)&&"mesh"===t.type&&t.updateExternalSource({source:[{name:e.assetName,source:e.assetName}],extent:t.extent})}}}return this._createEditsResult(S)}async deleteAttachments(t,e){await this.load();const s=t.attributes[this.layer.objectIdField],o=this.layer.parsedUrl.path+"/"+s+"/deleteAttachments";try{return(await r(o,this._getLayerRequestOptions({query:{attachmentIds:e.join(",")},method:"post"}))).data.deleteAttachmentResults.map(this._createFeatureEditResult)}catch(t){throw this._createAttachmentErrorResult(s,t)}}fetchRecomputedExtents(t={}){const e=t.signal;return this.load({signal:e}).then((async()=>{const e=this._getLayerRequestOptions({...t,query:{returnUpdates:!0}}),{layerId:s,url:a}=this.layer,{data:i}=await r(`${a}/${s}`,e),{id:n,extent:l,fullExtent:p,timeExtent:u}=i,m=l||p;return{id:n,fullExtent:m&&b.fromJSON(m),timeExtent:u&&o.fromJSON({start:u[0],end:u[1]})}}))}async queryAttachments(t,e={}){await this.load();const s=this._getLayerRequestOptions(e);return this.queryTask.executeAttachmentQuery(t,s)}async queryFeatures(t,e){return await this.load(),this.queryTask.execute(t,{...e,query:this._createRequestQueryOptions(e)})}async queryFeaturesJSON(t,e){return await this.load(),this.queryTask.executeJSON(t,{...e,query:this._createRequestQueryOptions(e)})}async queryObjectIds(t,e){return await this.load(),this.queryTask.executeForIds(t,{...e,query:this._createRequestQueryOptions(e)})}async queryFeatureCount(t,e){return await this.load(),this.queryTask.executeForCount(t,{...e,query:this._createRequestQueryOptions(e)})}async queryExtent(t,e){return await this.load(),this.queryTask.executeForExtent(t,{...e,query:this._createRequestQueryOptions(e)})}async queryRelatedFeatures(t,e){return await this.load(),this.queryTask.executeRelationshipQuery(t,{...e,query:this._createRequestQueryOptions(e)})}async queryRelatedFeaturesCount(t,e){return await this.load(),this.queryTask.executeRelationshipQueryForCount(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopFeatures(t,e){return await this.load(),this.queryTask.executeTopFeaturesQuery(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopObjectIds(t,e){return await this.load(),this.queryTask.executeForTopIds(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopExtents(t,e){return await this.load(),this.queryTask.executeForTopExtents(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopCount(t,e){return await this.load(),this.queryTask.executeForTopCount(t,{...e,query:this._createRequestQueryOptions(e)})}async fetchPublishingStatus(){if(!I(this.layer.url))return"unavailable";const t=y(this.layer.url,"status"),e=await r(t,{query:{f:"json"}});return T.fromJSON(e.data.status)}_createRequestQueryOptions(t){const e={...this.layer.customParameters,token:this.layer.apiKey,...t?.query};return this.layer.datesInUnknownTimezone&&(e.timeReferenceUnknownClient=!0),e}async _fetchService(t,e){if(!t){const{data:s}=await r(this.layer.parsedUrl.path,this._getLayerRequestOptions({query:i("featurelayer-advanced-symbols")?{returnAdvancedSymbols:!0}:{},signal:e}));t=s}this.sourceJSON=this._patchServiceJSON(t);const s=t.type;if(!w.has(s))throw new a("feature-layer-source:unsupported-type",`Source type "${s}" is not supported`)}_patchServiceJSON(t){if("Table"!==t.type&&t.geometryType&&!t?.drawingInfo?.renderer&&!t.defaultSymbol){const e=S(t.geometryType).renderer;d("drawingInfo.renderer",e,t)}return"esriGeometryMultiPatch"===t.geometryType&&t.infoFor3D&&(t.geometryType="mesh"),t}_serializeFeature(t,e){const{geometry:s,attributes:r}=t;if(p(e)&&p(t.geometry)&&"mesh"===t.geometry.type){const s={...r},o=t.geometry,a=o.origin,i=o.transform;if(s[e.transformFieldRoles.originX]=a.x,s[e.transformFieldRoles.originY]=a.y,s[e.transformFieldRoles.originZ]=a.z,p(i)){const t=i.translation,r=i.scale,o=i.rotation;s[e.transformFieldRoles.translationX]=t[0],s[e.transformFieldRoles.translationY]=-t[2],s[e.transformFieldRoles.translationZ]=t[1],s[e.transformFieldRoles.scaleX]=r[0],s[e.transformFieldRoles.scaleY]=r[1],s[e.transformFieldRoles.scaleZ]=r[2],s[e.transformFieldRoles.rotationX]=o[0],s[e.transformFieldRoles.rotationY]=o[2],s[e.transformFieldRoles.rotationZ]=o[1],s[e.transformFieldRoles.rotationDeg]=o[3]}return{geometry:null,attributes:s}}return u(s)?{attributes:r}:"mesh"===s.type||"extent"===s.type?null:{geometry:s.toJSON(),attributes:r}}async _serializeAttachment(t){const{feature:e,attachment:s}=t,{globalId:r,name:o,contentType:a,data:i,uploadId:n}=s,l={globalId:r,parentGlobalId:null,contentType:null,name:null,uploadId:null,data:null};if(e&&(l.parentGlobalId="attributes"in e?e.attributes&&e.attributes[this.layer.globalIdField]:e.globalId),n)l.uploadId=n;else if(i){const t=await _(i);t&&(l.contentType=t.mediaType,l.data=t.data),i instanceof File&&(l.name=i.name)}return o&&(l.name=o),a&&(l.contentType=a),l}async _serializeAssetMapEditAndUploadAssets(t,e){const s=this.layer.url;let o=null;try{const e=new Blob([t.data],{type:t.mimeType}),i=new FormData;i.append("f","json"),i.append("file",e,`${t.assetName}`);const n={body:i,method:"post",responseType:"json"},{data:l}=await r(`${s}/uploads/upload`,n);if(!l.success)throw new a("feature-layer-source:upload-failure","Expected upload to be successfull.");o={assetType:t.assetType,assetUploadId:l.item.itemID}}catch(t){o=null}if(u(o)){const e=await _(new Blob([t.data]));if(!e.isBase64)throw new a("feature-layer-source:uploadAssets-failure","Expected gltf data in base64 format after conversion.");o={assetType:t.assetType,assetData:e.data}}if(u(o))throw new a("feature-layer-source:uploadAssets-failure","Unable to prepare uploadAsset request options.");const i={method:"post",query:{f:"json",assets:JSON.stringify([o])},responseType:"json"},n=await r(y(this.layer.parsedUrl.path,"uploadAssets"),i);if(1!==n.data.uploadResults.length||!n.data.uploadResults[0].success)throw new a("feature-layer-source:uploadAssets-failure","Bad response.");const l=n.data.uploadResults[0].assetHash,p=[];t.flags&F.PROJECT_VERTICES&&p.push("PROJECT_VERTICES");const m={globalId:t.assetMapGlobalId,parentGlobalId:t.featureGlobalId,assetName:t.assetName,assetHash:l,flags:p};return e.set(t.featureGlobalId,t.feature),m}_getFeatureIds(t,e){const s=t?.[0];return s?this._canUseGlobalIds(e,t)?this._getGlobalIdsFromFeatureIdentifier(t):"objectId"in s?this._getObjectIdsFromFeatureIdentifier(t):this._getIdsFromFeatures(t):[]}_getIdsFromFeatures(t){const e=this.layer.objectIdField;return t.map((t=>t.attributes&&t.attributes[e]))}_canUseGlobalIds(t,e){return t&&"globalId"in e[0]}_getObjectIdsFromFeatureIdentifier(t){return t.map((t=>t.objectId))}_getGlobalIdsFromFeatureIdentifier(t){return t.map((t=>t.globalId))}_createEditsResult(t){const e=t.data,{layerId:s}=this.layer,r=[];let o=null;if(Array.isArray(e))for(const t of e)r.push({id:t.id,editedFeatures:t.editedFeatures}),t.id===s&&(o={addResults:t.addResults??[],updateResults:t.updateResults??[],deleteResults:t.deleteResults??[],attachments:t.attachments,editMoment:t.editMoment});else o=e;const a=o?.attachments,i={addFeatureResults:o?.addResults?.map(this._createFeatureEditResult,this)??[],updateFeatureResults:o?.updateResults?.map(this._createFeatureEditResult,this)??[],deleteFeatureResults:o?.deleteResults?.map(this._createFeatureEditResult,this)??[],addAttachmentResults:a&&a.addResults?a.addResults.map(this._createFeatureEditResult,this):[],updateAttachmentResults:a&&a.updateResults?a.updateResults.map(this._createFeatureEditResult,this):[],deleteAttachmentResults:a&&a.deleteResults?a.deleteResults.map(this._createFeatureEditResult,this):[]};if(o?.editMoment&&(i.editMoment=o.editMoment),r.length>0){i.editedFeatureResults=[];for(const t of r){const{editedFeatures:e}=t,s=e?.spatialReference?new E(e.spatialReference):null;i.editedFeatureResults.push({layerId:t.id,editedFeatures:{adds:e?.adds?.map((t=>this._createEditedFeature(t,s)))||[],updates:e?.updates?.map((t=>({original:this._createEditedFeature(t[0],s),current:this._createEditedFeature(t[1],s)})))||[],deletes:e?.deletes?.map((t=>this._createEditedFeature(t,s)))||[],spatialReference:s}})}}return i}_createEditedFeature(t,s){return new e({attributes:t.attributes,geometry:g({...t.geometry,spatialReference:s})})}_createFeatureEditResult(t){const e=!0===t.success?null:t.error||{code:void 0,description:void 0};return{objectId:t.objectId,globalId:t.globalId,error:e?new a("feature-layer-source:edit-failure",e.description,{code:e.code}):null}}_createAttachmentErrorResult(t,e){const s=e.details.messages&&e.details.messages[0]||e.message,r=e.details.httpStatus||e.details.messageCode;return{objectId:t,globalId:null,error:new a("feature-layer-source:attachment-failure",s,{code:r})}}_getFormDataForAttachment(t,e){const s=t instanceof FormData?t:t&&t.elements?new FormData(t):null;if(s)for(const t in e){const r=e[t];null!=r&&(s.set?s.set(t,r):s.append(t,r))}return s}_getLayerRequestOptions(t={}){const{parsedUrl:e,gdbVersion:s,dynamicDataSource:r}=this.layer;return{...t,query:{gdbVersion:s,layer:r?JSON.stringify({source:r}):void 0,...e.query,f:"json",...this._createRequestQueryOptions(t)},responseType:"json"}}};t([j()],D.prototype,"type",void 0),t([j({constructOnly:!0})],D.prototype,"layer",void 0),t([j({readOnly:!0})],D.prototype,"queryTask",null),D=t([f("esri.layers.graphics.sources.FeatureLayerSource")],D);const x=D;export{x as default};
