/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../core/Evented.js";import{HandleOwner as i}from"../core/HandleOwner.js";import{clone as n}from"../core/lang.js";import{a as s,i as r,d as o,u as a,g as p,h as c,e as h}from"./maybe.js";import{ignoreAbortErrors as l}from"../core/promiseUtils.js";import{watch as d,syncAndInitial as m}from"../core/reactiveUtils.js";import{c as g,e as u}from"./screenUtils.js";import{property as v}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import{subclass as y}from"../core/accessorSupport/decorators/subclass.js";import{p as _}from"./dehydratedFeatureComparison.js";import{e as x,c as f,d as w}from"./elevationInfoUtils.js";import{V as S}from"./ViewingMode.js";import{c as b,E as V,a as T,C as O}from"./EditGeometryOperations.js";import{c as M,s as I}from"./dragEventPipeline.js";import D from"../views/interactive/sketch/SketchLabelOptions.js";import C from"../views/interactive/sketch/SketchTooltipOptions.js";import{S as E}from"./SnappingContext.js";import{c as P}from"./SnappingDragPipelineStep.js";import{S as k}from"./SnappingOperation.js";import{s as H}from"./snappingUtils.js";import{m as j}from"./dehydratedFeatures.js";import{c as Z}from"./hydratedFeatures.js";const G=["freehand","hybrid","click"],z="click";class F{constructor({grabbableForEvent:e}){this.events=new t,this.interactive=!0,this.selectable=!1,this.cursor=null,this.grabbable=!0,this.grabbableForEvent=e}intersectionDistance(e,t){return 0}attach(){}detach(){}onElevationChange(){}onViewChange(){}}let A=class extends(t.EventedMixin(i)){constructor(e){super(e),this._createOperationCompleted=!1,this._pointerDownStates=new Set,this.isDraped=!0,this.labelOptions=new D,this.tooltipOptions=new C,this.snapToSceneEnabled=null,this.lastVertex=null,s(e.elevationInfo)&&(this.elevationInfo=x(!!e.hasZ))}initialize(){const{geometryType:e,view:t}=this,i=t.spatialReference,n="viewingMode"in t.state?t.state.viewingMode:S.Local,o="segment"===e||"multipoint"===e?"polyline":e;this.coordinateHelper=b(this.hasZ,this.hasM,i),this._editGeometryOperations=new V(new T(o,this.coordinateHelper)),this._snappingOperation=new k({view:t,constrainResult:e=>s(e)?e:this._getEffectiveDrawSurface()?.constrainZ(e)}),this.handles.add(d((()=>this.stagedVertex),(e=>{s(e)||this.emit("cursor-update",{updated:null,vertices:[{componentIndex:0,vertexIndex:this._activeComponent.vertices.length,coordinates:this.coordinateHelper.pointToArray(e)}],operation:"apply",type:"vertex-update"})}),{sync:!0,equals:(e,t)=>c(e,t,_)})),this._activeComponent=new O(i,n),this._editGeometryOperations.data.components.push(this._activeComponent);const a=this.segmentLabels;r(a)&&(a.context={view:t,editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,labelOptions:this.labelOptions},this.handles.add([d((()=>this.labelOptions.enabled),(e=>{a.visible=e}),m),this.on("cursor-update",(()=>{const e=this.stagedVertex;a.stagedVertex=r(e)?this.coordinateHelper.pointToVector(e):null}))])),this.handles.add(this._editGeometryOperations.on(["vertex-add","vertex-update","vertex-remove"],(e=>{const t=e.vertices.map((e=>({componentIndex:0,vertexIndex:e.index,coordinates:this.coordinateHelper.vectorToArray(e.pos)}))),i=t.map((e=>e.coordinates));switch(e.type){case"vertex-add":this.emit(e.type,{...e,added:i,vertices:t});break;case"vertex-update":this.emit(e.type,{...e,updated:i,vertices:t});break;case"vertex-remove":this.emit(e.type,{...e,removed:i,vertices:t})}const n=this._activeComponent.getLastVertex(),o=r(n)?this.coordinateHelper.vectorToDehydratedPoint(n.pos):null;(s(o)||s(this.lastVertex)||!_(this.lastVertex,o))&&(this.lastVertex=o)}))),this._manipulator=new F({grabbableForEvent:e=>"click"!==this.drawingMode||"touch"===e.pointerType&&this._snappingEnabled&&1===this._pointerDownStates.size}),this.manipulators.add(this._manipulator),this._manipulator.grabbable="point"!==e,this.handles.add([this._createManipulatorDragPipeline(this._manipulator),this._manipulator.events.on("immediate-click",(e=>this._onImmediateClick(e))),this._manipulator.events.on("immediate-double-click",(e=>this._onImmediateDoubleClick(e)))]),H(this,(()=>{const e=h(this.view.inputManager.latestPointerType,"mouse"),t=this._getSnappingContext(e);r(this.snappingManager)&&this.updatingHandles.addPromise(l(this._snappingOperation.resnap(this.snappingManager,t)))}))}destroy(){o(this.segmentLabels),o(this._snappingOperation),this._editGeometryOperations=o(this._editGeometryOperations)}get _snappingEnabled(){return r(this.snappingManager)&&this.snappingManager.options.effectiveEnabled}get _requiresScenePoint(){const e=this._getEffectiveDrawSurface();return"3d"===this.view.type&&this.drawSurface!==e}get canRedo(){return this._editGeometryOperations.canRedo}get canUndo(){return this._editGeometryOperations.canUndo}get committedVertices(){return this._activeComponent.vertices.map((e=>this.coordinateHelper.vectorToArray(e.pos)))}set drawingMode(e){this._set("drawingMode",e??z)}get interactive(){return this._manipulator.interactive}set interactive(e){this._manipulator.interactive=e}get isCompleted(){return this._createOperationCompleted}get numCommittedVertices(){return this._activeComponent.vertices.length}get numVertices(){return r(this.stagedVertex)?this._activeComponent.vertices.length+1:this._activeComponent.vertices.length}get snappingOptions(){return r(this.snappingManager)?this.snappingManager.options:null}get stagedVertex(){return this._snappingOperation.stagedPoint}set stagedVertex(e){this._snappingOperation.stagedPoint=n(e)}get updating(){return this.updatingHandles.updating}get vertices(){const e=this.committedVertices;return r(this.stagedVertex)&&e.push(this.coordinateHelper.pointToArray(this.stagedVertex)),e}cancel(){this.complete({aborted:!0})}commitStagedVertex(){if(this._snappingOperation.abort(),r(this.stagedVertex)){const{stagedVertex:e}=this;this.stagedVertex=null,this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(e))}}complete(e){const t=e&&e.aborted||!1;this._snappingOperation.abort(),r(this.snappingManager)&&this.snappingManager.doneSnapping(),"segment"===this.geometryType||"point"===this.geometryType?this.commitStagedVertex():this.stagedVertex=null;const i="multipoint"===this.geometryType&&0===this.numVertices||"polyline"===this.geometryType&&this.numVertices<2||"polygon"===this.geometryType&&this.numVertices<3;this._createOperationCompleted=!i,(this.isCompleted||t)&&this.emit("complete",{vertices:this.vertices.map(((e,t)=>({componentIndex:0,vertexIndex:t,coordinates:e}))),aborted:t,type:"complete"})}onInputEvent(e){switch(e.type){case"pointer-down":this._pointerDownStates.add(e.pointerId);break;case"pointer-up":this._pointerDownStates.delete(e.pointerId)}switch(e.type){case"pointer-move":return this._onPointerMove(e);case"hold":return this._onHold(e)}}redo(){this._editGeometryOperations.redo()}undo(){r(this.snappingManager)&&this.snappingManager.doneSnapping(),this._editGeometryOperations.undo()}_closeOnClickVertexIndex(e){const t=this._activeComponent;if("polygon"===this.geometryType&&t.vertices.length>2){if(this._vertexWithinPointerDistance(t.vertices[0].pos,e))return 0;if(this._vertexWithinPointerDistance(t.vertices[t.vertices.length-1].pos,e))return t.vertices.length-1}return null}_createManipulatorDragPipeline(e){switch(a(this.drawingMode)){case"click":return this._createManipulatorDragPipelineClick(e);case"freehand":return this._createManipulatorDragPipelineFreehand(e);case"hybrid":return this._createManipulatorDragPipelineHybrid(e)}}_createManipulatorDragPipelineClick(e){return M(e,((e,t,i,n)=>{const s="touch"===n&&this._snappingEnabled;if(this.isCompleted||!s)return;const{snappingStep:o,cancelSnapping:a}=P({predicate:()=>s,snappingManager:this.snappingManager,snappingContext:new E({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,pointer:n,visualizer:this.snappingVisualizer}),updatingHandles:this.updatingHandles,useZ:!this._requiresScenePoint});i=i.next((e=>(s&&r(this.snappingManager)&&this.snappingManager.doneSnapping(),e))).next(a),t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this.stagedVertex=e.mapStart,("segment"===this.geometryType||s&&0===this.numVertices)&&this.commitStagedVertex()),e))).next(I(this.view,this.elevationInfo)).next(...o).next((e=>(s&&(this.stagedVertex=e.mapEnd,"end"===e.action&&this.commitStagedVertex()),e))).next((e=>("end"===e.action&&("segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()),e)))}))}_createManipulatorDragPipelineFreehand(e){return M(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(s(this.stagedVertex)&&(this.stagedVertex=e.mapStart),"segment"===this.geometryType&&this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this.stagedVertex=e.mapEnd,"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":this.complete()}return e}))}))}_createManipulatorDragPipelineHybrid(e){return M(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(s(this.stagedVertex)&&(this.stagedVertex=e.mapStart),this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this.stagedVertex=e.mapEnd,"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":"segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()}return e}))}))}get _drawAtFixedElevation(){return("segment"===this.geometryType||"polygon"===this.geometryType)&&this.numCommittedVertices>0}_getEffectiveDrawSurface(){if(s(this.elevationDrawSurface))return this.drawSurface;if(!this.coordinateHelper.hasZ())return this.elevationDrawSurface.defaultZ=null,this.elevationDrawSurface;let e=this.defaultZ,t=!1;return r(this.elevationInfo)&&"absolute-height"===this.elevationInfo.mode&&(t=!0),r(this.snapToSceneEnabled)&&(t=this.snapToSceneEnabled),r(this.elevationInfo)&&"on-the-ground"===this.elevationInfo.mode&&(t=!1),this._drawAtFixedElevation&&(e=this.coordinateHelper.getZ(this._activeComponent.vertices[0].pos),t=!1),t?this.drawSurface:(this.elevationDrawSurface.defaultZ=e,this.elevationDrawSurface)}_mapToScreen(e){return this._getEffectiveDrawSurface()?.mapToScreen(e)}_onHold(e){this._snappingOperation.abort(),"click"===this.drawingMode&&"touch"===e.pointerType&&this._snappingEnabled&&(this.stagedVertex=e.mapPoint),e.stopPropagation()}_onImmediateClick(e){if("mouse"===e.pointerType&&2===e.button||this._manipulator.dragging)return;const t=this._activeComponent,i=this._closeOnClickVertexIndex(e.screenPoint);if(r(i))return e.stopPropagation(),void this.complete();const n=this._screenToMap(e.screenPoint);if(r(n))switch(this.drawingMode){case"freehand":"point"===this.geometryType&&(r(this.stagedVertex)?this.commitStagedVertex():this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(n)),this.complete());break;case"click":case"hybrid":this._snappingOperation.abort(),r(this.stagedVertex)?this.commitStagedVertex():this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(n)),("point"===this.geometryType||"segment"===this.geometryType&&2===t.vertices.length||"segment"===this.geometryType&&"hybrid"===this.drawingMode&&1===t.vertices.length)&&this.complete()}e.stopPropagation()}_onImmediateDoubleClick(e){this._manipulator.dragging||"point"===this.geometryType||(this.complete(),e.stopPropagation())}_onPointerMove(e){const t=g(e.x,e.y),i=this._snappingOperation;if(this._manipulator.dragging||this._pointerDownStates.has(e.pointerId)||this._manipulator.grabbing||!this._manipulator.interactive)return void i.abort();e.stopPropagation();const n=this._closeOnClickVertexIndex(t);if(r(n))return this._closeOnVertex(n),void i.abort();const o=this._screenToMap(t),a=this._requiresScenePoint?this.drawSurface?.screenToMap(t):null;if(this._manipulator.cursor=r(o)?"crosshair":null,s(o))return void i.abort();const p=this.snappingManager;if(s(p))return this.stagedVertex=o,void i.abort();const c=this._getSnappingContext(e.pointerType);this.updatingHandles.addPromise(l(i.snap({point:o,scenePoint:a},p,c)))}_closeOnVertex(e){this.stagedVertex=null;const t={componentIndex:0,vertexIndex:e,coordinates:this.coordinateHelper.vectorToArray(this._activeComponent.vertices[e].pos)};this.emit("cursor-update",{updated:null,vertices:[t],operation:"apply",type:"vertex-update"})}_screenToMap(e){return this._getEffectiveDrawSurface()?.screenToMap(e)}_screenToMapDragEventStep(){let e=null;return t=>{if("start"===t.action&&(e=this._screenToMap(t.screenStart)),s(e))return null;const i=this._screenToMap(t.screenEnd);return r(i)?{...t,mapStart:e,mapEnd:i}:null}}_vertexWithinPointerDistance(e,t){const i=this._mapToScreen(this.coordinateHelper.vectorToDehydratedPoint(e));return!!r(i)&&function(e,t,i){const n=e.x-t.x,s=e.y-t.y;return n*n+s*s<=25}(i,t)}_getSnappingContext(e){const t=this._drawAtFixedElevation?p(this.elevationDrawSurface,(({defaultZ:e})=>e)):null;return new E({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,pointer:e,visualizer:this.snappingVisualizer,selfSnappingZ:r(t)?{value:t,elevationInfo:this.elevationInfo}:null})}};e([v()],A.prototype,"_snappingEnabled",null),e([v()],A.prototype,"defaultZ",void 0),e([v()],A.prototype,"isDraped",void 0),e([v({value:z})],A.prototype,"drawingMode",null),e([v({constructOnly:!0})],A.prototype,"elevationDrawSurface",void 0),e([v({constructOnly:!0})],A.prototype,"elevationInfo",void 0),e([v({constructOnly:!0,type:D})],A.prototype,"labelOptions",void 0),e([v({constructOnly:!0,type:C})],A.prototype,"tooltipOptions",void 0),e([v({constructOnly:!0})],A.prototype,"geometryType",void 0),e([v({constructOnly:!0})],A.prototype,"hasM",void 0),e([v({constructOnly:!0})],A.prototype,"hasZ",void 0),e([v({constructOnly:!0})],A.prototype,"manipulators",void 0),e([v({constructOnly:!0})],A.prototype,"drawSurface",void 0),e([v({constructOnly:!0})],A.prototype,"segmentLabels",void 0),e([v({constructOnly:!0})],A.prototype,"snappingManager",void 0),e([v({constructOnly:!0})],A.prototype,"snappingVisualizer",void 0),e([v()],A.prototype,"snapToSceneEnabled",void 0),e([v()],A.prototype,"_snappingOperation",void 0),e([v()],A.prototype,"stagedVertex",null),e([v()],A.prototype,"lastVertex",void 0),e([v()],A.prototype,"updating",null),e([v({constructOnly:!0})],A.prototype,"view",void 0),A=e([y("esri.views.draw.DrawOperation")],A);class U{constructor(e,t,i,n=null){this._elevationInfo=e,this.defaultZ=t,this._view=i,this._excludeGraphics=n}screenToMap(e){if(r(this.defaultZ))return this._view.sceneIntersectionHelper.intersectElevationFromScreen(u(e.x,e.y),this._elevationInfo,this.defaultZ,this._excludeGraphics);const t=this._view.sceneIntersectionHelper.intersectElevationFromScreen(u(e.x,e.y),this._elevationInfo,0,this._excludeGraphics);return r(t)&&(t.z=void 0),t}mapToScreen(e){const t=j(e.x,e.y,f(this._view,e,this._elevationInfo),e.spatialReference);return this._view.toScreen(t)}constrainZ(e){const{defaultZ:t}=this;return r(t)&&e.z!==t&&((e=Z(e)).z=t),e}}class L{constructor(e,t,i=[]){this.view=e,this.elevationInfo=t,this.exclude=i}screenToMap(e){const t=this.view.toMap(e,{exclude:this.exclude});return r(t)&&(t.z=w(t,this.view,this.elevationInfo)),t}mapToScreen(e){let t=e;return r(this.elevationInfo)&&(t=j(e.x,e.y,f(this.view,e,this.elevationInfo),e.spatialReference)),this.view.toScreen(t)}constrainZ(e){return e}}class R{constructor(e,t=!1,i=0){this.view=e,this.hasZ=t,this.defaultZ=i,this.mapToScreen=t=>e.toScreen(t),this.screenToMap=t?t=>{const n=e.toMap(t);return n.z=i,n}:t=>e.toMap(t)}constrainZ(e){const{defaultZ:t}=this;return this.hasZ&&e.z!==t&&((e=Z(e)).z=t),e}}export{A as D,U as E,R as M,L as S,G as a,z as d};
