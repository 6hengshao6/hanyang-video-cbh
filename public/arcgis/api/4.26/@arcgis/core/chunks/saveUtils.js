/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{r}from"./asyncUtils.js";import o from"../core/Error.js";import{i as e}from"./maybe.js";import{eachAlways as s,throwIfAborted as t}from"../core/promiseUtils.js";import{g as p}from"./uuid.js";import{getSiblingOfSameTypeI as c}from"./resourceUtils.js";import"./tslib.es6.js";import"../core/Accessor.js";import"../core/Handles.js";import"../core/accessorSupport/decorators/subclass.js";import"./typedArrayUtil.js";import"./metadata.js";import"../core/lang.js";import"./utils.js";import"./handleUtils.js";import"./tracking.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";import"./ensureType.js";import"./get.js";import"./ArrayPool.js";import"../core/accessorSupport/decorators/property.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";async function i(r,e,i){if(!e||!e.resources)return;const n=e.portalItem===r.portalItem?new Set(r.paths):new Set;r.paths.length=0,r.portalItem=e.portalItem;const u=new Set(e.resources.toKeep.map((r=>r.resource.path))),h=new Set,l=[];u.forEach((o=>{n.delete(o),r.paths.push(o)}));for(const o of e.resources.toUpdate)if(n.delete(o.resource.path),u.has(o.resource.path)||h.has(o.resource.path)){const{resource:e,content:s,finish:t,error:m}=o,n=c(e,p());r.paths.push(n.path),l.push(a({resource:n,content:s,compress:o.compress,finish:t,error:m},i))}else r.paths.push(o.resource.path),l.push(m(o,i)),h.add(o.resource.path);for(const o of e.resources.toAdd)l.push(a(o,i)),r.paths.push(o.resource.path);if(n.forEach((r=>{if(e.portalItem){const o=e.portalItem.resourceFromPath(r);l.push(o.portalItem.removeResource(o).catch((()=>{})))}})),0===l.length)return;const j=await s(l);t(i);const f=j.filter((r=>"error"in r)).map((r=>r.error));if(f.length>0)throw new o("save:resources","Failed to save one or more resources",{errors:f})}async function a(o,s){const t={...e(s)?s:{},compress:o.compress},p=await r(o.resource.portalItem.addResource(o.resource,o.content,t));if(!0!==p.ok)throw o.error?.(p.error),p.error;o.finish?.(o.resource)}async function m(o,e){const s=await r(o.resource.update(o.content,e));if(!0!==s.ok)throw o.error?.(s.error),s.error;o.finish?.(o.resource)}export{i as saveResources};
