/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{p as t,i as e,a as s,g as i,e as r}from"./maybe.js";import{after as n}from"../core/promiseUtils.js";import{M as a}from"../core/scheduling.js";import{T as l,w as o}from"./Texture.js";import{C as h}from"./context-util.js";import{B as _,q as u,F as c,p as f,e as d,f as E,R as g,g as p,h as F,T as b,b as R,P as T,a as B,c as m,U as A,k as x,d as S,D as O,S as C,j as v,s as M,n as U,t as P,u as N,l as y}from"./enums3.js";import{P as w}from"./ProgramCache.js";import{m as D,S as G}from"./renderState.js";import{F as I,B as L,V as X,c as k}from"./FramebufferObject.js";import{h as W}from"./typedArrayUtil.js";import{g as V}from"./interfaces2.js";import{A as j}from"./AppleAmdDriverHelper.js";import{u as H}from"./floatRGBA.js";import{f as Y}from"./vec3.js";import{e as z}from"./doublePrecisionUtils.js";import{V as K}from"./VertexElementDescriptor.js";import{e as q}from"./OrderIndependentTransparency.js";import{L as $}from"./Logger.js";import{a as Q}from"./DefaultVertexAttributeLayouts.js";import{i as Z,c as J}from"./DisjointTimerQuery.js";class tt{constructor(){this.blend=!1,this.blendColor={r:0,g:0,b:0,a:0},this.blendFunction={srcRGB:_.ONE,dstRGB:_.ZERO,srcAlpha:_.ONE,dstAlpha:_.ZERO},this.blendEquation={mode:u.ADD,modeAlpha:u.ADD},this.colorMask={r:!0,g:!0,b:!0,a:!0},this.faceCulling=!1,this.cullFace=c.BACK,this.frontFace=f.CCW,this.scissorTest=!1,this.scissorRect={x:0,y:0,width:0,height:0},this.depthTest=!1,this.depthFunction=d.LESS,this.clearDepth=1,this.depthWrite=!0,this.depthRange={zNear:0,zFar:1},this.viewport=null,this.stencilTest=!1,this.polygonOffsetFill=!1,this.polygonOffset=[0,0],this.stencilFunction={face:c.FRONT_AND_BACK,func:d.ALWAYS,ref:0,mask:1},this.clearStencil=0,this.stencilWriteMask=1,this.stencilOperation={face:c.FRONT_AND_BACK,fail:E.KEEP,zFail:E.KEEP,zPass:E.KEEP},this.clearColor={r:0,g:0,b:0,a:0},this.program=null,this.vertexBuffer=null,this.indexBuffer=null,this.uniformBuffer=null,this.pixelPackBuffer=null,this.pixelUnpackBuffer=null,this.copyReadBuffer=null,this.copyWriteBuffer=null,this.uniformBufferBindingPoints=new Array,this.readFramebuffer=null,this.drawFramebuffer=null,this.renderbuffer=null,this.activeTexture=0,this.textureUnitMap=new Array,this.vertexArrayObject=null}}class et{constructor(t){this._allocations=new Map,t?Error.stackTraceLimit=1/0:(this.add=()=>{},this.remove=()=>{})}add(t){this._allocations.set(t,(new Error).stack)}remove(t){this._allocations.delete(t)}get information(){let t="";if(this._allocations.size>0){t+=`${this._allocations.size} live object allocations:\n`;const e=new Map;this._allocations.forEach((t=>{e.set(t,(e.get(t)??0)+1)})),e.forEach(((e,s)=>{const i=s.split("\n");i.shift(),i.shift(),t+=`${e}: ${i.shift()}\n`,i.forEach((e=>t+=`   ${e}\n`))}))}return t}}class st{constructor(){for(this._current=new Array,this._max=new Array,this._allocations=new et(!1);this._current.length<g.COUNT;)this._current.push(0),this._max.push(0)}resetMax(){for(this._max.length=0;this._max.length<this._current.length;)this._max.push(0)}increment(t,e){const s=++this._current[t];this._max[t]=Math.max(s,this._max[t]),this._allocations.add(e)}decrement(t,e){--this._current[t],this._allocations.remove(e)}get max(){return this._max}get current(){return this._current}get total(){return this.current.reduce(((t,e)=>t+e),0)}get resourceInformation(){let t="";if(this.total>0){t+="Live objects:\n";for(let e=0;e<g.COUNT;++e){const s=this._current[e];s>0&&(t+=`${g[e]}: ${s}\n`)}}return t+=this._allocations.information,t}}class it{constructor(){this._result=!1}dispose(){this._program=t(this._program)}get result(){return e(this._program)&&(this._result=this._test(this._program),this.dispose()),this._result}}class rt extends it{constructor(t){super(),this._rctx=t,this._helperProgram=null,this._rctx.type===h.WEBGL2&&W("mac")&&W("chrome")&&(this._program=this._prepareProgram(),this._helperProgram=this._prepareHelperProgram())}dispose(){super.dispose(),this._helperProgram?.dispose(),this._helperProgram=null}_test(t){const e=this._rctx;e.resetState();const s=new I(e,{colorTarget:p.TEXTURE,depthStencilTarget:F.NONE},{target:b.TEXTURE_2D,wrapMode:R.CLAMP_TO_EDGE,pixelFormat:T.RGBA,dataType:B.UNSIGNED_BYTE,samplingMode:m.NEAREST,width:1,height:1}),i=L.createIndex(this._rctx,A.STATIC_DRAW,new Uint8Array([0]));e.bindFramebuffer(s),e.setViewport(0,0,1,1),e.useProgram(this._helperProgram),e.bindBuffer(i,x.ELEMENT_ARRAY_BUFFER),e.drawElements(S.POINTS,1,O.UNSIGNED_BYTE,0),e.useProgram(t),e.bindVAO(null),e.drawArrays(S.TRIANGLES,0,258);const r=new Uint8Array(4);return s.readPixels(0,0,1,1,T.RGBA,B.UNSIGNED_BYTE,r),s.dispose(),i.dispose(),255===r[0]}_prepareProgram(){const t=`#version 300 es\n    precision highp float;\n\n    out float triangleId;\n\n    const vec3 triangleVertices[3] = vec3[3](vec3(-0.5, -0.5, 0.0), vec3(0.5, -0.5, 0.0), vec3(0.0, 0.5, 0.0));\n\n    void main(void) {\n      triangleId = floor(float(gl_VertexID)/3.0);\n\n      vec3 position = triangleVertices[gl_VertexID % 3];\n      float offset = triangleId / ${V.float(85)};\n      position.z = 0.5 - offset;\n\n      gl_Position = vec4(position, 1.0);\n    }\n    `,e=`#version 300 es\n    precision highp float;\n\n    in float triangleId;\n\n    out vec4 fragColor;\n\n    void main(void) {\n      fragColor = triangleId == ${V.float(85)} ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);\n    }\n    `;return this._rctx.programCache.acquire(t,e,new Map([]))}_prepareHelperProgram(){const t=j.getShaderSources();return this._rctx.programCache.acquire(t.vertex,t.fragment,new Map([]))}}class nt extends it{constructor(t){super(),this._rctx=t,this._program=at(this._rctx,!1),this._obfuscated=at(this._rctx,!0)}dispose(){super.dispose(),this._obfuscated=t(this._obfuscated)}_test(t){if(W("force-double-precision-obfuscation"))return!0;if(s(this._obfuscated))return!1;const e=this._runProgram(t),i=this._runProgram(this._obfuscated);return 0!==e&&(0===i||e/i>5)}_runProgram(t){const e=this._rctx;e.resetState();const s=new I(e,{colorTarget:p.TEXTURE,depthStencilTarget:F.NONE},{target:b.TEXTURE_2D,wrapMode:R.CLAMP_TO_EDGE,pixelFormat:T.RGBA,dataType:B.UNSIGNED_BYTE,samplingMode:m.NEAREST,width:1,height:1}),i=L.createVertex(e,A.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),r=new X(e,new Map([["position",0]]),{geometry:[new K("position",2,O.UNSIGNED_SHORT,0,4)]},{geometry:i}),n=Y(5633261.287538229,2626832.878767164,1434988.0495278358),a=Y(5633271.46742708,2626873.6381334523,1434963.231608387),l=new Float32Array(6);z(n,l,3);const o=new Float32Array(6);z(a,o,3),e.useProgram(t),t.setUniform3f("u_highA",l[0],l[2],l[4]),t.setUniform3f("u_lowA",l[1],l[3],l[5]),t.setUniform3f("u_highB",o[0],o[2],o[4]),t.setUniform3f("u_lowB",o[1],o[3],o[5]),e.bindFramebuffer(s),e.setViewport(0,0,1,1),e.bindVAO(r),e.drawArrays(S.TRIANGLE_STRIP,0,4);const h=new Uint8Array(4);s.readPixels(0,0,1,1,T.RGBA,B.UNSIGNED_BYTE,h),r.dispose(!1),i.dispose(),s.dispose();const _=(n[2]-a[2])/25,u=H(h);return Math.abs(_-u)}}function at(t,e){const s=`\n\n  precision highp float;\n\n  attribute vec2 position;\n\n  uniform vec3 u_highA;\n  uniform vec3 u_lowA;\n  uniform vec3 u_highB;\n  uniform vec3 u_lowB;\n\n  varying vec4 v_color;\n\n  ${e?"#define DOUBLE_PRECISION_REQUIRES_OBFUSCATION":""}\n\n  #ifdef DOUBLE_PRECISION_REQUIRES_OBFUSCATION\n\n  vec3 dpPlusFrc(vec3 a, vec3 b) {\n    return mix(a, a + b, vec3(notEqual(b, vec3(0))));\n  }\n\n  vec3 dpMinusFrc(vec3 a, vec3 b) {\n    return mix(vec3(0), a - b, vec3(notEqual(a, b)));\n  }\n\n  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\n    vec3 t1 = dpPlusFrc(hiA, hiB);\n    vec3 e = dpMinusFrc(t1, hiA);\n    vec3 t2 = dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;\n    return t1 + t2;\n  }\n\n  #else\n\n  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\n    vec3 t1 = hiA + hiB;\n    vec3 e = t1 - hiA;\n    vec3 t2 = ((hiB - e) + (hiA - (t1 - e))) + loA + loB;\n    return t1 + t2;\n  }\n\n  #endif\n\n  const float MAX_RGBA_FLOAT =\n    255.0 / 256.0 +\n    255.0 / 256.0 / 256.0 +\n    255.0 / 256.0 / 256.0 / 256.0 +\n    255.0 / 256.0 / 256.0 / 256.0 / 256.0;\n\n  const vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);\n\n  vec4 float2rgba(const float value) {\n    // Make sure value is in the domain we can represent\n    float valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);\n\n    // Decompose value in 32bit fixed point parts represented as\n    // uint8 rgba components. Decomposition uses the fractional part after multiplying\n    // by a power of 256 (this removes the bits that are represented in the previous\n    // component) and then converts the fractional part to 8bits.\n    vec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);\n\n    // Convert uint8 values (from 0 to 255) to floating point representation for\n    // the shader\n    const float toU8AsFloat = 1.0 / 255.0;\n\n    return fixedPointU8 * toU8AsFloat;\n  }\n\n  void main() {\n    vec3 val = dpAdd(u_highA, u_lowA, -u_highB, -u_lowB);\n\n    v_color = float2rgba(val.z / 25.0);\n\n    gl_Position = vec4(position * 2.0 - 1.0, 0.0, 1.0);\n  }\n  `;return t.programCache.acquire(s,"\n  precision highp float;\n\n  varying vec4 v_color;\n\n  void main() {\n    gl_FragColor = v_color;\n  }\n  ",new Map([["position",0]]))}class lt extends it{constructor(t){super(),this._rctx=t,t.gl&&(t.type!==h.WEBGL1?t.capabilities.textureFloat?.textureFloat&&t.capabilities.colorBufferFloat?.textureFloat&&t.capabilities.colorBufferFloat?.floatBlend&&(this._program=t.programCache.acquire("\n    precision highp float;\n    attribute vec2 a_pos;\n\n    void main() {\n      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n    }\n    ","\n     precision highp float;\n\n     void main() {\n      gl_FragColor = vec4(0.5, 0.5, 0.5, 0.5);\n     }\n    ",new Map([["a_pos",0]]))):this._result=!(!t.capabilities.textureFloat?.textureFloat||!t.capabilities.colorBufferFloat?.textureFloat))}_test(t){const e=this._rctx,s=new I(e,{colorTarget:p.TEXTURE,depthStencilTarget:F.NONE},{target:b.TEXTURE_2D,wrapMode:R.CLAMP_TO_EDGE,pixelFormat:T.RGBA,dataType:B.FLOAT,internalFormat:C.RGBA32F,samplingMode:m.NEAREST,width:1,height:1}),i=L.createVertex(e,A.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),r=new X(e,new Map([["a_pos",0]]),{geometry:[new K("a_pos",2,O.UNSIGNED_SHORT,0,4)]},{geometry:i});e.useProgram(t);const n=e.getBoundFramebufferObject(),{x:a,y:l,width:o,height:h}=e.getViewport();e.bindFramebuffer(s),e.setViewport(0,0,1,1),e.bindVAO(r),e.drawArrays(S.TRIANGLE_STRIP,0,4);const _=D({blending:q});e.setPipelineState(_),e.drawArrays(S.TRIANGLE_STRIP,0,4);const u=e.gl.getError();return e.setViewport(a,l,o,h),e.bindFramebuffer(n),r.dispose(!1),i.dispose(),s.dispose(),1282!==u||(console.warn("Device claims support for WebGL extension EXT_float_blend but does not support it. Using fall back."),!1)}}class ot extends it{constructor(t){super(),this._rctx=t,this._program=t.programCache.acquire("\n      precision highp float;\n      attribute vec2 a_pos;\n      uniform highp sampler2D u_texture;\n      varying vec4 v_color;\n\n      float getBit(in float bitset, in int bitIndex) {\n        float offset = pow(2.0, float(bitIndex));\n        return mod(floor(bitset / offset), 2.0);\n      }\n\n      void main() {\n        vec4 value = texture2D(u_texture, vec2(0.0));\n        float bit = getBit(value.x * 255.0, 1);\n\n        v_color = bit * vec4(1.0);\n        gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n      }\n      ","\n      precision highp float;\n      varying vec4 v_color;\n\n      void main() {\n        gl_FragColor = v_color;\n      }\n      ",new Map([["a_pos",0]]))}_test(t){const e=this._rctx,s=new I(e,{colorTarget:p.TEXTURE,depthStencilTarget:F.NONE},{target:b.TEXTURE_2D,wrapMode:R.CLAMP_TO_EDGE,pixelFormat:T.RGBA,dataType:B.UNSIGNED_BYTE,samplingMode:m.NEAREST,width:1,height:1}),i=new Uint8Array(4),r=L.createVertex(e,A.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),n=new X(e,new Map([["a_position",0]]),{geometry:[new K("a_position",2,O.SHORT,0,4)]},{geometry:r});e.useProgram(t);const a=new l(e,{target:b.TEXTURE_2D,wrapMode:R.CLAMP_TO_EDGE,pixelFormat:T.RGBA,dataType:B.UNSIGNED_BYTE,samplingMode:m.NEAREST,width:1,height:1},new Uint8Array([2,255,0,0]));t.setUniform1i("u_texture",0),e.bindTexture(a,0);const o=e.getBoundFramebufferObject();e.bindFramebuffer(s),e.useProgram(t);const{x:h,y:_,width:u,height:c}=e.getViewport();e.setViewport(0,0,1,1),e.bindVAO(n),e.drawArrays(S.TRIANGLE_STRIP,0,4),e.setViewport(h,_,u,c),s.readPixels(0,0,1,1,T.RGBA,B.UNSIGNED_BYTE,i),n.dispose(!1),r.dispose(),s.dispose();const f=255!==i[0]||255!==i[1]||255!==i[2]||255!==i[3];return f&&$.getLogger("esri.views.webgl.testSamplerPrecision").warn(`A problem was detected with your graphics driver. Your driver does not appear to honor sampler precision specifiers, which may result in rendering issues due to numerical instability. We recommend ensuring that your drivers have been updated to the latest version. Applying lowp sampler workaround. [${i[0]}.${i[1]}.${i[2]}.${i[3]}]`),e.bindFramebuffer(o),f}}class ht extends it{constructor(t){super(),this._rctx=t,this._image=new Image,this._image.src="data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='5' height='5' version='1.1' viewBox='0 0 5 5' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='5' height='5' fill='%23f00' fill-opacity='.5'/%3E%3C/svg%3E%0A",this._image.width=5,this._image.height=5,this._image.decode(),this._program=t.programCache.acquire("\n    precision highp float;\n\n    attribute vec2 a_pos;\n    varying vec2 v_uv;\n\n    void main() {\n      v_uv = a_pos;\n      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n    }\n    ","\n    precision highp float;\n\n    varying vec2 v_uv;\n\n    uniform sampler2D u_texture;\n\n    void main() {\n      gl_FragColor = texture2D(u_texture, v_uv);\n    }\n    ",new Map([["a_pos",0]]))}dispose(){super.dispose(),this._image.src=""}_test(t){const e=this._rctx;if(!e.gl)return t.dispose(),!0;const s=new I(e,{colorTarget:p.TEXTURE,depthStencilTarget:F.NONE},{target:b.TEXTURE_2D,wrapMode:R.CLAMP_TO_EDGE,pixelFormat:T.RGBA,dataType:B.UNSIGNED_BYTE,samplingMode:m.NEAREST,width:1,height:1}),i=L.createVertex(e,A.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),r=new X(e,new Map([["a_pos",0]]),Q,{geometry:i}),n=new l(e,{dataType:B.UNSIGNED_BYTE,pixelFormat:T.RGBA,preMultiplyAlpha:!1,wrapMode:R.CLAMP_TO_EDGE,samplingMode:m.LINEAR},this._image);e.useProgram(t),e.bindTexture(n,0),t.setUniform1i("u_texture",0);const a=e.getBoundFramebufferObject(),{x:o,y:h,width:_,height:u}=e.getViewport();e.bindFramebuffer(s),e.setViewport(0,0,1,1),e.setClearColor(0,0,0,0),e.setBlendingEnabled(!1),e.clearSafe(v.COLOR_BUFFER_BIT),e.bindVAO(r),e.drawArrays(S.TRIANGLE_STRIP,0,4);const c=new Uint8Array(4);return s.readPixels(0,0,1,1,T.RGBA,B.UNSIGNED_BYTE,c),r.dispose(!1),i.dispose(),s.dispose(),n.dispose(),e.setViewport(o,h,_,u),e.bindFramebuffer(a),255!==c[0]}}class _t{constructor(t){this.rctx=t,this.floatBufferBlend=new lt(t),this.svgPremultipliesAlpha=new ht(t),this.doublePrecisionRequiresObfuscation=new nt(t),this.ignoresSamplerPrecision=new ot(t),this.drawArraysRequiresIndicesTypeReset=new rt(t)}dispose(){this.ignoresSamplerPrecision.dispose(),this.doublePrecisionRequiresObfuscation.dispose(),this.svgPremultipliesAlpha.dispose(),this.floatBufferBlend.dispose(),this.drawArraysRequiresIndicesTypeReset.dispose()}}function ut(t,e,s,i,r){if(i&&Z(t))return!0;if(e[s])return!1;for(const e of r)if(t.getExtension(e))return!0;return!1}class ct{constructor(t,e){this._gl=t,this._instancing=null,this._vertexArrayObject=null,this._compressedTextureETC=null,this._compressedTextureS3TC=null,this._textureFilterAnisotropic=null,this._textureFloat=null,this._colorBufferFloat=null,this._minMaxBlending=null,this._loseContext=null,this._drawBuffers=null,this._textureNorm16=null,this._depthTexture=null,this._textureFloatLinear=null,this._disabledExtensions=e.disabledExtensions||{},this._debugWebGLExtensions=e.debugWebGLExtensions||{}}get drawBuffers(){return this._drawBuffers||(this._drawBuffers=function(t,e){if(e.disjointTimerQuery)return null;if(Z(t))return{drawBuffers:t.drawBuffers.bind(t),MAX_DRAW_BUFFERS:t.MAX_DRAW_BUFFERS,MAX_COLOR_ATTACHMENTS:t.MAX_COLOR_ATTACHMENTS};if(e.drawBuffers)return null;const s=t.getExtension("WEBGL_draw_buffers");return s?{drawBuffers:s.drawBuffersWEBGL.bind(s),MAX_DRAW_BUFFERS:s.MAX_DRAW_BUFFERS_WEBGL,MAX_COLOR_ATTACHMENTS:s.MAX_COLOR_ATTACHMENTS_WEBGL}:null}(this._gl,this._disabledExtensions)),this._drawBuffers}get instancing(){return this._instancing||(this._instancing=function(t){if(Z(t))return t;const e=t.getExtension("ANGLE_instanced_arrays");return e?{drawArraysInstanced:e.drawArraysInstancedANGLE.bind(e),drawElementsInstanced:e.drawElementsInstancedANGLE.bind(e),vertexAttribDivisor:e.vertexAttribDivisorANGLE.bind(e)}:null}(this._gl)),this._instancing}get vao(){return this._vertexArrayObject||(this._vertexArrayObject=function(t,e){if(Z(t))return{createVertexArray:t.createVertexArray.bind(t),deleteVertexArray:t.deleteVertexArray.bind(t),bindVertexArray:t.bindVertexArray.bind(t)};if(e.vao)return null;const s=t.getExtension("OES_vertex_array_object")||t.getExtension("MOZ_OES_vertex_array_object")||t.getExtension("WEBKIT_OES_vertex_array_object");return s?{createVertexArray:s.createVertexArrayOES.bind(s),deleteVertexArray:s.deleteVertexArrayOES.bind(s),bindVertexArray:s.bindVertexArrayOES.bind(s)}:null}(this._gl,this._disabledExtensions)),this._vertexArrayObject}get compressedTextureETC(){return this._compressedTextureETC||(this._compressedTextureETC=function(t,e){if(e.compressedTextureETC)return null;const s=t.getExtension("WEBGL_compressed_texture_etc");return s?{COMPRESSED_R11_EAC:s.COMPRESSED_R11_EAC,COMPRESSED_SIGNED_R11_EAC:s.COMPRESSED_SIGNED_R11_EAC,COMPRESSED_RG11_EAC:s.COMPRESSED_RG11_EAC,COMPRESSED_SIGNED_RG11_EAC:s.COMPRESSED_SIGNED_RG11_EAC,COMPRESSED_RGB8_ETC2:s.COMPRESSED_RGB8_ETC2,COMPRESSED_SRGB8_ETC2:s.COMPRESSED_SRGB8_ETC2,COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:s.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:s.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_RGBA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC,COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC}:null}(this._gl,this._disabledExtensions)),this._compressedTextureETC}get compressedTextureS3TC(){return this._compressedTextureS3TC||(this._compressedTextureS3TC=function(t,e){if(e.compressedTextureS3TC)return null;const s=t.getExtension("WEBGL_compressed_texture_s3tc");return s?{COMPRESSED_RGB_S3TC_DXT1:s.COMPRESSED_RGB_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT1:s.COMPRESSED_RGBA_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT3:s.COMPRESSED_RGBA_S3TC_DXT3_EXT,COMPRESSED_RGBA_S3TC_DXT5:s.COMPRESSED_RGBA_S3TC_DXT5_EXT}:null}(this._gl,this._disabledExtensions)),this._compressedTextureS3TC}get textureFilterAnisotropic(){return this._textureFilterAnisotropic||(this._textureFilterAnisotropic=function(t,e){if(e.textureFilterAnisotropic)return null;const s=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");return s?{MAX_TEXTURE_MAX_ANISOTROPY:s.MAX_TEXTURE_MAX_ANISOTROPY_EXT,TEXTURE_MAX_ANISOTROPY:s.TEXTURE_MAX_ANISOTROPY_EXT}:null}(this._gl,this._disabledExtensions)),this._textureFilterAnisotropic}get disjointTimerQuery(){return this._disjointTimerQuery||(this._disjointTimerQuery=J(this._gl,this._disabledExtensions)),this._disjointTimerQuery}get textureFloat(){return this._textureFloat||(this._textureFloat=function(t,e){if(Z(t))return{textureFloat:!0,textureFloatLinear:!e.textureFloatLinear&&!!t.getExtension("OES_texture_float_linear"),textureHalfFloat:!0,textureHalfFloatLinear:!0,HALF_FLOAT:t.HALF_FLOAT,R16F:t.R16F,RG16F:t.RG16F,RGBA16F:t.RGBA16F,R32F:t.R32F,RG32F:t.RG32F,RGBA32F:t.RGBA32F,R11F_G11F_B10F:t.R11F_G11F_B10F,RGB16F:t.RGB16F};if(t instanceof WebGLRenderingContext){const s=!e.textureHalfFloat&&t.getExtension("OES_texture_half_float");return{textureFloat:!e.textureFloat&&!!t.getExtension("OES_texture_float"),textureFloatLinear:!e.textureFloatLinear&&!!t.getExtension("OES_texture_float_linear"),textureHalfFloat:!!s,textureHalfFloatLinear:!e.textureHalfFloatLinear&&!!t.getExtension("OES_texture_half_float_linear"),HALF_FLOAT:s?s.HALF_FLOAT_OES:void 0}}return null}(this._gl,this._disabledExtensions)),this._textureFloat}get colorBufferFloat(){return this._colorBufferFloat||(this._colorBufferFloat=function(t,e){if(Z(t)){const s=!e.colorBufferHalfFloat&&t.getExtension("EXT_color_buffer_half_float")||!e.colorBufferFloat&&t.getExtension("EXT_color_buffer_float"),i=!e.colorBufferFloat&&t.getExtension("EXT_color_buffer_float"),r=!e.floatBlend&&!e.colorBufferFloat&&t.getExtension("EXT_float_blend");return s||i||r?{textureFloat:!!i,textureHalfFloat:!!s,floatBlend:!!r,R16F:t.R16F,RG16F:t.RG16F,RGBA16F:t.RGBA16F,R32F:t.R32F,RG32F:t.RG32F,RGBA32F:t.RGBA32F,R11F_G11F_B10F:t.R11F_G11F_B10F,RGB16F:t.RGB16F}:null}if(t instanceof WebGLRenderingContext){const s=!e.colorBufferHalfFloat&&t.getExtension("EXT_color_buffer_half_float"),i=!e.colorBufferFloat&&t.getExtension("WEBGL_color_buffer_float"),r=!e.floatBlend&&!e.colorBufferFloat&&t.getExtension("EXT_float_blend");return s||i||r?{textureFloat:!!i,textureHalfFloat:!!s,floatBlend:!!r,RGBA16F:s?s.RGBA16F_EXT:void 0,RGB16F:s?s.RGB16F_EXT:void 0,RGBA32F:i?i.RGBA32F_EXT:void 0}:null}return null}(this._gl,this._disabledExtensions)),this._colorBufferFloat}get blendMinMax(){return this._minMaxBlending||(this._minMaxBlending=function(t,e){if(Z(t))return{MIN:t.MIN,MAX:t.MAX};if(e.blendMinMax)return null;{const e=t.getExtension("EXT_blend_minmax");return e?{MIN:e.MIN_EXT,MAX:e.MAX_EXT}:null}}(this._gl,this._disabledExtensions)),this._minMaxBlending}get depthTexture(){return null===this._depthTexture&&(this._depthTexture=ut(this._gl,this._disabledExtensions,"depthTexture",!0,["WEBGL_depth_texture","MOZ_WEBGL_depth_texture","WEBKIT_WEBGL_depth_texture"])),this._depthTexture}get loseContext(){return this._loseContext||(this._loseContext=function(t,e){const s=e.loseContext&&t.getExtension("WEBGL_lose_context");return s?{loseRenderingContext:()=>s.loseContext()}:null}(this._gl,this._debugWebGLExtensions)),this._loseContext}get textureNorm16(){return this._textureNorm16||(this._textureNorm16=function(t,e){if(!Z(t))return null;if(e.textureNorm16)return null;const s=t.getExtension("EXT_texture_norm16");return s?{R16:s.R16_EXT,RG16:s.RG16_EXT,RGB16:s.RGB16_EXT,RGBA16:s.RGBA16_EXT,R16_SNORM:s.R16_SNORM_EXT,RG16_SNORM:s.RG16_SNORM_EXT,RGB16_SNORM:s.RGB16_SNORM_EXT,RGBA16_SNORM:s.RGBA16_SNORM_EXT}:null}(this._gl,this._disabledExtensions)),this._textureNorm16}get textureFloatLinear(){return null===this._textureFloatLinear&&(this._textureFloatLinear=ut(this._gl,this._disabledExtensions,"textureFloatLinear",!1,["OES_texture_float_linear"])),this._textureFloatLinear}enable(t){return this[t]}}let ft=class{constructor(t,e){this.gl=t,this.instanceCounter=new st,this.programCache=new w(this),this._state=new tt,this._numOfDrawCalls=0,this._numOfTriangles=0,this.type=Z(t)?h.WEBGL2:h.WEBGL1,this._loadExtensions(),this.configure(e)}get gl2(){return this.type===h.WEBGL1?null:this.gl}configure(e){this._capabilities=new ct(this.gl,e),this._parameters=this._loadParameters(e);const s=this.gl.getParameter(this.gl.VIEWPORT);this._state=new tt,this._state.viewport={x:s[0],y:s[1],width:s[2],height:s[3]},this._stateTracker=new G({setBlending:t=>{if(t){this.setBlendingEnabled(!0),this.setBlendEquationSeparate(t.opRgb,t.opAlpha),this.setBlendFunctionSeparate(t.srcRgb,t.dstRgb,t.srcAlpha,t.dstAlpha);const e=t.color;this.setBlendColor(e.r,e.g,e.b,e.a)}else this.setBlendingEnabled(!1)},setCulling:t=>{t?(this.setFaceCullingEnabled(!0),this.setCullFace(t.face),this.setFrontFace(t.mode)):this.setFaceCullingEnabled(!1)},setPolygonOffset:t=>{t?(this.setPolygonOffsetFillEnabled(!0),this.setPolygonOffset(t.factor,t.units)):this.setPolygonOffsetFillEnabled(!1)},setDepthTest:t=>{t?(this.setDepthTestEnabled(!0),this.setDepthFunction(t.func)):this.setDepthTestEnabled(!1)},setStencilTest:t=>{if(t){this.setStencilTestEnabled(!0);const e=t.function;this.setStencilFunction(e.func,e.ref,e.mask);const s=t.operation;this.setStencilOp(s.fail,s.zFail,s.zPass)}else this.setStencilTestEnabled(!1)},setDepthWrite:t=>{t?(this.setDepthWriteEnabled(!0),this.setDepthRange(t.zNear,t.zFar)):this.setDepthWriteEnabled(!1)},setColorWrite:t=>{t?this.setColorMask(t.r,t.g,t.b,t.a):this.setColorMask(!1,!1,!1,!1)},setStencilWrite:t=>{t?this.setStencilWriteMask(t.mask):this.setStencilWriteMask(0)}}),this.enforceState(),t(this._driverTest),this._driverTest=new _t(this)}dispose(){t(this._driverTest),this.programCache.dispose(),this.bindVAO(null),this.unbindBuffer(x.ARRAY_BUFFER),this.unbindBuffer(x.ELEMENT_ARRAY_BUFFER),this.type===h.WEBGL2&&(this.unbindBuffer(x.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(x.PIXEL_PACK_BUFFER),this.unbindBuffer(x.PIXEL_UNPACK_BUFFER),this.unbindBuffer(x.COPY_READ_BUFFER),this.unbindBuffer(x.COPY_WRITE_BUFFER)),this._state.textureUnitMap.length=0,o()&&console.log(this.instanceCounter.resourceInformation)}get driverTest(){return this._driverTest}get contextAttributes(){return this.gl.getContextAttributes()}get parameters(){return this._parameters}setPipelineState(t){this._stateTracker.setPipeline(t)}setBlendingEnabled(t){this._state.blend!==t&&(!0===t?this.gl.enable(this.gl.BLEND):this.gl.disable(this.gl.BLEND),this._state.blend=t,this._stateTracker.invalidateBlending())}externalProgramUpdate(){this._state.program?.stop(),this._state.program=null}externalTextureUnitUpdate(t,e){for(let e=0;e<t.length;++e)this._state.textureUnitMap[t[e]]=null;e>=0&&(this._state.activeTexture=e)}externalVertexArrayObjectUpdate(){const t=this.capabilities.vao;t&&(t.bindVertexArray(null),this._state.vertexArrayObject=null),this._state.vertexBuffer=null,this._state.indexBuffer=null}externalVertexBufferUpdate(){this._state.vertexBuffer=null}externalIndexBufferUpdate(){this._state.indexBuffer=null}setBlendColor(t,e,s,i){t===this._state.blendColor.r&&e===this._state.blendColor.g&&s===this._state.blendColor.b&&i===this._state.blendColor.a||(this.gl.blendColor(t,e,s,i),this._state.blendColor.r=t,this._state.blendColor.g=e,this._state.blendColor.b=s,this._state.blendColor.a=i,this._stateTracker.invalidateBlending())}setBlendFunction(t,e){t===this._state.blendFunction.srcRGB&&e===this._state.blendFunction.dstRGB||(this.gl.blendFunc(t,e),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=t,this._state.blendFunction.dstRGB=e,this._state.blendFunction.dstAlpha=e,this._stateTracker.invalidateBlending())}setBlendFunctionSeparate(t,e,s,i){this._state.blendFunction.srcRGB===t&&this._state.blendFunction.srcAlpha===s&&this._state.blendFunction.dstRGB===e&&this._state.blendFunction.dstAlpha===i||(this.gl.blendFuncSeparate(t,e,s,i),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=s,this._state.blendFunction.dstRGB=e,this._state.blendFunction.dstAlpha=i,this._stateTracker.invalidateBlending())}setBlendEquation(t){this._state.blendEquation.mode!==t&&(this.gl.blendEquation(t),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=t,this._stateTracker.invalidateBlending())}setBlendEquationSeparate(t,e){this._state.blendEquation.mode===t&&this._state.blendEquation.modeAlpha===e||(this.gl.blendEquationSeparate(t,e),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=e,this._stateTracker.invalidateBlending())}setColorMask(t,e,s,i){this._state.colorMask.r===t&&this._state.colorMask.g===e&&this._state.colorMask.b===s&&this._state.colorMask.a===i||(this.gl.colorMask(t,e,s,i),this._state.colorMask.r=t,this._state.colorMask.g=e,this._state.colorMask.b=s,this._state.colorMask.a=i,this._stateTracker.invalidateColorWrite())}setClearColor(t,e,s,i){this._state.clearColor.r===t&&this._state.clearColor.g===e&&this._state.clearColor.b===s&&this._state.clearColor.a===i||(this.gl.clearColor(t,e,s,i),this._state.clearColor.r=t,this._state.clearColor.g=e,this._state.clearColor.b=s,this._state.clearColor.a=i)}setFaceCullingEnabled(t){this._state.faceCulling!==t&&(!0===t?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE),this._state.faceCulling=t,this._stateTracker.invalidateCulling())}setPolygonOffsetFillEnabled(t){this._state.polygonOffsetFill!==t&&(!0===t?this.gl.enable(this.gl.POLYGON_OFFSET_FILL):this.gl.disable(this.gl.POLYGON_OFFSET_FILL),this._state.polygonOffsetFill=t,this._stateTracker.invalidatePolygonOffset())}setPolygonOffset(t,e){this._state.polygonOffset[0]===t&&this._state.polygonOffset[1]===e||(this._state.polygonOffset[0]=t,this._state.polygonOffset[1]=e,this.gl.polygonOffset(t,e),this._stateTracker.invalidatePolygonOffset())}setCullFace(t){this._state.cullFace!==t&&(this.gl.cullFace(t),this._state.cullFace=t,this._stateTracker.invalidateCulling())}setFrontFace(t){this._state.frontFace!==t&&(this.gl.frontFace(t),this._state.frontFace=t,this._stateTracker.invalidateCulling())}setScissorTestEnabled(t){this._state.scissorTest!==t&&(!0===t?this.gl.enable(this.gl.SCISSOR_TEST):this.gl.disable(this.gl.SCISSOR_TEST),this._state.scissorTest=t)}setScissorRect(t,e,s,i){this._state.scissorRect.x===t&&this._state.scissorRect.y===e&&this._state.scissorRect.width===s&&this._state.scissorRect.height===i||(this.gl.scissor(t,e,s,i),this._state.scissorRect.x=t,this._state.scissorRect.y=e,this._state.scissorRect.width=s,this._state.scissorRect.height=i)}setDepthTestEnabled(t){this._state.depthTest!==t&&(!0===t?this.gl.enable(this.gl.DEPTH_TEST):this.gl.disable(this.gl.DEPTH_TEST),this._state.depthTest=t,this._stateTracker.invalidateDepthTest())}setClearDepth(t){this._state.clearDepth!==t&&(this.gl.clearDepth(t),this._state.clearDepth=t)}setDepthFunction(t){this._state.depthFunction!==t&&(this.gl.depthFunc(t),this._state.depthFunction=t,this._stateTracker.invalidateDepthTest())}setDepthWriteEnabled(t){this._state.depthWrite!==t&&(this.gl.depthMask(t),this._state.depthWrite=t,this._stateTracker.invalidateDepthWrite())}setDepthRange(t,e){this._state.depthRange.zNear===t&&this._state.depthRange.zFar===e||(this.gl.depthRange(t,e),this._state.depthRange.zNear=t,this._state.depthRange.zFar=e,this._stateTracker.invalidateDepthWrite())}setStencilTestEnabled(t){this._state.stencilTest!==t&&(!0===t?this.gl.enable(this.gl.STENCIL_TEST):this.gl.disable(this.gl.STENCIL_TEST),this._state.stencilTest=t,this._stateTracker.invalidateStencilTest())}setClearStencil(t){t!==this._state.clearStencil&&(this.gl.clearStencil(t),this._state.clearStencil=t)}setStencilFunction(t,e,s){this._state.stencilFunction.func===t&&this._state.stencilFunction.ref===e&&this._state.stencilFunction.mask===s||(this.gl.stencilFunc(t,e,s),this._state.stencilFunction.face=c.FRONT_AND_BACK,this._state.stencilFunction.func=t,this._state.stencilFunction.ref=e,this._state.stencilFunction.mask=s,this._stateTracker.invalidateStencilTest())}setStencilFunctionSeparate(t,e,s,i){this._state.stencilFunction.face===t&&this._state.stencilFunction.func===e&&this._state.stencilFunction.ref===s&&this._state.stencilFunction.mask===i||(this.gl.stencilFuncSeparate(t,e,s,i),this._state.stencilFunction.face=t,this._state.stencilFunction.func=e,this._state.stencilFunction.ref=s,this._state.stencilFunction.mask=i,this._stateTracker.invalidateStencilTest())}setStencilWriteMask(t){this._state.stencilWriteMask!==t&&(this.gl.stencilMask(t),this._state.stencilWriteMask=t,this._stateTracker.invalidateStencilWrite())}setStencilOp(t,e,s){this._state.stencilOperation.face===c.FRONT_AND_BACK&&this._state.stencilOperation.fail===t&&this._state.stencilOperation.zFail===e&&this._state.stencilOperation.zPass===s||(this.gl.stencilOp(t,e,s),this._state.stencilOperation.face=c.FRONT_AND_BACK,this._state.stencilOperation.fail=t,this._state.stencilOperation.zFail=e,this._state.stencilOperation.zPass=s,this._stateTracker.invalidateStencilTest())}setStencilOpSeparate(t,e,s,i){this._state.stencilOperation.face===t&&this._state.stencilOperation.fail===e&&this._state.stencilOperation.zFail===s&&this._state.stencilOperation.zPass===i||(this.gl.stencilOpSeparate(t,e,s,i),this._state.stencilOperation.face=t,this._state.stencilOperation.fail=e,this._state.stencilOperation.zFail=s,this._state.stencilOperation.zPass=i,this._stateTracker.invalidateStencilTest())}setActiveTexture(t,e=!1){const s=this._state.activeTexture;return t>=0&&(e||t!==this._state.activeTexture)&&(this.gl.activeTexture(M+t),this._state.activeTexture=t),s}clear(t){t&&this.gl.clear(t)}clearSafe(t,e=255){t&&(t&v.COLOR_BUFFER_BIT&&this.setColorMask(!0,!0,!0,!0),t&v.DEPTH_BUFFER_BIT&&this.setDepthWriteEnabled(!0),t&v.STENCIL_BUFFER_BIT&&this.setStencilWriteMask(e),this.gl.clear(t))}drawArrays(t,e,s){if(o()&&(this._numOfDrawCalls++,this._numOfTriangles+=Et(t,s)),this.gl.drawArrays(t,e,s),o()){const t=k(this);t&&console.error("drawArrays:",t)}}drawElements(t,e,s,r){if(o()&&(this._numOfDrawCalls++,this._numOfTriangles+=Et(t,e)),this.gl.drawElements(t,e,s,r),o()){const n=k(this);if(n){const a=this.getBoundVAO(),l=a?.indexBuffer,o=a?.vertexBuffers,h={indexBuffer:l,vertexBuffers:o},_={mode:t,count:e,type:s,offset:r},u=i(l,(t=>t.size))??0,c=r+e,f=u<c?`. Buffer is too small. Attempted to draw index ${c} of ${u}`:"";console.error(`drawElements: ${n}${f}`,{args:_,vao:h})}}}logInfo(){o()&&console.log(`DrawCalls: ${this._numOfDrawCalls}, Triangles: ${this._numOfTriangles}`)}resetInfo(){o()&&(this._numOfDrawCalls=0,this._numOfTriangles=0)}get capabilities(){return this._capabilities}setViewport(t,e,s,i){s=Math.max(Math.round(s),1),i=Math.max(Math.round(i),1);const r=this._state.viewport;r.x===t&&r.y===e&&r.width===s&&r.height===i||(r.x=t,r.y=e,r.width=s,r.height=i,this.gl.viewport(t,e,s,i))}getViewport(){const t=this._state.viewport;return{x:t.x,y:t.y,width:t.width,height:t.height}}useProgram(t){this._state.program!==t&&(this._state.program?.stop(),this._state.program=t,this.gl.useProgram(t?.glName??null))}bindTexture(t,i,r=!1){(i>=this.parameters.maxTextureImageUnits||i<0)&&console.error("Input texture unit is out of range of available units!");const n=this._state.textureUnitMap[i];return s(t)||null==t.glName?(e(n)&&(this.setActiveTexture(i,r),this.gl.bindTexture(n.descriptor.target,null)),this._state.textureUnitMap[i]=null,n):r||n!==t?(this.setActiveTexture(i,r),this.gl.bindTexture(t.descriptor.target,t.glName),t.applyChanges(),this._state.textureUnitMap[i]=t,n):(t.isDirty&&(this.setActiveTexture(i,r),t.applyChanges()),n)}unbindTexture(t){if(!s(t))for(let e=0;e<this.parameters.maxTextureImageUnits;e++)this._state.textureUnitMap[e]===t&&(this.bindTexture(null,e),this._state.textureUnitMap[e]=null)}bindFramebuffer(t,e=!1){if(e||this._state.readFramebuffer!==t||this._state.drawFramebuffer!==t){if(s(t))return this.gl.bindFramebuffer(U.FRAMEBUFFER,null),this._state.readFramebuffer=null,void(this._state.drawFramebuffer=null);t.initializeAndBind(U.FRAMEBUFFER),this._state.readFramebuffer=t,this._state.drawFramebuffer=t}}bindFramebufferSeparate(t,e,i=!1){const n=e===U.READ_FRAMEBUFFER,a=n?this._state.readFramebuffer:this._state.drawFramebuffer;(i||a!==t)&&(s(t)?this.gl.bindFramebuffer(e,null):t.initializeAndBind(e),n?this._state.readFramebuffer=r(t,null):this._state.drawFramebuffer=r(t,null))}blitFramebuffer(t,e,s=0,i=0,r=t.width,n=t.height,a=0,l=0,o=e.width,h=e.height,_=v.COLOR_BUFFER_BIT,u=m.NEAREST){this.bindFramebufferSeparate(t,U.READ_FRAMEBUFFER),this.bindFramebufferSeparate(e,U.DRAW_FRAMEBUFFER),this.gl.blitFramebuffer(s,i,r,n,a,l,o,h,_,u)}bindBuffer(t,e){if(t)switch(e??(e=t.bufferType),e){case x.ARRAY_BUFFER:this._state.vertexBuffer=dt(this.gl,t,e,this._state.vertexBuffer);break;case x.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=dt(this.gl,t,e,this._state.indexBuffer);break;case x.UNIFORM_BUFFER:this._state.uniformBuffer=dt(this.gl,t,e,this._state.uniformBuffer);break;case x.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=dt(this.gl,t,e,this._state.pixelPackBuffer);break;case x.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=dt(this.gl,t,e,this._state.pixelUnpackBuffer);break;case x.COPY_READ_BUFFER:this._state.copyReadBuffer=dt(this.gl,t,e,this._state.copyReadBuffer);break;case x.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=dt(this.gl,t,e,this._state.copyWriteBuffer)}}bindRenderbuffer(t){const e=this.gl;t||(e.bindRenderbuffer(e.RENDERBUFFER,null),this._state.renderbuffer=null),this._state.renderbuffer!==t&&(e.bindRenderbuffer(e.RENDERBUFFER,t.glName),this._state.renderbuffer=t)}_getBufferBinding(t,e){if(e>=this.parameters.maxUniformBufferBindings||e<0)return console.error("Uniform buffer binding point is out of range!"),null;const i=this._state.uniformBufferBindingPoints;let r=i[e];return s(r)&&(r={buffer:null,offset:0,size:0},i[e]=r),r}bindBufferBase(t,e,i){const r=this._getBufferBinding(t,e);s(r)||r.buffer===i&&0===r.offset&&0===r.size||(this.gl.bindBufferBase(t,e,i?i.glName:null),r.buffer=i,r.offset=0,r.size=0)}bindBufferRange(t,e,i,r,n){const a=this._getBufferBinding(t,e);s(a)||a.buffer===i&&a.offset===r&&a.size===n||(r%this._parameters.uniformBufferOffsetAlignment==0?(this.gl.bindBufferRange(t,e,i.glName,r,n),a.buffer=i,a.offset=r,a.size=n):console.error("Uniform buffer binding offset is not a multiple of the context offset alignment"))}bindUBO(t,e,i,r){s(e)?this.bindBufferBase(x.UNIFORM_BUFFER,t,null):(o()&&(r??e.byteLength)>this._parameters.maxUniformBlockSize&&console.error("Attempting to bind more data than the maximum uniform block size"),e.initialize(),void 0!==i&&void 0!==r?this.bindBufferRange(x.UNIFORM_BUFFER,t,e.buffer,i,r):this.bindBufferBase(x.UNIFORM_BUFFER,t,e.buffer))}unbindUBO(t){for(let s=0,i=this._state.uniformBufferBindingPoints.length;s<i;s++){const i=this._state.uniformBufferBindingPoints[s];e(i)&&i.buffer===t.buffer&&this.bindBufferBase(x.UNIFORM_BUFFER,s,null)}}unbindBuffer(t){switch(t){case x.ARRAY_BUFFER:this._state.vertexBuffer=dt(this.gl,null,t,this._state.vertexBuffer);break;case x.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=dt(this.gl,null,t,this._state.indexBuffer);break;case x.UNIFORM_BUFFER:this._state.uniformBuffer=dt(this.gl,null,t,this._state.uniformBuffer);break;case x.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=dt(this.gl,null,t,this._state.pixelPackBuffer);break;case x.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=dt(this.gl,null,t,this._state.pixelUnpackBuffer);break;case x.COPY_READ_BUFFER:this._state.copyReadBuffer=dt(this.gl,null,t,this._state.copyReadBuffer);break;case x.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=dt(this.gl,null,t,this._state.copyWriteBuffer)}}bindVAO(t=null){s(t)?this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null):this._state.vertexArrayObject!==t&&(t.bind(),this._state.vertexArrayObject=t)}async clientWaitAsync(t=a(10)){const e=this.gl,s=e.fenceSync(P.SYNC_GPU_COMMANDS_COMPLETE,0);if(!s)throw new Error("Client wait failed, could not create sync object");let i;this.instanceCounter.increment(g.Sync,s),e.flush();do{await n(t),i=e.clientWaitSync(s,0,0)}while(i===N.TIMEOUT_EXPIRED);if(this.instanceCounter.decrement(g.Sync,s),e.deleteSync(s),i===N.WAIT_FAILED)throw new Error("Client wait failed")}getBoundFramebufferObject(t=U.FRAMEBUFFER){return t===U.READ_FRAMEBUFFER?this._state.readFramebuffer:this._state.drawFramebuffer}getBoundVAO(){return this._state.vertexArrayObject}resetState(){this.useProgram(null),this.bindVAO(null),this.bindFramebuffer(null,!0),this.unbindBuffer(x.ARRAY_BUFFER),this.unbindBuffer(x.ELEMENT_ARRAY_BUFFER),this.type===h.WEBGL2&&(this.unbindBuffer(x.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(x.PIXEL_PACK_BUFFER),this.unbindBuffer(x.PIXEL_UNPACK_BUFFER),this.unbindBuffer(x.COPY_READ_BUFFER),this.unbindBuffer(x.COPY_WRITE_BUFFER));for(let t=0;t<this.parameters.maxTextureImageUnits;++t)this.bindTexture(null,t);this.setBlendingEnabled(!1),this.setBlendFunction(_.ONE,_.ZERO),this.setBlendEquation(u.ADD),this.setBlendColor(0,0,0,0),this.setFaceCullingEnabled(!1),this.setCullFace(c.BACK),this.setFrontFace(f.CCW),this.setPolygonOffsetFillEnabled(!1),this.setPolygonOffset(0,0),this.setScissorTestEnabled(!1),this.setScissorRect(0,0,this.gl.canvas.width,this.gl.canvas.height),this.setDepthTestEnabled(!1),this.setDepthFunction(d.LESS),this.setDepthRange(0,1),this.setStencilTestEnabled(!1),this.setStencilFunction(d.ALWAYS,0,0),this.setStencilOp(E.KEEP,E.KEEP,E.KEEP),this.setClearColor(0,0,0,0),this.setClearDepth(1),this.setClearStencil(0),this.setColorMask(!0,!0,!0,!0),this.setStencilWriteMask(4294967295),this.setDepthWriteEnabled(!0),this.setViewport(0,0,this.gl.canvas.width,this.gl.canvas.height)}enforceState(){const t=this.capabilities.vao;t&&t.bindVertexArray(null);const{gl:s,gl2:i}=this;for(let t=0;t<this.parameters.maxVertexAttributes;t++)s.disableVertexAttribArray(t);if(this._state.vertexBuffer?s.bindBuffer(this._state.vertexBuffer.bufferType,this._state.vertexBuffer.glName):s.bindBuffer(x.ARRAY_BUFFER,null),this._state.indexBuffer?s.bindBuffer(this._state.indexBuffer.bufferType,this._state.indexBuffer.glName):s.bindBuffer(x.ELEMENT_ARRAY_BUFFER,null),e(i)){this._state.uniformBuffer?i.bindBuffer(this._state.uniformBuffer.bufferType,this._state.uniformBuffer.glName):i.bindBuffer(x.UNIFORM_BUFFER,null);for(let t=0;t<this._parameters.maxUniformBufferBindings;t++){const s=this._state.uniformBufferBindingPoints[t];if(e(s)){const{buffer:e,offset:r,size:n}=s;null!==e?0===r&&0===n?i.bindBufferBase(x.UNIFORM_BUFFER,t,e.glName):i.bindBufferRange(x.UNIFORM_BUFFER,t,e.glName,r,n):i.bindBufferBase(x.UNIFORM_BUFFER,t,null)}}this._state.pixelPackBuffer?i.bindBuffer(this._state.pixelPackBuffer.bufferType,this._state.pixelPackBuffer.glName):i.bindBuffer(x.PIXEL_PACK_BUFFER,null),this._state.pixelUnpackBuffer?i.bindBuffer(this._state.pixelUnpackBuffer.bufferType,this._state.pixelUnpackBuffer.glName):i.bindBuffer(x.PIXEL_UNPACK_BUFFER,null),this._state.copyReadBuffer?i.bindBuffer(this._state.copyReadBuffer.bufferType,this._state.copyReadBuffer.glName):i.bindBuffer(x.COPY_READ_BUFFER,null),this._state.copyWriteBuffer?i.bindBuffer(this._state.copyWriteBuffer.bufferType,this._state.copyWriteBuffer.glName):i.bindBuffer(x.COPY_WRITE_BUFFER,null),i.bindFramebuffer(U.READ_FRAMEBUFFER,null),i.readBuffer(i.BACK),this._state.readFramebuffer&&(i.bindFramebuffer(U.READ_FRAMEBUFFER,this._state.readFramebuffer.glName),i.readBuffer(y.COLOR_ATTACHMENT0)),i.bindFramebuffer(U.DRAW_FRAMEBUFFER,this._state.drawFramebuffer?.glName??null)}else this._state.readFramebuffer=this._state.drawFramebuffer,s.bindFramebuffer(U.FRAMEBUFFER,this._state.drawFramebuffer?.glName??null);if(t&&this._state.vertexArrayObject){const t=this._state.vertexArrayObject;this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null),this.bindVAO(t)}s.useProgram(this._state.program?.glName??null),s.blendColor(this._state.blendColor.r,this._state.blendColor.g,this._state.blendColor.b,this._state.blendColor.a),s.bindRenderbuffer(s.RENDERBUFFER,this._state.renderbuffer?this._state.renderbuffer.glName:null),!0===this._state.blend?s.enable(this.gl.BLEND):s.disable(this.gl.BLEND),s.blendEquationSeparate(this._state.blendEquation.mode,this._state.blendEquation.modeAlpha),s.blendFuncSeparate(this._state.blendFunction.srcRGB,this._state.blendFunction.dstRGB,this._state.blendFunction.srcAlpha,this._state.blendFunction.dstAlpha),s.clearColor(this._state.clearColor.r,this._state.clearColor.g,this._state.clearColor.b,this._state.clearColor.a),s.clearDepth(this._state.clearDepth),s.clearStencil(this._state.clearStencil),s.colorMask(this._state.colorMask.r,this._state.colorMask.g,this._state.colorMask.b,this._state.colorMask.a),s.cullFace(this._state.cullFace),s.depthFunc(this._state.depthFunction),s.depthRange(this._state.depthRange.zNear,this._state.depthRange.zFar),!0===this._state.depthTest?s.enable(s.DEPTH_TEST):s.disable(s.DEPTH_TEST),s.depthMask(this._state.depthWrite),s.frontFace(this._state.frontFace),s.lineWidth(1),!0===this._state.faceCulling?s.enable(s.CULL_FACE):s.disable(s.CULL_FACE),s.polygonOffset(this._state.polygonOffset[0],this._state.polygonOffset[1]),!0===this._state.polygonOffsetFill?s.enable(s.POLYGON_OFFSET_FILL):s.disable(s.POLYGON_OFFSET_FILL),s.scissor(this._state.scissorRect.x,this._state.scissorRect.y,this._state.scissorRect.width,this._state.scissorRect.height),!0===this._state.scissorTest?s.enable(s.SCISSOR_TEST):s.disable(s.SCISSOR_TEST),s.stencilFunc(this._state.stencilFunction.func,this._state.stencilFunction.ref,this._state.stencilFunction.mask),s.stencilOpSeparate(this._state.stencilOperation.face,this._state.stencilOperation.fail,this._state.stencilOperation.zFail,this._state.stencilOperation.zPass),!0===this._state.stencilTest?s.enable(s.STENCIL_TEST):s.disable(s.STENCIL_TEST),s.stencilMask(this._state.stencilWriteMask);for(let t=0;t<this.parameters.maxTextureImageUnits;t++){s.activeTexture(M+t),s.bindTexture(b.TEXTURE_2D,null),s.bindTexture(b.TEXTURE_CUBE_MAP,null),this.type===h.WEBGL2&&(s.bindTexture(b.TEXTURE_3D,null),s.bindTexture(b.TEXTURE_2D_ARRAY,null));const i=this._state.textureUnitMap[t];e(i)&&s.bindTexture(i.descriptor.target,i.glName)}s.activeTexture(M+this._state.activeTexture);const r=this._state.viewport;s.viewport(r.x,r.y,r.width,r.height),this.resetInfo()}_loadExtensions(){this.type===h.WEBGL1&&this.gl.getExtension("OES_element_index_uint"),this.gl.getExtension("KHR_parallel_shader_compile")}_loadParameters(t){const e=this.capabilities.textureFilterAnisotropic,s=t.maxAnisotropy??1/0,i=this.type===h.WEBGL2,r=this.gl,n={versionString:this.gl.getParameter(this.gl.VERSION),maxVertexTextureImageUnits:this.gl.getParameter(this.gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS),maxVertexAttributes:this.gl.getParameter(this.gl.MAX_VERTEX_ATTRIBS),maxMaxAnisotropy:e?Math.min(this.gl.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY),s):1,maxTextureImageUnits:this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),maxTextureSize:this.gl.getParameter(this.gl.MAX_TEXTURE_SIZE),maxUniformBufferBindings:i?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0,maxVertexUniformBlocks:i?r.getParameter(r.MAX_VERTEX_UNIFORM_BLOCKS):0,maxFragmentUniformBlocks:i?r.getParameter(r.MAX_FRAGMENT_UNIFORM_BLOCKS):0,maxUniformBlockSize:i?r.getParameter(r.MAX_UNIFORM_BLOCK_SIZE):0,uniformBufferOffsetAlignment:i?r.getParameter(r.UNIFORM_BUFFER_OFFSET_ALIGNMENT):1,maxArrayTextureLayers:i?r.getParameter(r.MAX_ARRAY_TEXTURE_LAYERS):1,maxSamples:i?r.getParameter(r.MAX_SAMPLES):1};return l.TEXTURE_UNIT_FOR_UPDATES=n.maxTextureImageUnits-1,n}};function dt(t,e,s,i){return e?i!==e&&t.bindBuffer(s,e.glName):t.bindBuffer(s,null),e}function Et(t,e){switch(t){case S.POINTS:return 2*e;case S.TRIANGLES:return e/3;case S.TRIANGLE_STRIP:case S.TRIANGLE_FAN:return e-2;default:return 0}}export{ft as R};
