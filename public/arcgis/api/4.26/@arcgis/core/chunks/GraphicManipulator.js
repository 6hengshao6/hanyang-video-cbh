/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import e from"../core/Accessor.js";import i from"../core/Evented.js";import{i as o,a as s}from"./maybe.js";import{watch as r,sync as a}from"../core/reactiveUtils.js";import{a as l,s as n,e as c}from"./screenUtils.js";import{property as h}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import"./typedArrayUtil.js";import{subclass as p}from"../core/accessorSupport/decorators/subclass.js";import{a as y}from"./vec2.js";import{D as m,d as b}from"./vec3.js";import{canProjectWithoutEngine as u,project as d,projectPointToVector as g}from"../geometry/projection.js";import{h as f}from"./elevationInfoUtils.js";import{g as _}from"./defaults.js";import{E as v}from"./ElevationInfo.js";import{i as S}from"./drapedUtils.js";function C(t){let e=0,i=0,s=0;return t?("cim"===t.type&&t.data.symbol&&"symbolLayers"in t.data.symbol&&t.data.symbol.symbolLayers&&t.data.symbol.symbolLayers.map((t=>{"CIMVectorMarker"===t.type&&t.anchorPoint&&(Math.abs(t.anchorPoint.x)>e&&(e=t.anchorPoint.x),Math.abs(t.anchorPoint.y)>i&&(i=t.anchorPoint.y),o(t.size)&&t.size>s&&(s=t.size))})),e=l(e),i=l(i),s=l(s),{offsetX:e,offsetY:i,size:s}):{offsetX:e,offsetY:i,size:s}}let j=class extends e{set graphic(t){this._circleCollisionCache=null,this._originalSymbol=t.symbol,this._set("graphic",t),this.attachSymbolChanged()}get elevationInfo(){const{layer:t}=this.graphic,e=t&&"elevationInfo"in t?t.elevationInfo:null,i=f(this.graphic),o=e?e.offset:0;return new v({mode:i,offset:o})}set focusedSymbol(t){t!==this._get("focusedSymbol")&&(this._set("focusedSymbol",t),this._updateGraphicSymbol(),this._circleCollisionCache=null)}grabbableForEvent(){return!0}set grabbing(t){t!==this._get("grabbing")&&(this._set("grabbing",t),this._updateGraphicSymbol())}set hovering(t){t!==this._get("hovering")&&(this._set("hovering",t),this._updateGraphicSymbol())}set selected(t){t!==this._get("selected")&&(this._set("selected",t),this._updateGraphicSymbol(),this.events.emit("select-changed",{action:t?"select":"deselect"}))}get _focused(){return this._get("hovering")||this._get("grabbing")}constructor(t){super(t),this.layer=null,this.interactive=!0,this.selectable=!1,this.grabbable=!0,this.dragging=!1,this.cursor=null,this.events=new i.EventEmitter,this._circleCollisionCache=null,this._graphicSymbolChangedHandle=null,this._originalSymbol=null}destroy(){this.detachSymbolChanged(),this._resetGraphicSymbol(),this._set("view",null)}intersectionDistance(t){const e=this.graphic;if(!1===e.visible)return null;const i=e.geometry;if(s(i))return null;const r=this._get("focusedSymbol"),a=o(r)?r:e.symbol;return"2d"===this.view.type?this._intersectDistance2D(this.view,t,i,a):this._intersectDistance3D(this.view,t,e)}attach(){this.attachSymbolChanged(),o(this.layer)&&this.layer.add(this.graphic)}detach(){this.detachSymbolChanged(),this._resetGraphicSymbol(),o(this.layer)&&this.layer.remove(this.graphic)}attachSymbolChanged(){this.detachSymbolChanged(),this._graphicSymbolChangedHandle=r((()=>this.graphic?.symbol),(t=>{o(t)&&t!==this.focusedSymbol&&t!==this._originalSymbol&&(this._originalSymbol=t,this._focused&&o(this.focusedSymbol)&&(this.graphic.symbol=this.focusedSymbol))}),a)}detachSymbolChanged(){o(this._graphicSymbolChangedHandle)&&(this._graphicSymbolChangedHandle.remove(),this._graphicSymbolChangedHandle=null)}onElevationChange(){}onViewChange(){}_updateGraphicSymbol(){this.graphic.symbol=this._focused&&o(this.focusedSymbol)?this.focusedSymbol:this._originalSymbol}_resetGraphicSymbol(){this.graphic.symbol=this._originalSymbol}_intersectDistance2D(t,e,i,r){if(r=r||_(i),s(r))return null;let a=this._circleCollisionCache;if("point"===i.type&&"cim"===r.type&&"CIMPointSymbol"===r.data.symbol?.type&&r.data.symbol.symbolLayers){const{offsetX:o,offsetY:s,size:a}=C(r),l=n(e,D),c=a/2,h=t.toScreen(i),p=h.x+o,m=h.y+s;return y(l,[p,m])<c*c?1:null}if("point"!==i.type||"simple-marker"!==r.type)return S(e,i,t)?1:null;if(s(a)||!a.originalPoint.equals(i)){const e=i,o=t.spatialReference;if(u(e.spatialReference,o)){const t=d(e,o);a={originalPoint:e.clone(),mapPoint:t,radiusPx:l(r.size)},this._circleCollisionCache=a}}if(o(a)){const i=n(e,D),o=t.toScreen?.(a.mapPoint);if(!o)return null;const s=a.radiusPx,c=o.x+l(r.xoffset),h=o.y-l(r.yoffset);return y(i,[c,h])<s*s?1:null}return null}_intersectDistance3D(t,e,i){const o=t.toMap(e,{include:[i]});return o&&g(o,P,t.renderSpatialReference)?m(P,t.state.camera.eye):null}};t([h({constructOnly:!0,nonNullable:!0})],j.prototype,"graphic",null),t([h()],j.prototype,"elevationInfo",null),t([h({constructOnly:!0,nonNullable:!0})],j.prototype,"view",void 0),t([h({value:null})],j.prototype,"focusedSymbol",null),t([h({constructOnly:!0})],j.prototype,"layer",void 0),t([h()],j.prototype,"interactive",void 0),t([h()],j.prototype,"selectable",void 0),t([h()],j.prototype,"grabbable",void 0),t([h({value:!1})],j.prototype,"grabbing",null),t([h()],j.prototype,"dragging",void 0),t([h()],j.prototype,"hovering",null),t([h({value:!1})],j.prototype,"selected",null),t([h()],j.prototype,"cursor",void 0),j=t([p("esri.views.interactive.GraphicManipulator")],j);const P=b(),D=c();export{j as G,C as g};
