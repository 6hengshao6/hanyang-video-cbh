/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{n as r}from"./mat4.js";import{c as a}from"./mat4f32.js";import{Z as e,s,d as i}from"./vec3.js";import{U as n,B as o}from"./ShaderBuilder.js";import{F as t}from"./Float3PassUniform.js";import{M as c}from"./Matrix4PassUniform.js";class m extends n{constructor(r,a){super(r,"vec3",o.Draw,((e,s,i,n)=>e.setUniform3fv(r,a(s,i,n))))}}class v extends n{constructor(r,a){super(r,"mat4",o.Draw,((e,s,i)=>e.setUniformMatrix4fv(r,a(s,i))))}}function w(r,a){a.instancedDoublePrecision?r.constants.add("cameraPosition","vec3",e):r.uniforms.add(new m("cameraPosition",((r,a)=>s(d,a.camera.viewInverseTransposeMatrix[3]-r.origin[0],a.camera.viewInverseTransposeMatrix[7]-r.origin[1],a.camera.viewInverseTransposeMatrix[11]-r.origin[2]))))}function f(a,e){if(!e.instancedDoublePrecision)return void a.uniforms.add([new c("proj",((r,a)=>a.camera.projectionMatrix)),new v("view",((a,e)=>r(p,e.camera.viewMatrix,a.origin))),new m("localOrigin",(r=>r.origin))]);const i=r=>s(d,r.camera.viewInverseTransposeMatrix[3],r.camera.viewInverseTransposeMatrix[7],r.camera.viewInverseTransposeMatrix[11]);a.uniforms.add([new c("proj",((r,a)=>a.camera.projectionMatrix)),new c("view",((a,e)=>r(p,e.camera.viewMatrix,i(e)))),new t("localOrigin",((r,a)=>i(a)))])}const p=a(),d=i();function x(r){r.uniforms.add(new c("viewNormal",((r,a)=>a.camera.viewInverseTransposeMatrix)))}export{m as F,v as M,f as a,w as b,x as c};
