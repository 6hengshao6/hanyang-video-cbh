/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../core/Accessor.js";import{HandleOwner as o,HandleOwnerMixin as i}from"../core/HandleOwner.js";import{m as s,d as r}from"./handleUtils.js";import{i as n,a,g as l,m as p,t as m}from"./maybe.js";import{whenOrAbort as d,throwIfAborted as u,ignoreAbortErrors as c}from"../core/promiseUtils.js";import{watch as y,sync as h,initial as f,on as g}from"../core/reactiveUtils.js";import{property as j}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import"./typedArrayUtil.js";import{subclass as b}from"../core/accessorSupport/decorators/subclass.js";import{O as S}from"./ObservableValue.js";import{k as v}from"./elevationInfoUtils.js";import{T as w}from"./TileKey.js";import{s as I}from"./vec3.js";import{c as _}from"./vec4f64.js";import{c as O,g as k,h as C}from"./boundedPlane.js";import{s as H}from"./layerViewUtils.js";import{V as T}from"./FeatureTileDescriptor3D.js";import{c as P,m as D}from"./queryEngineUtils.js";import U from"../core/Handles.js";import E from"../geometry/Polygon.js";import{t as F,f as M}from"./aaBoundingRect.js";import{T as L}from"./TileTreeDebugger.js";import{W as x}from"./WorkerHandle.js";import{f as R}from"./typeUtils.js";import{m as z}from"./dehydratedFeatures.js";import A from"../geometry/Point.js";import N from"../layers/support/LOD.js";import V from"../layers/support/TileInfo.js";import{d as J}from"./debugFlags.js";import"./get.js";import"./utils.js";import"../core/lang.js";import"./metadata.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";import"./ArrayPool.js";import"./tracking.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"../core/Error.js";import"./WatchUpdatingTracking.js";import"./SimpleObservable.js";import"./unitConversionUtils.js";import"./lengthUtils.js";import"./unitUtils.js";import"./jsonMap.js";import"./Ellipsoid.js";import"./common.js";import"./mathUtils.js";import"./vec4.js";import"./ray.js";import"./byteSizeEstimations.js";import"./mat3f64.js";import"./mat4f64.js";import"./quatf64.js";import"./vec2f64.js";import"./mat4.js";import"./vector.js";import"./lineSegment.js";import"./plane.js";import"./mathUtils2.js";import"./snappingUtils.js";import"./InputManager.js";import"./Queue.js";import"./PropertiesPool.js";import"./keybindings.js";import"./DrapedEdgeSnappingCandidate.js";import"./EdgeSnappingCandidate.js";import"./vec2.js";import"./geometry2dUtils.js";import"./LineSnappingHint.js";import"./VertexSnappingCandidate.js";import"./PointSnappingHint.js";import"./writer.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"./reader.js";import"../geometry/SpatialReference.js";import"../geometry/support/webMercatorUtils.js";import"../core/accessorSupport/decorators/cast.js";import"./extentUtils.js";import"./zmUtils.js";import"../Color.js";import"./colorUtils.js";import"../Graphic.js";import"../geometry.js";import"../geometry/Multipoint.js";import"../geometry/Polyline.js";import"../geometry/support/jsonUtils.js";import"../PopupTemplate.js";import"../core/Clonable.js";import"../core/Collection.js";import"../core/Evented.js";import"./shared.js";import"../layers/support/fieldUtils.js";import"./arcadeOnDemand.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"./enumeration.js";import"../popup/support/FieldInfoFormat.js";import"./date.js";import"./number.js";import"./locale.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"./chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../core/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils2.js";import"../symbols/edges/Edges3D.js";import"./screenUtils.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"./lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils3.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"./aaBoundingBox.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../core/urlUtils.js";import"./persistableUrlUtils.js";import"./Symbol3DAnchorPosition2D.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../kernel.js";import"../request.js";import"../core/Loadable.js";import"../core/Promise.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"./Thumbnail.js";import"./calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../core/workers/workers.js";import"../core/workers/Connection.js";import"../core/workers/RemoteClient.js";import"./assets.js";import"../intl.js";import"./messages.js";import"./quantizationUtils.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./fieldType.js";function q(e,t){return k(t.extent,W),C(W,I($,e.x,e.y,0))}const W=O(),$=_();let B=class extends t{get tiles(){const e=this.tilesCoveringView,t=n(this.pointOfInterest)?this.pointOfInterest:this.view.center;return e.sort(((e,o)=>q(t,e)-q(t,o))),e}_scaleEnabled(){return H(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||a(this.tileInfo))return[];if(!this._scaleEnabled)return[];const{spans:e,lodInfo:t}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:o}=t,i=[];for(const{row:s,colFrom:r,colTo:n}of e)for(let e=r;e<=n;e++){const r=t.normalizeCol(e),n=new w(null,o,s,r);this.tileInfo.updateTileInfo(n),i.push(n)}return i}get tileInfo(){return this.view.featuresTilingScheme?.tileInfo??null}get tileSize(){return n(this.tileInfo)?this.tileInfo.size[0]:256}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.addHandles(y((()=>this.view?.state?.viewpoint),(()=>this.notifyChange("tilesCoveringView")),h))}};e([j({readOnly:!0})],B.prototype,"tiles",null),e([j({readOnly:!0})],B.prototype,"_scaleEnabled",null),e([j({readOnly:!0})],B.prototype,"tilesCoveringView",null),e([j({readOnly:!0})],B.prototype,"tileInfo",null),e([j({readOnly:!0})],B.prototype,"tileSize",null),e([j({constructOnly:!0})],B.prototype,"view",void 0),e([j({constructOnly:!0})],B.prototype,"layer",void 0),e([j()],B.prototype,"pointOfInterest",void 0),B=e([b("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],B);let G=class extends o{get tiles(){const e=this.tilesCoveringView,t=this._effectivePointOfInterest;if(n(t)){const o=e.map((e=>q(t,e)));for(let i=1;i<o.length;i++)if(o[i-1]>o[i])return e.sort(((e,o)=>q(t,e)-q(t,o))),e.slice()}return e}get tilesCoveringView(){return this._filterTiles(this.view.featureTiles?.tiles?.toArray()).map(Z)}get tileInfo(){return this.view.featureTiles?.tilingScheme.toTileInfo()??null}get tileSize(){return this.view.featureTiles?.tileSize??256}get _effectivePointOfInterest(){const e=this.pointOfInterest;return n(e)?e:this.view.pointsOfInterest?.focus.location}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.handles.add(y((()=>this.view.featureTiles),(e=>{this.handles.remove(K),e&&this.handles.add(e.addClient(),K)}),f))}_filterTiles(e){return a(e)?[]:e.filter((e=>Math.abs(e.measures.screenRect[3]-e.measures.screenRect[1])>Q&&e.measures.visibility===T.VISIBLE_ON_SURFACE))}};function Z({lij:[e,t,o],extent:i}){return new w(`${e}/${t}/${o}`,e,t,o,i)}e([j({readOnly:!0})],G.prototype,"tiles",null),e([j({readOnly:!0})],G.prototype,"tilesCoveringView",null),e([j({readOnly:!0})],G.prototype,"tileInfo",null),e([j({readOnly:!0})],G.prototype,"tileSize",null),e([j({constructOnly:!0})],G.prototype,"view",void 0),e([j()],G.prototype,"pointOfInterest",void 0),e([j()],G.prototype,"_effectivePointOfInterest",null),G=e([b("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],G);const Q=50,K="feature-tiles";let X=class extends L{constructor(e){super(e),this._handles=new U}initialize(){const e=setInterval((()=>this._fetchDebugInfo()),2e3);this._handles.add(s((()=>clearInterval(e))))}destroy(){this._handles.destroy()}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach((t=>{e.set(t.data.id,t.featureCount)})),this._debugInfo.pendingTiles.forEach((o=>{e.set(o.data.id,o.featureCount),t.set(o.data.id,o.state)}));const o=o=>{const i=t.get(o),s=e.get(o)??"?";return i?`${i}:${s}\n${o}`:`store:${s}\n${o}`},i=new Map;return this._debugInfo.storedTiles.forEach((e=>{i.set(e.data.id,e.data)})),this._debugInfo.pendingTiles.forEach((e=>{i.set(e.data.id,e.data)})),Array.from(i.values()).map((e=>({lij:[e.level,e.row,e.col],geometry:E.fromExtent(F(e.extent,this.view.spatialReference)),label:o(e.id)})))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then((e=>{this._debugInfo=e,this.update()}))}};e([j({constructOnly:!0})],X.prototype,"handle",void 0),X=e([b("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],X);let Y=class extends o{get updating(){return this.updatingHandles.updating||this._workerHandleUpdating}constructor(e){super(e),this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async e=>{const t=[];for(const{points:o}of e)for(const{z:e}of o)t.push(e);return{elevations:t,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this._editId=0}destroy(){this._workerHandle.destroy()}initialize(){this._workerHandle=new ee(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.points,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.handles.add([this._workerHandle.on("notify-updating",(({updating:e})=>this._workerHandleUpdating=e)),this._workerHandle.on("notify-availability",(({availability:e})=>this._set("availability",e)))])}async setup(e,t){const o=this._serviceInfoFromLayer(e.layer);if(a(o))return;const i={configuration:this._convertConfiguration(e.configuration),serviceInfo:o,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:e.layer.elevationInfo?.toJSON()};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",i,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const o=this._convertConfiguration(e);await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",o,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const o=e.point,i={distance:e.distance,mode:e.mode,point:z(o[0],o[1],o[2],e.coordinateHelper.spatialReference.toJSON()),types:e.types,filter:n(e.filter)?e.filter.toJSON():null};return this._workerHandle.invoke(i,t)}async updateTiles(e,t){const o={tiles:e.tiles,tileInfo:n(e.tileInfo)?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",o,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async applyEdits(e,t){const o=this._editId++,i={id:o};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("beginApplyEdits",i,t));const s=await this.updatingHandles.addPromise(d(e.result,t)),r={id:o,edits:{addedFeatures:s.addedFeatures?.map((({objectId:e})=>e)).filter(n)??[],deletedFeatures:s.deletedFeatures?.map((({objectId:e,globalId:t})=>({objectId:e,globalId:t})))??[],updatedFeatures:s.updatedFeatures?.map((({objectId:e})=>e)).filter(n)??[]}};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("endApplyEdits",r,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}_convertConfiguration(e){return{filter:n(e.filter)?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}_serviceInfoFromLayer(e){return"multipatch"===e.geometryType||"mesh"===e.geometryType?null:{url:e.parsedUrl?.path??"",fields:e.fields.map((e=>e.toJSON())),geometryType:R.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:e.timeInfo?.toJSON()}}};e([j({constructOnly:!0})],Y.prototype,"schedule",void 0),e([j({constructOnly:!0})],Y.prototype,"hasZ",void 0),e([j({constructOnly:!0})],Y.prototype,"elevationAlignPointsInFeatures",void 0),e([j({constructOnly:!0})],Y.prototype,"queryForSymbologySnapping",void 0),e([j({readOnly:!0})],Y.prototype,"updating",null),e([j({readOnly:!0})],Y.prototype,"availability",void 0),e([j()],Y.prototype,"_workerHandleUpdating",void 0),Y=e([b("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],Y);class ee extends x{constructor(e,t){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},e,{strategy:"dedicated",client:t})}}let te=class extends t{get tiles(){return[new w("0/0/0",0,0,0,M(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new V({origin:new A({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new N({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(e){super(e),this.pointOfInterest=null}};e([j({readOnly:!0})],te.prototype,"tiles",null),e([j({readOnly:!0})],te.prototype,"tileInfo",null),e([j({readOnly:!0})],te.prototype,"tileSize",null),e([j({constructOnly:!0})],te.prototype,"layer",void 0),e([j()],te.prototype,"pointOfInterest",void 0),te=e([b("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],te);let oe=class extends(i(t)){get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get updating(){return this._workerHandle?.updating||this.updatingHandles.updating}get configuration(){const{view:e}=this,t=n(e)?e.type:"2d";return{filter:this._layer.createQuery(),customParameters:this._layer.customParameters,viewType:t}}get availability(){return this._workerHandle?.availability??0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._workerHandle=null,this._debug=null}initialize(){let e;const t=this.view;if(n(t))switch(t.type){case"2d":this._tilesOfInterest=new B({view:t,layer:this._layer}),e=this._workerHandle=new Y;break;case"3d":{const{resourceController:o}=t,i=this._layer,s=t.whenLayerView(i);this._tilesOfInterest=new G({view:t}),e=this._workerHandle=new Y({schedule:e=>o.immediate.schedule(e),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(e,t)=>{const o=await s;return u(t),o.elevationAlignPointsInFeatures(e,t)},queryForSymbologySnapping:async(e,t)=>{const o=await s;return u(t),o.queryForSymbologySnapping(e,t)}});const r=new S(null);s.then((e=>r.set(e))),this.addHandles([t.elevationProvider.on("elevation-change",(({context:t})=>{const{elevationInfo:o}=i;v(t,o)&&c(e.notifyElevationSourceChange())})),y((()=>i.elevationInfo),(()=>c(e.notifyElevationSourceChange())),f),y((()=>l(r.get(),(({processor:e})=>e?.renderer))),(()=>c(e.notifySymbologyChange())),f),y((()=>p(r.get(),!1,(e=>e.symbologySnappingSupported))),(t=>c(e.setSymbologySnappingSupported(t))),f),g((()=>m(r.get())?.layer),["edits","apply-edits","graphic-update"],(()=>e.notifySymbologyChange()))]);break}}else this._tilesOfInterest=new te({layer:this._layer}),e=this._workerHandle=new Y;this.handles.add([r(e)]),c(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this.updatingHandles.add((()=>this._updateTilesParameters),(()=>c(e.updateTiles(this._updateTilesParameters,null))),f),this.handles.add([y((()=>this.configuration),(t=>c(e.configure(t,null))),h)]),n(t)&&this.handles.add(y((()=>J.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES),(o=>{o&&!this._debug?(this._debug=new X({view:t,handle:e}),this.handles.add(r(this._debug),"debug")):!o&&this._debug&&this.handles.remove("debug")}),f)),this.handles.add(this.layerSource.layer.on("apply-edits",(t=>{c(e.applyEdits(t,null))})))}refresh(){this._workerHandle?.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:o,point:i}=e;this._tilesOfInterest.pointOfInterest=o.arrayToPoint(i);const s=this._getGroundElevation;return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map((e=>P(e,s)))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}get _getGroundElevation(){return D(this.view)}};e([j({constructOnly:!0})],oe.prototype,"spatialReference",void 0),e([j({constructOnly:!0})],oe.prototype,"layerSource",void 0),e([j({constructOnly:!0})],oe.prototype,"view",void 0),e([j()],oe.prototype,"_tilesOfInterest",void 0),e([j({readOnly:!0})],oe.prototype,"_updateTilesParameters",null),e([j({readOnly:!0})],oe.prototype,"updating",null),e([j({readOnly:!0})],oe.prototype,"configuration",null),e([j({readOnly:!0})],oe.prototype,"availability",null),e([j()],oe.prototype,"_getGroundElevation",null),oe=e([b("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],oe);export{oe as FeatureServiceSnappingSource};
