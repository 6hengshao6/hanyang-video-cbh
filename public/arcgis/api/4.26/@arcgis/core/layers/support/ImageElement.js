/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../request.js";import s from"../../core/Error.js";import{a as r}from"../../chunks/maybe.js";import{isDataProtocol as o,isBlobProtocol as i,isAbsolute as n,dataToBlob as m,join as p}from"../../core/urlUtils.js";import{g as a}from"../../chunks/uuid.js";import{property as c}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/ensureType.js";import"../../chunks/typedArrayUtil.js";import{r as u}from"../../chunks/reader.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import{w as h}from"../../chunks/writer.js";import j from"./MediaElementBase.js";import{g}from"../../chunks/resourceExtension.js";import{f as d,t as f,i as k,M as y}from"../../chunks/persistableUrlUtils.js";import"../../config.js";import"../../chunks/object.js";import"../../core/lang.js";import"../../kernel.js";import"../../chunks/Logger.js";import"../../chunks/string.js";import"../../core/promiseUtils.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../chunks/tracking.js";import"../../core/Identifiable.js";import"../../core/JSONSupport.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/ArrayPool.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../core/Loadable.js";import"../../core/Promise.js";import"./ControlPointsGeoreference.js";import"../../chunks/perspectiveUtils.js";import"../../chunks/mat3.js";import"../../chunks/common.js";import"../../chunks/mat3f64.js";import"../../chunks/vec2.js";import"../../chunks/vec3.js";import"../../chunks/screenUtils.js";import"../../chunks/vec2f64.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/Geometry.js";import"../../geometry/SpatialReference.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/Ellipsoid.js";import"../../geometry/support/webMercatorUtils.js";import"../../geometry/Polygon.js";import"../../geometry/Extent.js";import"../../chunks/extentUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../../chunks/vec4.js";import"../../chunks/zmUtils.js";import"../../geometry/projection.js";import"../../chunks/SimpleObservable.js";import"../../chunks/mat4.js";import"../../geometry/Multipoint.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../geometry/Polyline.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/zscale.js";import"../../chunks/GeoreferenceBase.js";import"../../core/Clonable.js";import"./CornersGeoreference.js";import"./ExtentAndRotationGeoreference.js";let v=class extends j{constructor(e){super(e),this.content=null,this.image=null,this.type="image",this.image=null}load(){const e=this.image;if("string"==typeof e){const s=t(e,{responseType:"image"}).then((({data:e})=>{this._set("content",e)}));this.addResolvingPromise(s)}else if(e instanceof HTMLImageElement){const t=e.decode().then((()=>{this._set("content",e)}));this.addResolvingPromise(t)}else e?this._set("content",e):this.addResolvingPromise(Promise.reject(new s("image-element:invalid-image-type","Invalid image type",{image:e})));return Promise.resolve(this)}readImage(e,t,s){return d(t.url,s)}writeImage(e,t,s,m){if(r(e))return;const c=m?.portalItem,u=m?.resources;if(!c||!u)return void("string"==typeof e&&(t[s]=f(e,m)));const l="string"!=typeof e||o(e)||i(e)?null:e;if(l){if(null==k(l))return void(t[s]=l);const e=f(l,{...m,verifyItemRelativeUrls:m&&m.verifyItemRelativeUrls?{writtenUrls:m.verifyItemRelativeUrls.writtenUrls,rootPath:void 0}:void 0},y.NO);if(c&&e&&!n(e))return u.toKeep.push({resource:c.resourceFromPath(e),compress:!1}),void(t[s]=e)}t[s]="<pending>",u.pendingOperations.push(I(e).then((e=>{const r=function(e,t){const s=a(),r=`${p("media",s)}.${g(e)}`;return t.resourceFromPath(r)}(e,c);t[s]=r.itemRelativeUrl,u.toAdd.push({resource:r,content:e,compress:!1,finish:e=>{this.image=e.url}})})))}};e([c({readOnly:!0})],v.prototype,"content",void 0),e([c({json:{name:"url",type:String}})],v.prototype,"image",void 0),e([u("image",["url"])],v.prototype,"readImage",null),e([h("image")],v.prototype,"writeImage",null),e([c({readOnly:!0,json:{name:"mediaType"}})],v.prototype,"type",void 0),v=e([l("esri.layers.support.ImageElement")],v);const U=v;async function I(e){if("string"==typeof e){if(i(e)){const{data:s}=await t(e,{responseType:"blob"});return s}return o(e)?m(e):I((await t(e,{responseType:"image"})).data)}return new Promise((t=>function(e){if(e instanceof HTMLCanvasElement)return e;const t=e instanceof HTMLImageElement?e.naturalWidth:e.width,s=e instanceof HTMLImageElement?e.naturalHeight:e.height,r=document.createElement("canvas"),o=r.getContext("2d");return r.width=t,r.height=s,e instanceof HTMLImageElement?o.drawImage(e,0,0,e.width,e.height):e instanceof ImageData&&o.putImageData(e,0,0),r}(e).toBlob(t)))}export{U as default};
