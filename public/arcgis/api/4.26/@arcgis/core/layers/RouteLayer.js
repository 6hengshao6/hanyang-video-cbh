/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import t from"../config.js";import"../geometry.js";import r from"../Graphic.js";import o from"../PopupTemplate.js";import"../renderers/ClassBreaksRenderer.js";import"../renderers/DictionaryRenderer.js";import"../renderers/DotDensityRenderer.js";import"../renderers/HeatmapRenderer.js";import"../renderers/PieChartRenderer.js";import"../renderers/Renderer.js";import"../renderers/SimpleRenderer.js";import"../renderers/UniqueValueRenderer.js";import{read as s}from"../renderers/support/jsonUtils.js";import i from"../core/Collection.js";import n from"../core/Error.js";import{HandleOwnerMixin as l}from"../core/HandleOwner.js";import{L as a}from"../chunks/Logger.js";import{i as p,a as m,u,o as c}from"../chunks/maybe.js";import{M as y}from"../chunks/MultiOriginJSONSupport.js";import{s as d}from"../chunks/object.js";import{isAbortError as f}from"../core/promiseUtils.js";import{on as h}from"../core/reactiveUtils.js";import{W as j,w as b}from"../chunks/unitUtils.js";import{urlToObject as S}from"../core/urlUtils.js";import{property as g}from"../core/accessorSupport/decorators/property.js";import"../chunks/ensureType.js";import"../chunks/typedArrayUtil.js";import{r as w}from"../chunks/reader.js";import{subclass as k}from"../core/accessorSupport/decorators/subclass.js";import{w as v}from"../chunks/writer.js";import{u as P}from"../chunks/originUtils.js";import I from"../geometry/Extent.js";import{initializeProjection as D,project as C}from"../geometry/projection.js";import B from"./Layer.js";import{BlendLayer as L}from"./mixins/BlendLayer.js";import{O as R}from"../chunks/OperationalLayer.js";import{PortalLayer as N}from"./mixins/PortalLayer.js";import{ScaleRangeLayer as U}from"./mixins/ScaleRangeLayer.js";import{s as _}from"../chunks/arcgisLayerUrl.js";import O from"./support/RouteSymbols.js";import F from"../portal/Portal.js";import T from"../portal/PortalItem.js";import{T as x}from"../chunks/portalItemUtils.js";import{fetchServiceDescription as M}from"../rest/networkService.js";import{solve as A}from"../rest/route.js";import V from"../rest/support/DirectionLine.js";import G from"../rest/support/DirectionPoint.js";import J from"../rest/support/PointBarrier.js";import E from"../rest/support/PolygonBarrier.js";import q from"../rest/support/PolylineBarrier.js";import W,{R as z}from"../rest/support/RouteInfo.js";import H from"../rest/support/RouteParameters.js";import Q from"../rest/support/Stop.js";import K from"../geometry/SpatialReference.js";import Y from"../geometry/Multipoint.js";import"../core/lang.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/metadata.js";import"../chunks/ArrayPool.js";import"../chunks/tracking.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../chunks/string.js";import"../chunks/jsonMap.js";import"../chunks/Ellipsoid.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Polygon.js";import"../chunks/extentUtils.js";import"../chunks/aaBoundingRect.js";import"../chunks/mathUtils.js";import"../chunks/vec3.js";import"../chunks/common.js";import"../chunks/vec4.js";import"../chunks/zmUtils.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../geometry/support/jsonUtils.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../chunks/enumeration.js";import"./support/fieldUtils.js";import"../chunks/arcadeOnDemand.js";import"../symbols/Symbol.js";import"../Color.js";import"../chunks/colorUtils.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"../chunks/utils2.js";import"../symbols/edges/Edges3D.js";import"../chunks/screenUtils.js";import"../chunks/materialUtils.js";import"../chunks/opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"../chunks/Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../chunks/lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"../chunks/utils3.js";import"../chunks/colors.js";import"../chunks/symbolLayerUtils3D.js";import"../chunks/aaBoundingBox.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../chunks/persistableUrlUtils.js";import"../chunks/Symbol3DAnchorPosition2D.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"../chunks/collectionUtils.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../core/Clonable.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"../kernel.js";import"../request.js";import"../core/Loadable.js";import"../core/Promise.js";import"../chunks/locale.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../chunks/Thumbnail.js";import"../core/Evented.js";import"../chunks/shared.js";import"../chunks/SimpleObservable.js";import"../chunks/calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"../chunks/urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"../popup/support/FieldInfoFormat.js";import"../chunks/date.js";import"../chunks/number.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../chunks/chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../core/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../renderers/mixins/VisualVariablesMixin.js";import"../renderers/visualVariables/ColorVariable.js";import"../renderers/visualVariables/VisualVariable.js";import"../chunks/LegendOptions.js";import"../renderers/visualVariables/support/ColorStop.js";import"../renderers/visualVariables/OpacityVariable.js";import"../renderers/visualVariables/support/OpacityStop.js";import"../renderers/visualVariables/RotationVariable.js";import"../renderers/visualVariables/SizeVariable.js";import"../renderers/visualVariables/support/SizeStop.js";import"../chunks/sizeVariableUtils.js";import"../chunks/visualVariableUtils.js";import"../chunks/compilerUtils.js";import"../chunks/lengthUtils.js";import"../renderers/support/ClassBreakInfo.js";import"../chunks/commonProperties.js";import"../symbols/support/jsonUtils.js";import"../chunks/layerUtils.js";import"../renderers/support/AuthoringInfo.js";import"../renderers/support/AuthoringInfoVisualVariable.js";import"../chunks/colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../chunks/DictionaryLoader.js";import"../chunks/LRUCache.js";import"../chunks/MemCache.js";import"../renderers/support/AttributeColorInfo.js";import"../renderers/support/HeatmapColorStop.js";import"../chunks/heatmapUtils.js";import"../chunks/vec4f64.js";import"../chunks/diffUtils.js";import"../renderers/support/UniqueValue.js";import"../renderers/support/UniqueValueClass.js";import"../renderers/support/UniqueValueGroup.js";import"../renderers/support/UniqueValueInfo.js";import"../chunks/styleUtils.js";import"../chunks/WatchUpdatingTracking.js";import"../chunks/multiOriginJSONSupportUtils.js";import"../chunks/mat4.js";import"../chunks/pe.js";import"../chunks/assets.js";import"../chunks/geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"../chunks/zscale.js";import"../chunks/jsonUtils.js";import"../chunks/parser.js";import"../chunks/mat4f32.js";import"../chunks/_commonjsHelpers.js";import"../chunks/commonProperties2.js";import"../TimeExtent.js";import"../chunks/timeUtils.js";import"../support/timeUtils.js";import"../chunks/ElevationInfo.js";import"../chunks/unitConversionUtils.js";import"../chunks/asyncUtils.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"./support/RouteStopSymbols.js";import"../chunks/utils4.js";import"../chunks/networkEnums.js";import"../rest/support/TravelMode.js";import"../geometry/support/normalizeUtils.js";import"../chunks/normalizeUtilsCommon.js";import"../chunks/simplify.js";import"../chunks/utils5.js";import"../chunks/utils11.js";import"../rest/support/FeatureSet.js";import"./support/Field.js";import"../chunks/domains.js";import"./support/CodedValueDomain.js";import"./support/Domain.js";import"./support/InheritedDomain.js";import"./support/RangeDomain.js";import"../chunks/fieldType.js";import"../rest/support/RouteSolveResult.js";import"../rest/support/NAMessage.js";import"../rest/support/GPMessage.js";import"../rest/support/RouteResult.js";import"../rest/support/DirectionsFeatureSet.js";import"../rest/support/DirectionsFeature.js";import"../rest/support/DirectionsEvent.js";import"../chunks/commonProperties3.js";import"../rest/support/DataLayer.js";import"../rest/support/NetworkFeatureSet.js";import"../rest/support/NetworkUrl.js";function Z(e){return e.length?e:null}function $(e){switch(e){case"esriGeometryPoint":return{type:"esriSMS",style:"esriSMSCircle",size:12,color:[0,0,0,0],outline:$("esriGeometryPolyline")};case"esriGeometryPolyline":return{type:"esriSLS",style:"esriSLSSolid",width:1,color:[0,0,0,0]};case"esriGeometryPolygon":return{type:"esriSFS",style:"esriSFSNull",outline:$("esriGeometryPolyline")}}}function X(e){return"layers"in e}async function ee(e){const t=K.WGS84;return await D(e.spatialReference,t),C(e,t)}function te(e,t){switch(t){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function re(e,t){return"decimal-degrees"===t||"points"===t||"unknown"===t?e:b(e,t,"meters")}const oe=i.ofType(V),se=i.ofType(G),ie=i.ofType(J),ne=i.ofType(E),le=i.ofType(q),ae=i.ofType(Q),pe="esri.layers.RouteLayer",me=a.getLogger(pe);let ue=class extends(L(U(R(N(y(l(B))))))){constructor(e){super(e),this._cachedServiceDescription=null,this._featureCollection=null,this._type="Feature Collection",this.defaultSymbols=new O,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new ie,this.polygonBarriers=new ne,this.polylineBarriers=new le,this.routeInfo=null,this.spatialReference=K.WGS84,this.stops=new ae,this.type="route";const t=()=>{this._setStopSymbol(this.stops)};this.addHandles(h((()=>this.stops),"change",t,{sync:!0,onListenerAdd:t}))}writeFeatureCollectionWebmap(e,t,r,o){const s=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter((e=>!!e)),i=s.map(((e,t)=>t)),n="web-map"===o.origin?"featureCollection.layers":"layers";d(n,s,t),t.opacity=this.opacity,t.visibility=this.visible,t.visibleLayers=i}readDirectionLines(e,t){return this._getNetworkFeatures(t,"DirectionLines",(e=>V.fromGraphic(e)))}readDirectionPoints(e,t){return this._getNetworkFeatures(t,"DirectionPoints",(e=>G.fromGraphic(e)))}get fullExtent(){const e=new I({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:K.WGS84});if(p(this.routeInfo)&&p(this.routeInfo.geometry))return this.routeInfo.geometry.extent??e;if(m(this.stops))return e;const t=this.stops.filter((e=>p(e.geometry)));if(t.length<2)return e;const{spatialReference:r}=t.getItemAt(0).geometry;if(m(r))return e;const o=t.toArray().map((e=>{const t=e.geometry;return[t.x,t.y]}));return new Y({points:o,spatialReference:r}).extent}readMaxScale(e,t){const r=X(t)?t.layers:t.featureCollection?.layers,o=r?.find((e=>p(e.layerDefinition.maxScale)));return o?.layerDefinition.maxScale??0}readMinScale(e,t){const r=X(t)?t.layers:t.featureCollection?.layers,o=r?.find((e=>p(e.layerDefinition.minScale)));return o?.layerDefinition.minScale??0}readPointBarriers(e,t){return this._getNetworkFeatures(t,"Barriers",(e=>J.fromGraphic(e)))}readPolygonBarriers(e,t){return this._getNetworkFeatures(t,"PolygonBarriers",(e=>E.fromGraphic(e)))}readPolylineBarriers(e,t){return this._getNetworkFeatures(t,"PolylineBarriers",(e=>q.fromGraphic(e)))}readRouteInfo(e,t){const r=this._getNetworkFeatures(t,"RouteInfo",(e=>W.fromGraphic(e)));return r.length>0?r.getItemAt(0):null}readSpatialReference(e,t){const r=X(t)?t.layers:t.featureCollection?.layers;if(!r?.length)return K.WGS84;const{layerDefinition:o,featureSet:s}=r[0],i=s.features[0],n=u(i?.geometry)?.spatialReference??s.spatialReference??o.spatialReference??o.extent.spatialReference??j;return K.fromJSON(n)}readStops(e,t){return this._getNetworkFeatures(t,"Stops",(e=>Q.fromGraphic(e)),(e=>this._setStopSymbol(e)))}get title(){return p(this.routeInfo)&&p(this.routeInfo.name)?this.routeInfo.name:"Route"}set title(e){this._overrideIfSome("title",e)}get url(){return t.routeServiceUrl}set url(e){null!=e?this._set("url",_(e,me)):this._set("url",t.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){this.removeResult(),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}removeResult(){p(this.directionLines)&&(this.directionLines.removeAll(),this._set("directionLines",null)),p(this.directionPoints)&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),p(this.routeInfo)&&this._set("routeInfo",null)}async save(){await this.load();const{fullExtent:e,portalItem:t}=this;if(!t)throw new n("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!t.id)throw new n("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if("Feature Collection"!==t.type)throw new n("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(m(this.routeInfo))throw new n("routelayer:route-unsolved","save() requires a solved route");const{portal:r}=t;await r.signIn(),r.user||await t.reload();const{itemUrl:o,itemControl:s}=t;if("admin"!==s&&"update"!==s)throw new n("routelayer:insufficient-permissions","To save this layer, you need to be the owner or an administrator of your organization");const i={messages:[],origin:"portal-item",portal:r,url:o?S(o):void 0,writtenProperties:[]},l=this.write(void 0,i);return t.extent=await ee(e),t.title=this.title,await t.update({data:l}),t}async saveAs(e,t={}){if(await this.load(),m(this.routeInfo))throw new n("routelayer:route-unsolved","saveAs() requires a solved route");const r=T.from(e).clone();r.extent??(r.extent=await ee(this.fullExtent)),r.id=null,r.portal??(r.portal=F.getDefault()),r.title??(r.title=this.title),r.type="Feature Collection",r.typeKeywords=["Data","Feature Collection",x.MULTI_LAYER,"Route Layer"];const{portal:o}=r,s={messages:[],origin:"portal-item",portal:o,url:null,writtenProperties:[]};await o.signIn();const i=t?.folder,l=this.write(void 0,s);return await(o.user?.addItem({item:r,folder:i,data:l})),this.portalItem=r,P(s),s.portalItem=r,r}async solve(e,t){const r=e?.stops??this.stops,o=e?.pointBarriers??Z(this.pointBarriers),s=e?.polylineBarriers??Z(this.polylineBarriers),l=e?.polygonBarriers??Z(this.polygonBarriers);if(m(r))throw new n("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if(("esri.rest.support.FeatureSet"===r.declaredClass||"esri.rest.support.NetworkFeatureSet"===r.declaredClass)&&r.features.length<2||i.isCollection(r)&&r.length<2)throw new n("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");if(i.isCollection(r))for(const e of r)e.routeName=null;const a=e?.apiKey,y=this.url,d=await this._getServiceDescription(y,a,t),h=e?.travelMode??d.defaultTravelMode,j=u(e?.accumulateAttributes)??[];p(h)&&(j.push(h.distanceAttributeName),h.timeAttributeName&&j.push(h.timeAttributeName));const b={startTime:new Date},S={accumulateAttributes:j,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:o,polylineBarriers:s,polygonBarriers:l,preserveFirstStop:!0,preserveLastStop:!0,returnBarriers:!!o,returnDirections:!0,returnPolygonBarriers:!!l,returnPolylineBarriers:!!s,returnRoutes:!0,returnStops:!0,stops:r},g=e?H.from(e):new H;for(const e in b)null==g[e]&&(g[e]=b[e]);let w;g.set(S);try{w=await A(y,g,t)}catch(e){throw f(e)?e:new n("routelayer:failed-route-request","the routing request failed",{error:e})}const k=this._toRouteLayerSolution(w);return this._isOverridden("title")||(this.title=c(k.routeInfo.name,"Route")),function(e,t,r){const o=t.networkDataset?.networkAttributes,s=o?.filter((({usageType:e})=>"cost"===e))??[],i=r.travelMode??t.defaultTravelMode;if(m(i))return void me.warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:l,distanceAttributeName:a}=i,c=s.find((({name:e})=>e===l)),y=s.find((({name:e})=>e===a)),d=u(r.travelMode)?.impedanceAttributeName??u(r.impedanceAttribute)??t.impedance,f=c?.units,h=y?.units;if(!f||!h)throw new n("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const j=r.directionsLanguage??t.directionsLanguage,b=u(r.accumulateAttributes)??t.accumulateAttributeNames??[],S=new Set(s.filter((({name:e})=>e===l||e===a||e===d||null!=e&&b.includes(e))).map((({name:e})=>e))),g=e=>{for(const t in e)S.has(t)||delete e[t]};for(const t of e.pointBarriers)p(t.costs)&&(t.addedCost=t.costs[d]??0,g(t.costs));for(const t of e.polygonBarriers)p(t.costs)&&(t.scaleFactor=t.costs[d]??1,g(t.costs));for(const t of e.polylineBarriers)p(t.costs)&&(t.scaleFactor=t.costs[d]??1,g(t.costs));const{routeInfo:w}=e,{findBestSequence:k,preserveFirstStop:v,preserveLastStop:P,startTimeIsUTC:I,timeWindowsAreUTC:D}=r;w.analysisSettings=new z({accumulateAttributes:b,directionsLanguage:j,findBestSequence:k,preserveFirstStop:v,preserveLastStop:P,startTimeIsUTC:I,timeWindowsAreUTC:D,travelMode:i}),w.totalDuration=te(w.totalCosts?.[l]??0,f),w.totalDistance=re(w.totalCosts?.[a]??0,h),w.totalLateDuration=te(w.totalViolations?.[l]??0,f),w.totalWaitDuration=te(w.totalWait?.[l]??0,f),p(w.totalCosts)&&g(w.totalCosts),p(w.totalViolations)&&g(w.totalViolations),p(w.totalWait)&&g(w.totalWait);for(const t of e.stops)p(t.serviceCosts)&&(t.serviceDuration=te(t.serviceCosts[l]??0,f),t.serviceDistance=re(t.serviceCosts[a]??0,h),g(t.serviceCosts)),p(t.cumulativeCosts)&&(t.cumulativeDuration=te(t.cumulativeCosts[l]??0,f),t.cumulativeDistance=re(t.cumulativeCosts[a]??0,h),g(t.cumulativeCosts)),p(t.violations)&&(t.lateDuration=te(t.violations[l]??0,f),g(t.violations)),p(t.wait)&&(t.waitDuration=te(t.wait[l]??0,f),g(t.wait))}(k,d,g),k}update(e){const{stops:t,directionLines:r,directionPoints:o,pointBarriers:s,polylineBarriers:i,polygonBarriers:n,routeInfo:l}=e;this.set({stops:t,pointBarriers:s,polylineBarriers:i,polygonBarriers:n}),this._set("directionLines",r),this._set("directionPoints",o),this._set("routeInfo",l),p(l.geometry)&&(this.spatialReference=l.geometry.spatialReference)}_getNetworkFeatures(e,t,n,l){const a=X(e)?e.layers:e.featureCollection?.layers,u=a?.find((e=>e.layerDefinition.name===t));if(m(u))return new i;const{layerDefinition:c,popupInfo:y,featureSet:d}=u,f=c.drawingInfo.renderer,{features:h}=d,b=d.spatialReference??c.spatialReference??c.extent.spatialReference??j,S=f&&s(f),g=K.fromJSON(b),w=h.map((e=>{const s=r.fromJSON(e);p(s.geometry)&&p(e.geometry)&&m(e.geometry.spatialReference)&&(s.geometry.spatialReference=g);const i=n(s);return i.symbol??(i.symbol=S?.getSymbol(s)??this._getNetworkSymbol(t)),i.popupTemplate??(i.popupTemplate=y&&o.fromJSON(y)),i}));return l&&w.some((e=>!e.symbol))&&l(w),new i(w)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}async _getServiceDescription(e,t,r){if(p(this._cachedServiceDescription)&&this._cachedServiceDescription.url===e)return this._cachedServiceDescription.serviceDescription;const o=await M(e,t,r);return this._cachedServiceDescription={serviceDescription:o,url:e},o}_setStopSymbol(e){if(!e||0===e.length)return;if(m(this.defaultSymbols.stops))return;if(e.every((e=>p(e.symbol))))return;const{first:t,last:r,middle:o,unlocated:s,waypoint:i,break:n}=this.defaultSymbols.stops;if(m(this.routeInfo)||1===e.length)return void e.forEach(((s,i)=>{switch(i){case 0:s.symbol=t;break;case e.length-1:s.symbol=r;break;default:s.symbol=o}}));const l=e.map((e=>e.sequence)).filter((e=>p(e))),a=Math.min(...l),u=Math.max(...l);for(const l of e)l.sequence!==a?l.sequence!==u?"ok"===l.status||"not-located-on-closest"===l.status?"waypoint"!==l.locationType?"break"!==l.locationType?l.symbol=o:l.symbol=n:l.symbol=i:l.symbol=s:l.symbol=r:l.symbol=t}_toRouteLayerSolution(e){const t=e.routeResults[0].stops?.map((e=>Q.fromJSON(e.toJSON())));this._setStopSymbol(t);const r=new ae(t),o=new ne(e.polygonBarriers?.map((e=>{const t=E.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.polygonBarriers,t}))),s=new le(e.polylineBarriers?.map((e=>{const t=q.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.polylineBarriers,t}))),i=new ie(e.pointBarriers?.map((e=>{const t=J.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.pointBarriers,t}))),n=e.routeResults[0].route?.toJSON(),l=W.fromJSON(n);l.symbol=this.defaultSymbols.routeInfo;const a=new se(e.routeResults[0].directionPoints?.features.map((e=>{const t=G.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.directionPoints,t})));return{directionLines:new oe(e.routeResults[0].directionLines?.features.map((e=>{const t=V.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.directionLines,t}))),directionPoints:a,pointBarriers:i,polygonBarriers:o,polylineBarriers:s,routeInfo:l,stops:r}}_writeDirectionLines(){return this._writeNetworkFeatures(this.directionLines,this.defaultSymbols.directionLines,"esriGeometryPolyline",V.fields,V.popupInfo,"DirectionLines","Direction Lines")}_writeDirectionPoints(){return this._writeNetworkFeatures(this.directionPoints,this.defaultSymbols.directionPoints,"esriGeometryPoint",G.fields,G.popupInfo,"DirectionPoints","Direction Points")}_writeNetworkFeatures(e,t,r,o,s,i,n){if(m(e)||!e.length)return null;const l=this.spatialReference.toJSON(),{fullExtent:a,maxScale:u,minScale:c}=this;return{featureSet:{features:e.toArray().map((e=>function(e){const{attributes:t,geometry:r,popupTemplate:o,symbol:s}=e.toGraphic().toJSON();return{attributes:t,geometry:r,popupInfo:o,symbol:s}}(e))),geometryType:r,spatialReference:l},layerDefinition:{capabilities:"Query,Update,Editing",drawingInfo:{renderer:{type:"simple",symbol:p(t)?t.toJSON():$(r)}},extent:a.toJSON(),fields:o,geometryType:r,hasM:!1,hasZ:!1,maxScale:u,minScale:c,name:i,objectIdField:"ObjectID",spatialReference:l,title:n,type:"Feature Layer",typeIdField:""},popupInfo:s}}_writePointBarriers(){return this._writeNetworkFeatures(this.pointBarriers,this.defaultSymbols.pointBarriers,"esriGeometryPoint",J.fields,J.popupInfo,"Barriers","Point Barriers")}_writePolygonBarriers(){return this._writeNetworkFeatures(this.polygonBarriers,this.defaultSymbols.polygonBarriers,"esriGeometryPolygon",E.fields,E.popupInfo,"PolygonBarriers","Polygon Barriers")}_writePolylineBarriers(){return this._writeNetworkFeatures(this.polylineBarriers,this.defaultSymbols.polylineBarriers,"esriGeometryPolyline",q.fields,q.popupInfo,"PolylineBarriers","Line Barriers")}_writeRouteInfo(){return this._writeNetworkFeatures(p(this.routeInfo)?new i([this.routeInfo]):null,this.defaultSymbols.routeInfo,"esriGeometryPolyline",W.fields,W.popupInfo,"RouteInfo","Route Details")}_writeStops(){const e=this._writeNetworkFeatures(this.stops,null,"esriGeometryPoint",Q.fields,Q.popupInfo,"Stops","Stops");if(m(e))return null;const{stops:t}=this.defaultSymbols,r=p(t)&&p(t.first)&&t.first.toJSON(),o=p(t)&&p(t.middle)&&t.middle.toJSON(),s=p(t)&&p(t.last)&&t.last.toJSON();return e.layerDefinition.drawingInfo.renderer={type:"uniqueValue",field1:"Sequence",defaultSymbol:o,uniqueValueInfos:[{value:"1",symbol:r,label:"First Stop"},{value:`${this.stops.length}`,symbol:s,label:"Last Stop"}]},e}};e([g({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:null==this.portalItem}}}}}}})],ue.prototype,"_featureCollection",void 0),e([v(["web-map","portal-item"],"_featureCollection")],ue.prototype,"writeFeatureCollectionWebmap",null),e([g({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:null!=this.portalItem}}}}}}})],ue.prototype,"_type",void 0),e([g({nonNullable:!0,type:O})],ue.prototype,"defaultSymbols",void 0),e([g({readOnly:!0})],ue.prototype,"directionLines",void 0),e([w(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],ue.prototype,"readDirectionLines",null),e([g({readOnly:!0})],ue.prototype,"directionPoints",void 0),e([w(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],ue.prototype,"readDirectionPoints",null),e([g({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],ue.prototype,"featureCollectionType",void 0),e([g({readOnly:!0})],ue.prototype,"fullExtent",null),e([g({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],ue.prototype,"legendEnabled",void 0),e([g({type:["show","hide"]})],ue.prototype,"listMode",void 0),e([g({type:Number,nonNullable:!0,json:{write:!1}})],ue.prototype,"maxScale",void 0),e([w(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],ue.prototype,"readMaxScale",null),e([g({type:Number,nonNullable:!0,json:{write:!1}})],ue.prototype,"minScale",void 0),e([w(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],ue.prototype,"readMinScale",null),e([g({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],ue.prototype,"operationalLayerType",void 0),e([g({nonNullable:!0,type:i.ofType(J)})],ue.prototype,"pointBarriers",void 0),e([w(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],ue.prototype,"readPointBarriers",null),e([g({nonNullable:!0,type:i.ofType(E)})],ue.prototype,"polygonBarriers",void 0),e([w(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],ue.prototype,"readPolygonBarriers",null),e([g({nonNullable:!0,type:i.ofType(q)})],ue.prototype,"polylineBarriers",void 0),e([w(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],ue.prototype,"readPolylineBarriers",null),e([g({readOnly:!0})],ue.prototype,"routeInfo",void 0),e([w(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],ue.prototype,"readRouteInfo",null),e([g({type:K})],ue.prototype,"spatialReference",void 0),e([w(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],ue.prototype,"readSpatialReference",null),e([g({nonNullable:!0,type:i.ofType(Q)})],ue.prototype,"stops",void 0),e([w(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],ue.prototype,"readStops",null),e([g()],ue.prototype,"title",null),e([g({readOnly:!0,json:{read:!1}})],ue.prototype,"type",void 0),e([g()],ue.prototype,"url",null),ue=e([k(pe)],ue);const ce=ue;export{ce as default};
