/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../Color.js";import{h as s}from"../../chunks/handleUtils.js";import{a as r,g as o,e as i,i as n}from"../../chunks/maybe.js";import{m as c}from"../../chunks/memoize.js";import{watch as p,on as a}from"../../core/reactiveUtils.js";import{u}from"../../chunks/watch.js";import{j as l,B as m}from"../../chunks/unitUtils.js";import{property as h}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/ensureType.js";import"../../chunks/typedArrayUtil.js";import{subclass as j}from"../../core/accessorSupport/decorators/subclass.js";import{s as d}from"../../chunks/vec3.js";import{c as y}from"../../chunks/vec4f64.js";import{c as k,g as v}from"../../chunks/ray.js";import{GeometryDescriptor as f}from"../../chunks/ElevationQuery.js";import{a as g,S as _}from"../../chunks/Intersector2.js";import{t as w}from"../../chunks/intersectorUtilsConversions.js";import I from"./ElevationProfileLine.js";import"../../chunks/colorUtils.js";import"../../chunks/mathUtils.js";import"../../chunks/vec4.js";import"../../chunks/common.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/object.js";import"../../core/lang.js";import"../../chunks/string.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../chunks/ArrayPool.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/tracking.js";import"../../chunks/jsonMap.js";import"../../chunks/Ellipsoid.js";import"../../chunks/metadata.js";import"../../chunks/byteSizeEstimations.js";import"../../chunks/mat3f64.js";import"../../chunks/mat4f64.js";import"../../chunks/quatf64.js";import"../../chunks/vec2f64.js";import"../../chunks/asyncUtils.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../geometry/Multipoint.js";import"../../chunks/writer.js";import"../../geometry/Extent.js";import"../../geometry/Geometry.js";import"../../core/JSONSupport.js";import"../../chunks/reader.js";import"../../geometry/SpatialReference.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/zmUtils.js";import"../../geometry/Polyline.js";import"../../chunks/extentUtils.js";import"../../chunks/aaBoundingRect.js";import"../../geometry/projection.js";import"../../chunks/SimpleObservable.js";import"../../chunks/mat4.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../geometry/Polygon.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/zscale.js";import"../../layers/support/ElevationSampler.js";import"../../geometry.js";import"../../chunks/typeUtils.js";import"../../geometry/support/jsonUtils.js";import"../../chunks/ElevationSamplerData.js";import"../../chunks/TileKey.js";import"../../chunks/ViewingMode.js";import"../../chunks/boundedPlane.js";import"../../chunks/vector.js";import"../../chunks/lineSegment.js";import"../../chunks/plane.js";import"../../chunks/mathUtils2.js";import"../../chunks/verticalOffsetUtils.js";import"../../chunks/mat3.js";import"../../chunks/quat.js";import"../../chunks/vec3f32.js";import"../../chunks/sphere.js";import"../../chunks/aaBoundingBox.js";import"../../chunks/Intersector.js";import"../../chunks/Intersector3.js";import"../../core/Evented.js";import"../../chunks/uuid.js";import"../../chunks/Material.js";import"../../chunks/interfaces2.js";import"../../chunks/VertexAttribute.js";import"../../chunks/Util2.js";let x=class extends I{constructor(e){super(e),this.type="view",this.color=new t("#cf4ccf"),this.viewVisualizationEnabled=!0,this.include=null,this.exclude=null,this.numSamplesForPreview=50,this.numSamplesPerChunk=25,this._getQueryElevationDependencies=c(((e,t,s,r,o,i,c)=>({inputGraphicUid:n(e)?b(e):null,visibleLayers:t,maxIntersectionDistance:s,intersectOptions:r,view:o,stationary:i,spatialReference:c}))),this._vecA=y(),this._vecB=y(),this._ray=k()}get minDemResolution(){const e=this._viewModel?.view;if(r(e)||"3d"!==e.type)return null;const t=e.pointsOfInterest?.focus?.renderLocation;return t?e.state.camera.computeRenderPixelSizeAt(t)*l(e.spatialReference):null}get queryElevationDependencies(){return o(this._view,(e=>this._getQueryElevationDependencies(this._viewModel?.input,this._visibleLayers,this._maxIntersectionDistance,this._intersectOptions,e,e.stationary,e.spatialReference)))}get _visibleLayers(){const e=this._view,t=o(e,(e=>e.map?.allLayers?.filter((e=>e.visible)).toArray()));return i(t,[])}get _intersectOptions(){const e=this._view;if(r(e))return{};const t=e.externalToInternalIntersectOptions({include:this.include,exclude:this.exclude}),s=e.externalToInternalIntersectOptions({exclude:this._pointCloudLayers});return t.exclude=u(t.exclude,s.exclude),t}get _pointCloudLayers(){const e=this._view;return r(e)?[]:e.allLayerViews.toArray().filter((e=>"point-cloud"===e.layer?.type)).map((e=>e.layer))}get _view(){const e=this._viewModel?.view;return n(e)&&"3d"===e.type?e:null}get _maxIntersectionDistance(){const e=this._view;return r(e)||!e.renderCoordsHelper?Number.POSITIVE_INFINITY:m(e.spatialReference).radius/e.renderCoordsHelper.unitInMeters}get _intersector(){const e=this._view;if(r(e))return null;const t=g(e.state.viewingMode),s=t.options;return s.hud=!1,s.invisibleTerrain=!1,s.backfacesTerrain=!1,s.selectionMode=!1,s.store=_.ALL,t}async queryElevation(e,{noDataValue:t,signal:s}){const o=this.queryElevationDependencies;if(r(o))throw new Error("ElevationProfileLineInput: no dependencies");const i=this._intersector;if(r(i))throw new Error("ElevationProfileLineInput: no view");const{intersectOptions:n,view:c,spatialReference:p}=o,a=c.renderCoordsHelper,u=c.sceneIntersectionHelper,l=this._vecA,m=this._vecA,h=this._vecB,j=this._ray;if(!p)return{geometry:e,noDataValue:t};const y=await f.fromGeometry(e).project(p,s);if(!y)return{geometry:e,noDataValue:t};const k=y.coordinates,g=k.length;for(let e=0;e<g;++e){const s=k[e];d(h,s.x,s.y,s.z??0),a.toRenderCoords(h,p,h),a.setAltitude(l,2e5,h);const r=v(l,h,j);u.computeIntersection(r,i,n);const c=E(o,i.results.all);c?(c.getIntersectionPoint(m),a.fromRenderCoords(m,m,p),s.z=m[2]):s.z=t}return{geometry:y.export(),noDataValue:t}}attach(e){const t=()=>this._onChange();return s([super.attach(e),p((()=>this.queryElevationDependencies),t),a((()=>e.elevationProvider),"elevation-change",t,{onListenerAdd:t,onListenerRemove:t})])}};function E({view:e,inputGraphicUid:t,maxIntersectionDistance:s},o){for(const i of o){if(null!=i.distanceInRenderSpace&&i.distanceInRenderSpace>s)continue;const o=w(i,e);if(r(o)||b(o)!==t)return i}return null}function b(e){if(e.layer&&"objectIdField"in e.layer){const t=e.attributes[e.layer.objectIdField];if(t)return`o-${e.layer.id}-${t}`}return`u-${e.uid}`}e([h({type:t,nonNullable:!0})],x.prototype,"color",void 0),e([h()],x.prototype,"viewVisualizationEnabled",void 0),e([h()],x.prototype,"include",void 0),e([h()],x.prototype,"exclude",void 0),e([h({readOnly:!0})],x.prototype,"minDemResolution",null),e([h()],x.prototype,"queryElevationDependencies",null),e([h()],x.prototype,"_visibleLayers",null),e([h()],x.prototype,"_intersectOptions",null),e([h()],x.prototype,"_pointCloudLayers",null),e([h()],x.prototype,"_view",null),e([h()],x.prototype,"_maxIntersectionDistance",null),e([h()],x.prototype,"_intersector",null),x=e([j("esri.widgets.ElevationProfile.ElevationProfileLineView")],x);const U=x;export{U as default};
